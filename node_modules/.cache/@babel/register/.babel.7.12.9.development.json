{
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = require(\"body-parser\");\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nrequire(\"dotenv\").config();\n\nvar helmet = require(\"helmet\");\n\nvar userRouter = require(\"./api/users/user.router\");\n\nvar businessRouter = require(\"./api/Businesses/business.router\");\n\nvar UserRouter = require(\"./api/Login&Register/login.router\");\n\nvar CompanyRouter = require(\"./api/companies/company.router\");\n\nvar ContactRouter = require(\"./api/ContactUs/contactUs.router\");\n\nvar FilesRouter = require(\"./api/FileUploader/fileUploader.router\");\n\nvar app = (0, _express[\"default\"])(); //Middleware\n\napp.use(helmet());\napp.use((0, _bodyParser.json)());\napp.use((0, _cors[\"default\"])()); //routers\n\napp.use(\"/\", userRouter);\napp.use(\"/\", businessRouter);\napp.use(\"/\", UserRouter);\napp.use(\"/\", ContactRouter);\napp.use(\"/\", FilesRouter);\napp.use(\"/\", CompanyRouter);\napp.use(function (err, req, res, next) {\n  console.log(err);\n\n  if (err.code === \"INCORRECT_FILETYPE\") {\n    return res.status(422).json({\n      Status: false,\n      Message: \"Only Images Allowed ! \"\n    });\n  }\n\n  if (err.code === \"LIMIT_FILE_SIZE\") {\n    return res.status(422).json({\n      Status: false,\n      Message: \"Allowed File Size is 500KB \"\n    });\n  }\n}); //Handel Production\n\nif (process.env.NODE_ENV === \"production\") {\n  app.use(_express[\"default\"][\"static\"](__dirname + \"/public/\")); //Handel SPA\n\n  app.get(/.*/, function (req, res) {\n    res.send(__dirname + '/public/index.html');\n  });\n}\n\nvar port = process.env.PORT || 5000;\nvar host = process.env.HOST || localhost;\napp.listen(port, host, function () {\n  return console.log(\"Server running in \".concat(host, \" at prot \").concat(port));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiaGVsbWV0IiwidXNlclJvdXRlciIsImJ1c2luZXNzUm91dGVyIiwiVXNlclJvdXRlciIsIkNvbXBhbnlSb3V0ZXIiLCJDb250YWN0Um91dGVyIiwiRmlsZXNSb3V0ZXIiLCJhcHAiLCJ1c2UiLCJlcnIiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsImNvZGUiLCJzdGF0dXMiLCJqc29uIiwiU3RhdHVzIiwiTWVzc2FnZSIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImV4cHJlc3MiLCJfX2Rpcm5hbWUiLCJnZXQiLCJzZW5kIiwicG9ydCIsIlBPUlQiLCJob3N0IiwiSE9TVCIsImxvY2FsaG9zdCIsImxpc3RlbiJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUhBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFJQSxJQUFNQyxNQUFNLEdBQUdGLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1HLFVBQVUsR0FBR0gsT0FBTyxDQUFDLHlCQUFELENBQTFCOztBQUNBLElBQU1JLGNBQWMsR0FBR0osT0FBTyxDQUFDLGtDQUFELENBQTlCOztBQUNBLElBQU1LLFVBQVUsR0FBR0wsT0FBTyxDQUFDLG1DQUFELENBQTFCOztBQUNBLElBQU1NLGFBQWEsR0FBR04sT0FBTyxDQUFDLGdDQUFELENBQTdCOztBQUNBLElBQU1PLGFBQWEsR0FBR1AsT0FBTyxDQUFDLGtDQUFELENBQTdCOztBQUNBLElBQU1RLFdBQVcsR0FBR1IsT0FBTyxDQUFDLHdDQUFELENBQTNCOztBQUNBLElBQU1TLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRUixNQUFNLEVBQWQ7QUFDQU8sR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVI7QUFDQUQsR0FBRyxDQUFDQyxHQUFKLENBQVEsdUJBQVIsRSxDQUVBOztBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUSxHQUFSLEVBQWFQLFVBQWI7QUFDQU0sR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhTixjQUFiO0FBQ0FLLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYUwsVUFBYjtBQUNBSSxHQUFHLENBQUNDLEdBQUosQ0FBUSxHQUFSLEVBQWFILGFBQWI7QUFDQUUsR0FBRyxDQUFDQyxHQUFKLENBQVEsR0FBUixFQUFhRixXQUFiO0FBQ0FDLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYUosYUFBYjtBQUNBRyxHQUFHLENBQUNDLEdBQUosQ0FBUSxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsR0FBWCxFQUFnQkMsSUFBaEIsRUFBeUI7QUFDL0JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTCxHQUFaOztBQUNBLE1BQUlBLEdBQUcsQ0FBQ00sSUFBSixLQUFhLG9CQUFqQixFQUF1QztBQUNyQyxXQUFPSixHQUFHLENBQ1BLLE1BREksQ0FDRyxHQURILEVBRUpDLElBRkksQ0FFQztBQUFFQyxNQUFBQSxNQUFNLEVBQUUsS0FBVjtBQUFpQkMsTUFBQUEsT0FBTyxFQUFFO0FBQTFCLEtBRkQsQ0FBUDtBQUdEOztBQUNELE1BQUlWLEdBQUcsQ0FBQ00sSUFBSixLQUFhLGlCQUFqQixFQUFvQztBQUNsQyxXQUFPSixHQUFHLENBQ1BLLE1BREksQ0FDRyxHQURILEVBRUpDLElBRkksQ0FFQztBQUFFQyxNQUFBQSxNQUFNLEVBQUUsS0FBVjtBQUFpQkMsTUFBQUEsT0FBTyxFQUFFO0FBQTFCLEtBRkQsQ0FBUDtBQUdEO0FBQ0YsQ0FaRCxFLENBY0E7O0FBQ0EsSUFBSUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosS0FBeUIsWUFBN0IsRUFBMkM7QUFDekNmLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRZSw4QkFBZUMsU0FBUyxHQUFHLFVBQTNCLENBQVIsRUFEeUMsQ0FHekM7O0FBQ0FqQixFQUFBQSxHQUFHLENBQUNrQixHQUFKLENBQVEsSUFBUixFQUFlLFVBQUNmLEdBQUQsRUFBT0MsR0FBUCxFQUFjO0FBQzNCQSxJQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBU0YsU0FBUyxHQUFHLG9CQUFyQjtBQUNELEdBRkQ7QUFHRDs7QUFFRCxJQUFNRyxJQUFJLEdBQUdQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTyxJQUFaLElBQW9CLElBQWpDO0FBQ0EsSUFBTUMsSUFBSSxHQUFHVCxPQUFPLENBQUNDLEdBQVIsQ0FBWVMsSUFBWixJQUFvQkMsU0FBakM7QUFFQXhCLEdBQUcsQ0FBQ3lCLE1BQUosQ0FBV0wsSUFBWCxFQUFpQkUsSUFBakIsRUFBdUI7QUFBQSxTQUNyQmhCLE9BQU8sQ0FBQ0MsR0FBUiw2QkFBaUNlLElBQWpDLHNCQUFpREYsSUFBakQsRUFEcUI7QUFBQSxDQUF2QiIsInNvdXJjZVJvb3QiOiJEOlxcUHJvamVjdFxcV2ViU2l0ZXNcXERhbGlsa1xcc2VydmVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwiZG90ZW52XCIpLmNvbmZpZygpO1xyXG5pbXBvcnQgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xyXG5pbXBvcnQgeyBqc29uIH0gZnJvbSBcImJvZHktcGFyc2VyXCI7XHJcbmltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCI7XHJcbmNvbnN0IGhlbG1ldCA9IHJlcXVpcmUoXCJoZWxtZXRcIik7XHJcbmNvbnN0IHVzZXJSb3V0ZXIgPSByZXF1aXJlKFwiLi9hcGkvdXNlcnMvdXNlci5yb3V0ZXJcIik7XHJcbmNvbnN0IGJ1c2luZXNzUm91dGVyID0gcmVxdWlyZShcIi4vYXBpL0J1c2luZXNzZXMvYnVzaW5lc3Mucm91dGVyXCIpO1xyXG5jb25zdCBVc2VyUm91dGVyID0gcmVxdWlyZShcIi4vYXBpL0xvZ2luJlJlZ2lzdGVyL2xvZ2luLnJvdXRlclwiKTtcclxuY29uc3QgQ29tcGFueVJvdXRlciA9IHJlcXVpcmUoXCIuL2FwaS9jb21wYW5pZXMvY29tcGFueS5yb3V0ZXJcIik7XHJcbmNvbnN0IENvbnRhY3RSb3V0ZXIgPSByZXF1aXJlKFwiLi9hcGkvQ29udGFjdFVzL2NvbnRhY3RVcy5yb3V0ZXJcIik7XHJcbmNvbnN0IEZpbGVzUm91dGVyID0gcmVxdWlyZShcIi4vYXBpL0ZpbGVVcGxvYWRlci9maWxlVXBsb2FkZXIucm91dGVyXCIpO1xyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG4vL01pZGRsZXdhcmVcclxuYXBwLnVzZShoZWxtZXQoKSk7XHJcbmFwcC51c2UoanNvbigpKTtcclxuYXBwLnVzZShjb3JzKCkpO1xyXG5cclxuLy9yb3V0ZXJzXHJcbmFwcC51c2UoXCIvXCIsIHVzZXJSb3V0ZXIpO1xyXG5hcHAudXNlKFwiL1wiLCBidXNpbmVzc1JvdXRlcik7XHJcbmFwcC51c2UoXCIvXCIsIFVzZXJSb3V0ZXIpO1xyXG5hcHAudXNlKFwiL1wiLCBDb250YWN0Um91dGVyKTtcclxuYXBwLnVzZShcIi9cIiwgRmlsZXNSb3V0ZXIpO1xyXG5hcHAudXNlKFwiL1wiLCBDb21wYW55Um91dGVyKTtcclxuYXBwLnVzZSgoZXJyLCByZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gIGNvbnNvbGUubG9nKGVycik7XHJcbiAgaWYgKGVyci5jb2RlID09PSBcIklOQ09SUkVDVF9GSUxFVFlQRVwiKSB7XHJcbiAgICByZXR1cm4gcmVzXHJcbiAgICAgIC5zdGF0dXMoNDIyKVxyXG4gICAgICAuanNvbih7IFN0YXR1czogZmFsc2UsIE1lc3NhZ2U6IFwiT25seSBJbWFnZXMgQWxsb3dlZCAhIFwiIH0pO1xyXG4gIH1cclxuICBpZiAoZXJyLmNvZGUgPT09IFwiTElNSVRfRklMRV9TSVpFXCIpIHtcclxuICAgIHJldHVybiByZXNcclxuICAgICAgLnN0YXR1cyg0MjIpXHJcbiAgICAgIC5qc29uKHsgU3RhdHVzOiBmYWxzZSwgTWVzc2FnZTogXCJBbGxvd2VkIEZpbGUgU2l6ZSBpcyA1MDBLQiBcIiB9KTtcclxuICB9XHJcbn0pO1xyXG5cclxuLy9IYW5kZWwgUHJvZHVjdGlvblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiKSB7XHJcbiAgYXBwLnVzZShleHByZXNzLnN0YXRpYyhfX2Rpcm5hbWUgKyBcIi9wdWJsaWMvXCIpKTtcclxuXHJcbiAgLy9IYW5kZWwgU1BBXHJcbiAgYXBwLmdldCgvLiovICwgKHJlcSAsIHJlcykgPT57XHJcbiAgICByZXMuc2VuZChfX2Rpcm5hbWUgKyAnL3B1YmxpYy9pbmRleC5odG1sJylcclxuICB9KTtcclxufVxyXG5cclxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNTAwMDtcclxuY29uc3QgaG9zdCA9IHByb2Nlc3MuZW52LkhPU1QgfHwgbG9jYWxob3N0O1xyXG5cclxuYXBwLmxpc3Rlbihwb3J0LCBob3N0LCAoKSA9PlxyXG4gIGNvbnNvbGUubG9nKGBTZXJ2ZXIgcnVubmluZyBpbiAke2hvc3R9IGF0IHByb3QgJHtwb3J0fWApXHJcbik7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "require",
        "config",
        "helmet",
        "userRouter",
        "businessRouter",
        "UserRouter",
        "CompanyRouter",
        "ContactRouter",
        "FilesRouter",
        "app",
        "use",
        "err",
        "req",
        "res",
        "next",
        "console",
        "log",
        "code",
        "status",
        "json",
        "Status",
        "Message",
        "process",
        "env",
        "NODE_ENV",
        "express",
        "__dirname",
        "get",
        "send",
        "port",
        "PORT",
        "host",
        "HOST",
        "localhost",
        "listen"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;;;AAHAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAIA,IAAMC,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMG,UAAU,GAAGH,OAAO,CAAC,yBAAD,CAA1B;;AACA,IAAMI,cAAc,GAAGJ,OAAO,CAAC,kCAAD,CAA9B;;AACA,IAAMK,UAAU,GAAGL,OAAO,CAAC,mCAAD,CAA1B;;AACA,IAAMM,aAAa,GAAGN,OAAO,CAAC,gCAAD,CAA7B;;AACA,IAAMO,aAAa,GAAGP,OAAO,CAAC,kCAAD,CAA7B;;AACA,IAAMQ,WAAW,GAAGR,OAAO,CAAC,wCAAD,CAA3B;;AACA,IAAMS,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQR,MAAM,EAAd;AACAO,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,uBAAR,E,CAEA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaP,UAAb;AACAM,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaN,cAAb;AACAK,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaL,UAAb;AACAI,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaH,aAAb;AACAE,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaF,WAAb;AACAC,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaJ,aAAb;AACAG,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;;AACA,MAAIA,GAAG,CAACM,IAAJ,KAAa,oBAAjB,EAAuC;AACrC,WAAOJ,GAAG,CACPK,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAFD,CAAP;AAGD;;AACD,MAAIV,GAAG,CAACM,IAAJ,KAAa,iBAAjB,EAAoC;AAClC,WAAOJ,GAAG,CACPK,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAFD,CAAP;AAGD;AACF,CAZD,E,CAcA;;AACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCf,EAAAA,GAAG,CAACC,GAAJ,CAAQe,8BAAeC,SAAS,GAAG,UAA3B,CAAR,EADyC,CAGzC;;AACAjB,EAAAA,GAAG,CAACkB,GAAJ,CAAQ,IAAR,EAAe,UAACf,GAAD,EAAOC,GAAP,EAAc;AAC3BA,IAAAA,GAAG,CAACe,IAAJ,CAASF,SAAS,GAAG,oBAArB;AACD,GAFD;AAGD;;AAED,IAAMG,IAAI,GAAGP,OAAO,CAACC,GAAR,CAAYO,IAAZ,IAAoB,IAAjC;AACA,IAAMC,IAAI,GAAGT,OAAO,CAACC,GAAR,CAAYS,IAAZ,IAAoBC,SAAjC;AAEAxB,GAAG,CAACyB,MAAJ,CAAWL,IAAX,EAAiBE,IAAjB,EAAuB;AAAA,SACrBhB,OAAO,CAACC,GAAR,6BAAiCe,IAAjC,sBAAiDF,IAAjD,EADqB;AAAA,CAAvB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\",
      "sourcesContent": [
        "require(\"dotenv\").config();\r\nimport express from \"express\";\r\nimport { json } from \"body-parser\";\r\nimport cors from \"cors\";\r\nconst helmet = require(\"helmet\");\r\nconst userRouter = require(\"./api/users/user.router\");\r\nconst businessRouter = require(\"./api/Businesses/business.router\");\r\nconst UserRouter = require(\"./api/Login&Register/login.router\");\r\nconst CompanyRouter = require(\"./api/companies/company.router\");\r\nconst ContactRouter = require(\"./api/ContactUs/contactUs.router\");\r\nconst FilesRouter = require(\"./api/FileUploader/fileUploader.router\");\r\nconst app = express();\r\n\r\n//Middleware\r\napp.use(helmet());\r\napp.use(json());\r\napp.use(cors());\r\n\r\n//routers\r\napp.use(\"/\", userRouter);\r\napp.use(\"/\", businessRouter);\r\napp.use(\"/\", UserRouter);\r\napp.use(\"/\", ContactRouter);\r\napp.use(\"/\", FilesRouter);\r\napp.use(\"/\", CompanyRouter);\r\napp.use((err, req, res, next) => {\r\n  console.log(err);\r\n  if (err.code === \"INCORRECT_FILETYPE\") {\r\n    return res\r\n      .status(422)\r\n      .json({ Status: false, Message: \"Only Images Allowed ! \" });\r\n  }\r\n  if (err.code === \"LIMIT_FILE_SIZE\") {\r\n    return res\r\n      .status(422)\r\n      .json({ Status: false, Message: \"Allowed File Size is 500KB \" });\r\n  }\r\n});\r\n\r\n//Handel Production\r\nif (process.env.NODE_ENV === \"production\") {\r\n  app.use(express.static(__dirname + \"/public/\"));\r\n\r\n  //Handel SPA\r\n  app.get(/.*/ , (req , res) =>{\r\n    res.send(__dirname + '/public/index.html')\r\n  });\r\n}\r\n\r\nconst port = process.env.PORT || 5000;\r\nconst host = process.env.HOST || localhost;\r\n\r\napp.listen(port, host, () =>\r\n  console.log(`Server running in ${host} at prot ${port}`)\r\n);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611351883325
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\users\\\\user.router.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\user.router.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\user.router.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\user.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\",
        "sourceFileName": "user.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _user = require(\"./user.controller\");\n\nvar _auth = require(\"../../auth/auth.controller\");\n\nvar router = require(\"express\").Router();\n\nrouter.post(\"/api/users/createUser\", _user.createUser);\nrouter.get(\"/api/users/getUsers\", _user.getAllUsers);\nrouter.get(\"/api/users/CheckUserAuth\", _user.checkUserAuth);\nrouter.get(\"/api/users/getUserById\", _auth.VerifyToken, _user.getUserById);\nrouter.get(\"/api/users/getUserListings\", _auth.VerifyToken, _user.getUserListings);\nrouter.get(\"/api/users/getUserFaivoritFolders\", _auth.VerifyToken, _user.getUserFaivoritFolders);\nrouter.get(\"/api/users/getUserFaivoritPosts\", _auth.VerifyToken, _user.getUserFaivoritPosts);\nrouter.get(\"/api/users/getUserSavedPosts\", _auth.VerifyToken, _user.getUserSavedPosts);\nrouter.post(\"/api/users/updateUser\", _auth.VerifyToken, _user.updateUser);\nrouter.get(\"/api/users/getUserLikedPages\", _auth.VerifyToken, _user.getUserLikedPages);\nrouter.post(\"/api/users/changeCompanyFollowState\", _auth.VerifyToken, _user.changeCompanyFollowState);\nrouter.post(\"/api/users/changePostSavedState\", _auth.VerifyToken, _user.changePostSavedState);\nrouter.post(\"/api/users/updateUserFolder\", _auth.VerifyToken, _user.updateUserFolder);\nrouter.post(\"/api/users/DeleteUserFolder\", _auth.VerifyToken, _user.DeleteUserFolder);\nrouter.post(\"/api/users/addUserFolder\", _auth.VerifyToken, _user.addUserFolder);\nrouter.post(\"/api/users/SavePostToFaivorit\", _auth.VerifyToken, _user.SavePostToFaivorit);\nrouter.post(\"/api/users/DeleteFaivoritPost\", _auth.VerifyToken, _user.DeleteFaivoritPost);\nrouter.get(\"/api/users/GetUserChatContent\", _auth.VerifyToken, _user.GetUserChatContent);\nrouter.get(\"/api/users/GetUserChatMessages\", _auth.VerifyToken, _user.GetUserChatMessages);\nrouter.post(\"/api/users/SendChatMessage\", _auth.VerifyToken, _user.SendChatMessage);\nrouter.post(\"/api/users/UpdateUserImage\", _auth.VerifyToken, _user.UpdateUserImage);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIucm91dGVyLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJlcXVpcmUiLCJSb3V0ZXIiLCJwb3N0IiwiY3JlYXRlVXNlciIsImdldCIsImdldEFsbFVzZXJzIiwiY2hlY2tVc2VyQXV0aCIsIlZlcmlmeVRva2VuIiwiZ2V0VXNlckJ5SWQiLCJnZXRVc2VyTGlzdGluZ3MiLCJnZXRVc2VyRmFpdm9yaXRGb2xkZXJzIiwiZ2V0VXNlckZhaXZvcml0UG9zdHMiLCJnZXRVc2VyU2F2ZWRQb3N0cyIsInVwZGF0ZVVzZXIiLCJnZXRVc2VyTGlrZWRQYWdlcyIsImNoYW5nZUNvbXBhbnlGb2xsb3dTdGF0ZSIsImNoYW5nZVBvc3RTYXZlZFN0YXRlIiwidXBkYXRlVXNlckZvbGRlciIsIkRlbGV0ZVVzZXJGb2xkZXIiLCJhZGRVc2VyRm9sZGVyIiwiU2F2ZVBvc3RUb0ZhaXZvcml0IiwiRGVsZXRlRmFpdm9yaXRQb3N0IiwiR2V0VXNlckNoYXRDb250ZW50IiwiR2V0VXNlckNoYXRNZXNzYWdlcyIsIlNlbmRDaGF0TWVzc2FnZSIsIlVwZGF0ZVVzZXJJbWFnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBdUJBOztBQUNBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBUCxDQUFtQkMsTUFBbkIsRUFBZjs7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVksdUJBQVosRUFBcUNDLGdCQUFyQztBQUNBSixNQUFNLENBQUNLLEdBQVAsQ0FBVyxxQkFBWCxFQUFrQ0MsaUJBQWxDO0FBQ0FOLE1BQU0sQ0FBQ0ssR0FBUCxDQUFXLDBCQUFYLEVBQXVDRSxtQkFBdkM7QUFDQVAsTUFBTSxDQUFDSyxHQUFQLENBQVcsd0JBQVgsRUFBcUNHLGlCQUFyQyxFQUFrREMsaUJBQWxEO0FBQ0FULE1BQU0sQ0FBQ0ssR0FBUCxDQUFXLDRCQUFYLEVBQXlDRyxpQkFBekMsRUFBc0RFLHFCQUF0RDtBQUNBVixNQUFNLENBQUNLLEdBQVAsQ0FDRSxtQ0FERixFQUVFRyxpQkFGRixFQUdFRyw0QkFIRjtBQUtBWCxNQUFNLENBQUNLLEdBQVAsQ0FDRSxpQ0FERixFQUVFRyxpQkFGRixFQUdFSSwwQkFIRjtBQUtBWixNQUFNLENBQUNLLEdBQVAsQ0FBVyw4QkFBWCxFQUEyQ0csaUJBQTNDLEVBQXdESyx1QkFBeEQ7QUFDQWIsTUFBTSxDQUFDRyxJQUFQLENBQVksdUJBQVosRUFBcUNLLGlCQUFyQyxFQUFrRE0sZ0JBQWxEO0FBQ0FkLE1BQU0sQ0FBQ0ssR0FBUCxDQUFXLDhCQUFYLEVBQTJDRyxpQkFBM0MsRUFBd0RPLHVCQUF4RDtBQUNBZixNQUFNLENBQUNHLElBQVAsQ0FDRSxxQ0FERixFQUVFSyxpQkFGRixFQUdFUSw4QkFIRjtBQUtBaEIsTUFBTSxDQUFDRyxJQUFQLENBQ0UsaUNBREYsRUFFRUssaUJBRkYsRUFHRVMsMEJBSEY7QUFLQWpCLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLDZCQUFaLEVBQTJDSyxpQkFBM0MsRUFBd0RVLHNCQUF4RDtBQUNBbEIsTUFBTSxDQUFDRyxJQUFQLENBQVksNkJBQVosRUFBMkNLLGlCQUEzQyxFQUF3RFcsc0JBQXhEO0FBQ0FuQixNQUFNLENBQUNHLElBQVAsQ0FBWSwwQkFBWixFQUF3Q0ssaUJBQXhDLEVBQXFEWSxtQkFBckQ7QUFDQXBCLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLCtCQUFaLEVBQTZDSyxpQkFBN0MsRUFBMERhLHdCQUExRDtBQUVBckIsTUFBTSxDQUFDRyxJQUFQLENBQVksK0JBQVosRUFBNkNLLGlCQUE3QyxFQUEwRGMsd0JBQTFEO0FBRUF0QixNQUFNLENBQUNLLEdBQVAsQ0FBVywrQkFBWCxFQUE0Q0csaUJBQTVDLEVBQXlEZSx3QkFBekQ7QUFFQXZCLE1BQU0sQ0FBQ0ssR0FBUCxDQUFXLGdDQUFYLEVBQTZDRyxpQkFBN0MsRUFBMERnQix5QkFBMUQ7QUFFQXhCLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLDRCQUFaLEVBQTBDSyxpQkFBMUMsRUFBdURpQixxQkFBdkQ7QUFDQXpCLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLDRCQUFaLEVBQTBDSyxpQkFBMUMsRUFBdURrQixxQkFBdkQ7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCNUIsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXFByb2plY3RcXFdlYlNpdGVzXFxEYWxpbGtcXHNlcnZlclxcYXBpXFx1c2Vyc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBjcmVhdGVVc2VyLFxyXG4gIGdldEFsbFVzZXJzLFxyXG4gIGdldFVzZXJCeUlkLFxyXG4gIGNoZWNrVXNlckF1dGgsXHJcbiAgZ2V0VXNlckxpc3RpbmdzLFxyXG4gIHVwZGF0ZVVzZXIsXHJcbiAgZ2V0VXNlckxpa2VkUGFnZXMsXHJcbiAgY2hhbmdlQ29tcGFueUZvbGxvd1N0YXRlLFxyXG4gIGNoYW5nZVBvc3RTYXZlZFN0YXRlLFxyXG4gIGdldFVzZXJTYXZlZFBvc3RzLFxyXG4gIGdldFVzZXJGYWl2b3JpdEZvbGRlcnMsXHJcbiAgZ2V0VXNlckZhaXZvcml0UG9zdHMsXHJcbiAgdXBkYXRlVXNlckZvbGRlcixcclxuICBEZWxldGVVc2VyRm9sZGVyLFxyXG4gIGFkZFVzZXJGb2xkZXIsXHJcbiAgU2F2ZVBvc3RUb0ZhaXZvcml0LFxyXG4gIERlbGV0ZUZhaXZvcml0UG9zdCxcclxuICBHZXRVc2VyQ2hhdENvbnRlbnQsXHJcbiAgR2V0VXNlckNoYXRNZXNzYWdlcyxcclxuICBTZW5kQ2hhdE1lc3NhZ2UsXHJcbiAgVXBkYXRlVXNlckltYWdlXHJcbn0gZnJvbSBcIi4vdXNlci5jb250cm9sbGVyXCI7XHJcbmltcG9ydCB7IFZlcmlmeVRva2VuIH0gZnJvbSBcIi4uLy4uL2F1dGgvYXV0aC5jb250cm9sbGVyXCI7XHJcbmNvbnN0IHJvdXRlciA9IHJlcXVpcmUoXCJleHByZXNzXCIpLlJvdXRlcigpO1xyXG5yb3V0ZXIucG9zdChcIi9hcGkvdXNlcnMvY3JlYXRlVXNlclwiLCBjcmVhdGVVc2VyKTtcclxucm91dGVyLmdldChcIi9hcGkvdXNlcnMvZ2V0VXNlcnNcIiwgZ2V0QWxsVXNlcnMpO1xyXG5yb3V0ZXIuZ2V0KFwiL2FwaS91c2Vycy9DaGVja1VzZXJBdXRoXCIsIGNoZWNrVXNlckF1dGgpO1xyXG5yb3V0ZXIuZ2V0KFwiL2FwaS91c2Vycy9nZXRVc2VyQnlJZFwiLCBWZXJpZnlUb2tlbiwgZ2V0VXNlckJ5SWQpO1xyXG5yb3V0ZXIuZ2V0KFwiL2FwaS91c2Vycy9nZXRVc2VyTGlzdGluZ3NcIiwgVmVyaWZ5VG9rZW4sIGdldFVzZXJMaXN0aW5ncyk7XHJcbnJvdXRlci5nZXQoXHJcbiAgXCIvYXBpL3VzZXJzL2dldFVzZXJGYWl2b3JpdEZvbGRlcnNcIixcclxuICBWZXJpZnlUb2tlbixcclxuICBnZXRVc2VyRmFpdm9yaXRGb2xkZXJzXHJcbik7XHJcbnJvdXRlci5nZXQoXHJcbiAgXCIvYXBpL3VzZXJzL2dldFVzZXJGYWl2b3JpdFBvc3RzXCIsXHJcbiAgVmVyaWZ5VG9rZW4sXHJcbiAgZ2V0VXNlckZhaXZvcml0UG9zdHNcclxuKTtcclxucm91dGVyLmdldChcIi9hcGkvdXNlcnMvZ2V0VXNlclNhdmVkUG9zdHNcIiwgVmVyaWZ5VG9rZW4sIGdldFVzZXJTYXZlZFBvc3RzKTtcclxucm91dGVyLnBvc3QoXCIvYXBpL3VzZXJzL3VwZGF0ZVVzZXJcIiwgVmVyaWZ5VG9rZW4sIHVwZGF0ZVVzZXIpO1xyXG5yb3V0ZXIuZ2V0KFwiL2FwaS91c2Vycy9nZXRVc2VyTGlrZWRQYWdlc1wiLCBWZXJpZnlUb2tlbiwgZ2V0VXNlckxpa2VkUGFnZXMpO1xyXG5yb3V0ZXIucG9zdChcclxuICBcIi9hcGkvdXNlcnMvY2hhbmdlQ29tcGFueUZvbGxvd1N0YXRlXCIsXHJcbiAgVmVyaWZ5VG9rZW4sXHJcbiAgY2hhbmdlQ29tcGFueUZvbGxvd1N0YXRlXHJcbik7XHJcbnJvdXRlci5wb3N0KFxyXG4gIFwiL2FwaS91c2Vycy9jaGFuZ2VQb3N0U2F2ZWRTdGF0ZVwiLFxyXG4gIFZlcmlmeVRva2VuLFxyXG4gIGNoYW5nZVBvc3RTYXZlZFN0YXRlXHJcbik7XHJcbnJvdXRlci5wb3N0KFwiL2FwaS91c2Vycy91cGRhdGVVc2VyRm9sZGVyXCIsIFZlcmlmeVRva2VuLCB1cGRhdGVVc2VyRm9sZGVyKTtcclxucm91dGVyLnBvc3QoXCIvYXBpL3VzZXJzL0RlbGV0ZVVzZXJGb2xkZXJcIiwgVmVyaWZ5VG9rZW4sIERlbGV0ZVVzZXJGb2xkZXIpO1xyXG5yb3V0ZXIucG9zdChcIi9hcGkvdXNlcnMvYWRkVXNlckZvbGRlclwiLCBWZXJpZnlUb2tlbiwgYWRkVXNlckZvbGRlcik7XHJcbnJvdXRlci5wb3N0KFwiL2FwaS91c2Vycy9TYXZlUG9zdFRvRmFpdm9yaXRcIiwgVmVyaWZ5VG9rZW4sIFNhdmVQb3N0VG9GYWl2b3JpdCk7XHJcblxyXG5yb3V0ZXIucG9zdChcIi9hcGkvdXNlcnMvRGVsZXRlRmFpdm9yaXRQb3N0XCIsIFZlcmlmeVRva2VuLCBEZWxldGVGYWl2b3JpdFBvc3QpO1xyXG5cclxucm91dGVyLmdldChcIi9hcGkvdXNlcnMvR2V0VXNlckNoYXRDb250ZW50XCIsIFZlcmlmeVRva2VuLCBHZXRVc2VyQ2hhdENvbnRlbnQpO1xyXG5cclxucm91dGVyLmdldChcIi9hcGkvdXNlcnMvR2V0VXNlckNoYXRNZXNzYWdlc1wiLCBWZXJpZnlUb2tlbiwgR2V0VXNlckNoYXRNZXNzYWdlcyk7XHJcblxyXG5yb3V0ZXIucG9zdChcIi9hcGkvdXNlcnMvU2VuZENoYXRNZXNzYWdlXCIsIFZlcmlmeVRva2VuLCBTZW5kQ2hhdE1lc3NhZ2UpO1xyXG5yb3V0ZXIucG9zdChcIi9hcGkvdXNlcnMvVXBkYXRlVXNlckltYWdlXCIsIFZlcmlmeVRva2VuLCBVcGRhdGVVc2VySW1hZ2UpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.router.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "post",
        "createUser",
        "get",
        "getAllUsers",
        "checkUserAuth",
        "VerifyToken",
        "getUserById",
        "getUserListings",
        "getUserFaivoritFolders",
        "getUserFaivoritPosts",
        "getUserSavedPosts",
        "updateUser",
        "getUserLikedPages",
        "changeCompanyFollowState",
        "changePostSavedState",
        "updateUserFolder",
        "DeleteUserFolder",
        "addUserFolder",
        "SavePostToFaivorit",
        "DeleteFaivoritPost",
        "GetUserChatContent",
        "GetUserChatMessages",
        "SendChatMessage",
        "UpdateUserImage",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AAuBA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACAF,MAAM,CAACG,IAAP,CAAY,uBAAZ,EAAqCC,gBAArC;AACAJ,MAAM,CAACK,GAAP,CAAW,qBAAX,EAAkCC,iBAAlC;AACAN,MAAM,CAACK,GAAP,CAAW,0BAAX,EAAuCE,mBAAvC;AACAP,MAAM,CAACK,GAAP,CAAW,wBAAX,EAAqCG,iBAArC,EAAkDC,iBAAlD;AACAT,MAAM,CAACK,GAAP,CAAW,4BAAX,EAAyCG,iBAAzC,EAAsDE,qBAAtD;AACAV,MAAM,CAACK,GAAP,CACE,mCADF,EAEEG,iBAFF,EAGEG,4BAHF;AAKAX,MAAM,CAACK,GAAP,CACE,iCADF,EAEEG,iBAFF,EAGEI,0BAHF;AAKAZ,MAAM,CAACK,GAAP,CAAW,8BAAX,EAA2CG,iBAA3C,EAAwDK,uBAAxD;AACAb,MAAM,CAACG,IAAP,CAAY,uBAAZ,EAAqCK,iBAArC,EAAkDM,gBAAlD;AACAd,MAAM,CAACK,GAAP,CAAW,8BAAX,EAA2CG,iBAA3C,EAAwDO,uBAAxD;AACAf,MAAM,CAACG,IAAP,CACE,qCADF,EAEEK,iBAFF,EAGEQ,8BAHF;AAKAhB,MAAM,CAACG,IAAP,CACE,iCADF,EAEEK,iBAFF,EAGES,0BAHF;AAKAjB,MAAM,CAACG,IAAP,CAAY,6BAAZ,EAA2CK,iBAA3C,EAAwDU,sBAAxD;AACAlB,MAAM,CAACG,IAAP,CAAY,6BAAZ,EAA2CK,iBAA3C,EAAwDW,sBAAxD;AACAnB,MAAM,CAACG,IAAP,CAAY,0BAAZ,EAAwCK,iBAAxC,EAAqDY,mBAArD;AACApB,MAAM,CAACG,IAAP,CAAY,+BAAZ,EAA6CK,iBAA7C,EAA0Da,wBAA1D;AAEArB,MAAM,CAACG,IAAP,CAAY,+BAAZ,EAA6CK,iBAA7C,EAA0Dc,wBAA1D;AAEAtB,MAAM,CAACK,GAAP,CAAW,+BAAX,EAA4CG,iBAA5C,EAAyDe,wBAAzD;AAEAvB,MAAM,CAACK,GAAP,CAAW,gCAAX,EAA6CG,iBAA7C,EAA0DgB,yBAA1D;AAEAxB,MAAM,CAACG,IAAP,CAAY,4BAAZ,EAA0CK,iBAA1C,EAAuDiB,qBAAvD;AACAzB,MAAM,CAACG,IAAP,CAAY,4BAAZ,EAA0CK,iBAA1C,EAAuDkB,qBAAvD;AAEAC,MAAM,CAACC,OAAP,GAAiB5B,MAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\",
      "sourcesContent": [
        "import {\r\n  createUser,\r\n  getAllUsers,\r\n  getUserById,\r\n  checkUserAuth,\r\n  getUserListings,\r\n  updateUser,\r\n  getUserLikedPages,\r\n  changeCompanyFollowState,\r\n  changePostSavedState,\r\n  getUserSavedPosts,\r\n  getUserFaivoritFolders,\r\n  getUserFaivoritPosts,\r\n  updateUserFolder,\r\n  DeleteUserFolder,\r\n  addUserFolder,\r\n  SavePostToFaivorit,\r\n  DeleteFaivoritPost,\r\n  GetUserChatContent,\r\n  GetUserChatMessages,\r\n  SendChatMessage,\r\n  UpdateUserImage\r\n} from \"./user.controller\";\r\nimport { VerifyToken } from \"../../auth/auth.controller\";\r\nconst router = require(\"express\").Router();\r\nrouter.post(\"/api/users/createUser\", createUser);\r\nrouter.get(\"/api/users/getUsers\", getAllUsers);\r\nrouter.get(\"/api/users/CheckUserAuth\", checkUserAuth);\r\nrouter.get(\"/api/users/getUserById\", VerifyToken, getUserById);\r\nrouter.get(\"/api/users/getUserListings\", VerifyToken, getUserListings);\r\nrouter.get(\r\n  \"/api/users/getUserFaivoritFolders\",\r\n  VerifyToken,\r\n  getUserFaivoritFolders\r\n);\r\nrouter.get(\r\n  \"/api/users/getUserFaivoritPosts\",\r\n  VerifyToken,\r\n  getUserFaivoritPosts\r\n);\r\nrouter.get(\"/api/users/getUserSavedPosts\", VerifyToken, getUserSavedPosts);\r\nrouter.post(\"/api/users/updateUser\", VerifyToken, updateUser);\r\nrouter.get(\"/api/users/getUserLikedPages\", VerifyToken, getUserLikedPages);\r\nrouter.post(\r\n  \"/api/users/changeCompanyFollowState\",\r\n  VerifyToken,\r\n  changeCompanyFollowState\r\n);\r\nrouter.post(\r\n  \"/api/users/changePostSavedState\",\r\n  VerifyToken,\r\n  changePostSavedState\r\n);\r\nrouter.post(\"/api/users/updateUserFolder\", VerifyToken, updateUserFolder);\r\nrouter.post(\"/api/users/DeleteUserFolder\", VerifyToken, DeleteUserFolder);\r\nrouter.post(\"/api/users/addUserFolder\", VerifyToken, addUserFolder);\r\nrouter.post(\"/api/users/SavePostToFaivorit\", VerifyToken, SavePostToFaivorit);\r\n\r\nrouter.post(\"/api/users/DeleteFaivoritPost\", VerifyToken, DeleteFaivoritPost);\r\n\r\nrouter.get(\"/api/users/GetUserChatContent\", VerifyToken, GetUserChatContent);\r\n\r\nrouter.get(\"/api/users/GetUserChatMessages\", VerifyToken, GetUserChatMessages);\r\n\r\nrouter.post(\"/api/users/SendChatMessage\", VerifyToken, SendChatMessage);\r\nrouter.post(\"/api/users/UpdateUserImage\", VerifyToken, UpdateUserImage);\r\n\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610909363385
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\users\\\\user.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\user.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\user.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\user.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\",
        "sourceFileName": "user.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _user = require(\"./user.service\");\n\nvar _user2 = require(\"../../model/user\");\n\nvar _response = require(\"../../model/response\");\n\nmodule.exports = {\n  checkUserAuth: function checkUserAuth(req, res) {\n    (0, _user.checkUserAuth)(req, res);\n  },\n  createUser: function createUser(req, res) {\n    var body = req.body;\n    (0, _user.create)(body, function (err, result) {\n      if (err) {\n        return res.status(500).json({\n          success: 0,\n          message: \"Database Connection Error\"\n        });\n      }\n\n      return res.status(200).json({\n        success: 1,\n        data: result\n      });\n    });\n  },\n  getAllUsers: function getAllUsers(_, res) {\n    (0, _user.getUsers)(function (err, result) {\n      if (err) {\n        return res.json({\n          success: 0,\n          message: \"Database Connection Error\"\n        });\n      }\n\n      return res.json({\n        success: 1,\n        data: result\n      });\n    });\n  },\n  getUserById: function getUserById(req, res) {\n    (0, _user.getUserById)(req.userId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  getUserListings: function getUserListings(req, res) {\n    var offset = req.query.offset;\n    (0, _user.getUserListings)(req.userId, offset, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  updateUser: function updateUser(req, res) {\n    var user = new _user2.User();\n    user.Email = req.body.Email;\n    user.UserName = req.body.UserName;\n    user.UserAbout = req.body.UserAbout;\n    user.Website = req.body.Website;\n    user.Phone = req.body.Phone;\n    user.UserLocation = req.body.UserLocation;\n    (0, _user.updateUser)(req.userId, user, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  getUserLikedPages: function getUserLikedPages(req, res) {\n    (0, _user.getUserLikedPages)(req.userId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  changeCompanyFollowState: function changeCompanyFollowState(req, res) {\n    var companyId = req.body.CompanyId;\n    var state = req.body.State;\n    (0, _user.changeCompanyFollowState)(state, req.userId, companyId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  changePostSavedState: function changePostSavedState(req, res) {\n    var postId = req.body.PostId;\n    var state = req.body.State;\n    (0, _user.changePostSavedState)(state, req.userId, postId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  getUserSavedPosts: function getUserSavedPosts(req, res) {\n    var offset = req.query.offset;\n    (0, _user.getUserSavedPosts)(req.userId, offset, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  getUserFaivoritFolders: function getUserFaivoritFolders(req, res) {\n    (0, _user.getUserFaivoritFolders)(req.userId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  getUserFaivoritPosts: function getUserFaivoritPosts(req, res) {\n    var offset = req.query.offset;\n    var FolderId = req.query.FolderId;\n    (0, _user.getUserFaivoritPosts)(req.userId, FolderId, offset, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  updateUserFolder: function updateUserFolder(req, res) {\n    var FolderId = req.body.FolderId;\n    (0, _user.updateUserFolder)(req.userId, FolderId, {\n      FloderName: req.body.FolderName\n    }, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  DeleteUserFolder: function DeleteUserFolder(req, res) {\n    var FolderId = req.body.FolderId;\n    (0, _user.DeleteUserFolder)(req.userId, FolderId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  addUserFolder: function addUserFolder(req, res) {\n    var FolderName = req.body.FolderName;\n    (0, _user.addUserFolder)(req.userId, FolderName, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  SavePostToFaivorit: function SavePostToFaivorit(req, res) {\n    var FolderId = req.body.FolderId;\n    var PostId = req.body.PostId;\n    (0, _user.SavePostToFaivorit)(FolderId, PostId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  DeleteFaivoritPost: function DeleteFaivoritPost(req, res) {\n    var PostId = req.body.PostId;\n    (0, _user.DeleteFaivoritPost)(req.userId, PostId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  GetUserChatContent: function GetUserChatContent(req, res) {\n    (0, _user.GetUserChatContent)(req.userId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  GetUserChatMessages: function GetUserChatMessages(req, res) {\n    var UserFrom = req.query.UserFrom;\n    (0, _user.GetUserChatMessages)(req.userId, UserFrom, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  SendChatMessage: function SendChatMessage(req, res) {\n    var UserIdTo = req.body.UserIdTo;\n    var Message = req.body.Message;\n    var IsCompany = req.body.IsCompany;\n    (0, _user.SendChatMessage)(req.userId, UserIdTo, Message, IsCompany, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  UpdateUserImage: function UpdateUserImage(req, res) {\n    var ProfileImage = req.body.ProfileImage;\n    (0, _user.UpdateUserImage)(req.userId, ProfileImage, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "module",
        "exports",
        "checkUserAuth",
        "req",
        "res",
        "createUser",
        "body",
        "err",
        "result",
        "status",
        "json",
        "success",
        "message",
        "data",
        "getAllUsers",
        "_",
        "getUserById",
        "userId",
        "Status",
        "getUserListings",
        "offset",
        "query",
        "updateUser",
        "user",
        "User",
        "Email",
        "UserName",
        "UserAbout",
        "Website",
        "Phone",
        "UserLocation",
        "getUserLikedPages",
        "changeCompanyFollowState",
        "companyId",
        "CompanyId",
        "state",
        "State",
        "changePostSavedState",
        "postId",
        "PostId",
        "getUserSavedPosts",
        "getUserFaivoritFolders",
        "getUserFaivoritPosts",
        "FolderId",
        "updateUserFolder",
        "FloderName",
        "FolderName",
        "DeleteUserFolder",
        "addUserFolder",
        "SavePostToFaivorit",
        "DeleteFaivoritPost",
        "GetUserChatContent",
        "GetUserChatMessages",
        "UserFrom",
        "SendChatMessage",
        "UserIdTo",
        "Message",
        "IsCompany",
        "UpdateUserImage",
        "ProfileImage"
      ],
      "mappings": ";;AAAA;;AAuBA;;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,aAAa,EAAE,uBAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,6BAAcD,GAAd,EAAmBC,GAAnB;AACD,GAHc;AAIfC,EAAAA,UAAU,EAAE,oBAACF,GAAD,EAAMC,GAAN,EAAc;AACxB,QAAME,IAAI,GAAGH,GAAG,CAACG,IAAjB;AACA,sBAAOA,IAAP,EAAa,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5B,UAAID,GAAJ,EAAS;AACP,eAAOH,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,UAAAA,OAAO,EAAE,CADiB;AAE1BC,UAAAA,OAAO,EAAE;AAFiB,SAArB,CAAP;AAID;;AACD,aAAOR,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,QAAAA,OAAO,EAAE,CADiB;AAE1BE,QAAAA,IAAI,EAAEL;AAFoB,OAArB,CAAP;AAID,KAXD;AAYD,GAlBc;AAmBfM,EAAAA,WAAW,EAAE,qBAACC,CAAD,EAAIX,GAAJ,EAAY;AACvB,wBAAS,UAACG,GAAD,EAAMC,MAAN,EAAiB;AACxB,UAAID,GAAJ,EAAS;AACP,eAAOH,GAAG,CAACM,IAAJ,CAAS;AACdC,UAAAA,OAAO,EAAE,CADK;AAEdC,UAAAA,OAAO,EAAE;AAFK,SAAT,CAAP;AAID;;AACD,aAAOR,GAAG,CAACM,IAAJ,CAAS;AACdC,QAAAA,OAAO,EAAE,CADK;AAEdE,QAAAA,IAAI,EAAEL;AAFQ,OAAT,CAAP;AAID,KAXD;AAYD,GAhCc;AAiCfQ,EAAAA,WAAW,EAAE,qBAACb,GAAD,EAAMC,GAAN,EAAc;AACzB,2BAAYD,GAAG,CAACc,MAAhB,EAAwB,UAACT,MAAD,EAAY;AAClC,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GAtCc;AAuCfW,EAAAA,eAAe,EAAE,yBAAChB,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAMgB,MAAM,GAAGjB,GAAG,CAACkB,KAAJ,CAAUD,MAAzB;AACA,+BAAgBjB,GAAG,CAACc,MAApB,EAA4BG,MAA5B,EAAoC,UAACZ,MAAD,EAAY;AAC9C,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GA7Cc;AA8Cfc,EAAAA,UAAU,EAAE,oBAACnB,GAAD,EAAMC,GAAN,EAAc;AACxB,QAAMmB,IAAI,GAAG,IAAIC,WAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,KAAL,GAAatB,GAAG,CAACG,IAAJ,CAASmB,KAAtB;AACAF,IAAAA,IAAI,CAACG,QAAL,GAAgBvB,GAAG,CAACG,IAAJ,CAASoB,QAAzB;AACAH,IAAAA,IAAI,CAACI,SAAL,GAAiBxB,GAAG,CAACG,IAAJ,CAASqB,SAA1B;AACAJ,IAAAA,IAAI,CAACK,OAAL,GAAezB,GAAG,CAACG,IAAJ,CAASsB,OAAxB;AACAL,IAAAA,IAAI,CAACM,KAAL,GAAa1B,GAAG,CAACG,IAAJ,CAASuB,KAAtB;AACAN,IAAAA,IAAI,CAACO,YAAL,GAAoB3B,GAAG,CAACG,IAAJ,CAASwB,YAA7B;AACA,0BAAW3B,GAAG,CAACc,MAAf,EAAuBM,IAAvB,EAA6B,UAACf,MAAD,EAAY;AACvC,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GA1Dc;AA2DfuB,EAAAA,iBAAiB,EAAE,2BAAC5B,GAAD,EAAMC,GAAN,EAAc;AAC/B,iCAAkBD,GAAG,CAACc,MAAtB,EAA8B,UAACT,MAAD,EAAY;AACxC,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GAhEc;AAiEfwB,EAAAA,wBAAwB,EAAE,kCAAC7B,GAAD,EAAMC,GAAN,EAAc;AACtC,QAAM6B,SAAS,GAAG9B,GAAG,CAACG,IAAJ,CAAS4B,SAA3B;AACA,QAAMC,KAAK,GAAGhC,GAAG,CAACG,IAAJ,CAAS8B,KAAvB;AACA,wCAAyBD,KAAzB,EAAgChC,GAAG,CAACc,MAApC,EAA4CgB,SAA5C,EAAuD,UAACzB,MAAD,EAAY;AACjE,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GAxEc;AAyEf6B,EAAAA,oBAAoB,EAAE,8BAAClC,GAAD,EAAMC,GAAN,EAAc;AAClC,QAAMkC,MAAM,GAAGnC,GAAG,CAACG,IAAJ,CAASiC,MAAxB;AACA,QAAMJ,KAAK,GAAGhC,GAAG,CAACG,IAAJ,CAAS8B,KAAvB;AACA,oCAAqBD,KAArB,EAA4BhC,GAAG,CAACc,MAAhC,EAAwCqB,MAAxC,EAAgD,UAAC9B,MAAD,EAAY;AAC1D,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GAhFc;AAiFfgC,EAAAA,iBAAiB,EAAE,2BAACrC,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAMgB,MAAM,GAAGjB,GAAG,CAACkB,KAAJ,CAAUD,MAAzB;AACA,iCAAkBjB,GAAG,CAACc,MAAtB,EAA8BG,MAA9B,EAAsC,UAACZ,MAAD,EAAY;AAChD,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GAvFc;AAwFfiC,EAAAA,sBAAsB,EAAE,gCAACtC,GAAD,EAAMC,GAAN,EAAc;AACpC,sCAAuBD,GAAG,CAACc,MAA3B,EAAmC,UAACT,MAAD,EAAY;AAC7C,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GA7Fc;AA8FfkC,EAAAA,oBAAoB,EAAE,8BAACvC,GAAD,EAAMC,GAAN,EAAc;AAClC,QAAMgB,MAAM,GAAGjB,GAAG,CAACkB,KAAJ,CAAUD,MAAzB;AACA,QAAMuB,QAAQ,GAAGxC,GAAG,CAACkB,KAAJ,CAAUsB,QAA3B;AACA,oCAAqBxC,GAAG,CAACc,MAAzB,EAAiC0B,QAAjC,EAA2CvB,MAA3C,EAAmD,UAACZ,MAAD,EAAY;AAC7D,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GArGc;AAsGfoC,EAAAA,gBAAgB,EAAE,0BAACzC,GAAD,EAAMC,GAAN,EAAc;AAC9B,QAAMuC,QAAQ,GAAGxC,GAAG,CAACG,IAAJ,CAASqC,QAA1B;AACA,gCACExC,GAAG,CAACc,MADN,EAEE0B,QAFF,EAGE;AAAEE,MAAAA,UAAU,EAAE1C,GAAG,CAACG,IAAJ,CAASwC;AAAvB,KAHF,EAIE,UAACtC,MAAD,EAAY;AACV,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAPH;AASD,GAjHc;AAkHfuC,EAAAA,gBAAgB,EAAE,0BAAC5C,GAAD,EAAMC,GAAN,EAAc;AAC9B,QAAMuC,QAAQ,GAAGxC,GAAG,CAACG,IAAJ,CAASqC,QAA1B;AACA,gCAAiBxC,GAAG,CAACc,MAArB,EAA6B0B,QAA7B,EAAuC,UAACnC,MAAD,EAAY;AACjD,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GAxHc;AAyHfwC,EAAAA,aAAa,EAAE,uBAAC7C,GAAD,EAAMC,GAAN,EAAc;AAC3B,QAAM0C,UAAU,GAAG3C,GAAG,CAACG,IAAJ,CAASwC,UAA5B;AACA,6BAAc3C,GAAG,CAACc,MAAlB,EAA0B6B,UAA1B,EAAsC,UAACtC,MAAD,EAAY;AAChD,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GA/Hc;AAgIfyC,EAAAA,kBAAkB,EAAE,4BAAC9C,GAAD,EAAMC,GAAN,EAAc;AAChC,QAAMuC,QAAQ,GAAGxC,GAAG,CAACG,IAAJ,CAASqC,QAA1B;AACA,QAAMJ,MAAM,GAAGpC,GAAG,CAACG,IAAJ,CAASiC,MAAxB;AACA,kCAAmBI,QAAnB,EAA6BJ,MAA7B,EAAqC,UAAC/B,MAAD,EAAY;AAC/C,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GAvIc;AAwIf0C,EAAAA,kBAAkB,EAAE,4BAAC/C,GAAD,EAAMC,GAAN,EAAc;AAChC,QAAMmC,MAAM,GAAGpC,GAAG,CAACG,IAAJ,CAASiC,MAAxB;AACA,kCAAmBpC,GAAG,CAACc,MAAvB,EAA+BsB,MAA/B,EAAuC,UAAC/B,MAAD,EAAY;AACjD,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GA9Ic;AA+If2C,EAAAA,kBAAkB,EAAE,4BAAChD,GAAD,EAAMC,GAAN,EAAc;AAChC,kCAAmBD,GAAG,CAACc,MAAvB,EAA+B,UAACT,MAAD,EAAY;AACzC,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GApJc;AAqJf4C,EAAAA,mBAAmB,EAAE,6BAACjD,GAAD,EAAMC,GAAN,EAAc;AACjC,QAAMiD,QAAQ,GAAGlD,GAAG,CAACkB,KAAJ,CAAUgC,QAA3B;AACA,mCAAoBlD,GAAG,CAACc,MAAxB,EAAgCoC,QAAhC,EAA0C,UAAC7C,MAAD,EAAY;AACpD,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GA3Jc;AA4Jf8C,EAAAA,eAAe,EAAE,yBAACnD,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAMmD,QAAQ,GAAGpD,GAAG,CAACG,IAAJ,CAASiD,QAA1B;AACA,QAAMC,OAAO,GAAGrD,GAAG,CAACG,IAAJ,CAASkD,OAAzB;AACA,QAAMC,SAAS,GAAGtD,GAAG,CAACG,IAAJ,CAASmD,SAA3B;AACA,+BAAgBtD,GAAG,CAACc,MAApB,EAA4BsC,QAA5B,EAAsCC,OAAtC,EAA+CC,SAA/C,EAA0D,UAACjD,MAAD,EAAY;AACpE,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID,GApKc;AAqKfkD,EAAAA,eAAe,EAAE,yBAACvD,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAMuD,YAAY,GAAGxD,GAAG,CAACG,IAAJ,CAASqD,YAA9B;AACA,+BAAgBxD,GAAG,CAACc,MAApB,EAA4B0C,YAA5B,EAA0C,UAACnD,MAAD,EAAY;AACpD,UAAI,CAACA,MAAM,CAACU,MAAZ,EAAoBd,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASF,MAAT,CAAP;AACD,KAHD;AAID;AA3Kc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\",
      "sourcesContent": [
        "import {\r\n  create,\r\n  getUsers,\r\n  getUserById,\r\n  checkUserAuth,\r\n  getUserListings,\r\n  updateUser,\r\n  getUserLikedPages,\r\n  changeCompanyFollowState,\r\n  changePostSavedState,\r\n  getUserSavedPosts,\r\n  getUserFaivoritFolders,\r\n  getUserFaivoritPosts,\r\n  updateUserFolder,\r\n  DeleteUserFolder,\r\n  addUserFolder,\r\n  SavePostToFaivorit,\r\n  DeleteFaivoritPost,\r\n  GetUserChatContent,\r\n  GetUserChatMessages,\r\n  SendChatMessage,\r\n  UpdateUserImage,\r\n} from \"./user.service\";\r\nimport { User } from \"../../model/user\";\r\nimport { Response } from \"../../model/response\";\r\nmodule.exports = {\r\n  checkUserAuth: (req, res) => {\r\n    checkUserAuth(req, res);\r\n  },\r\n  createUser: (req, res) => {\r\n    const body = req.body;\r\n    create(body, (err, result) => {\r\n      if (err) {\r\n        return res.status(500).json({\r\n          success: 0,\r\n          message: \"Database Connection Error\",\r\n        });\r\n      }\r\n      return res.status(200).json({\r\n        success: 1,\r\n        data: result,\r\n      });\r\n    });\r\n  },\r\n  getAllUsers: (_, res) => {\r\n    getUsers((err, result) => {\r\n      if (err) {\r\n        return res.json({\r\n          success: 0,\r\n          message: \"Database Connection Error\",\r\n        });\r\n      }\r\n      return res.json({\r\n        success: 1,\r\n        data: result,\r\n      });\r\n    });\r\n  },\r\n  getUserById: (req, res) => {\r\n    getUserById(req.userId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  getUserListings: (req, res) => {\r\n    const offset = req.query.offset;\r\n    getUserListings(req.userId, offset, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  updateUser: (req, res) => {\r\n    const user = new User();\r\n    user.Email = req.body.Email;\r\n    user.UserName = req.body.UserName;\r\n    user.UserAbout = req.body.UserAbout;\r\n    user.Website = req.body.Website;\r\n    user.Phone = req.body.Phone;\r\n    user.UserLocation = req.body.UserLocation;\r\n    updateUser(req.userId, user, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  getUserLikedPages: (req, res) => {\r\n    getUserLikedPages(req.userId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  changeCompanyFollowState: (req, res) => {\r\n    const companyId = req.body.CompanyId;\r\n    const state = req.body.State;\r\n    changeCompanyFollowState(state, req.userId, companyId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  changePostSavedState: (req, res) => {\r\n    const postId = req.body.PostId;\r\n    const state = req.body.State;\r\n    changePostSavedState(state, req.userId, postId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  getUserSavedPosts: (req, res) => {\r\n    const offset = req.query.offset;\r\n    getUserSavedPosts(req.userId, offset, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  getUserFaivoritFolders: (req, res) => {\r\n    getUserFaivoritFolders(req.userId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  getUserFaivoritPosts: (req, res) => {\r\n    const offset = req.query.offset;\r\n    const FolderId = req.query.FolderId;\r\n    getUserFaivoritPosts(req.userId, FolderId, offset, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  updateUserFolder: (req, res) => {\r\n    const FolderId = req.body.FolderId;\r\n    updateUserFolder(\r\n      req.userId,\r\n      FolderId,\r\n      { FloderName: req.body.FolderName },\r\n      (result) => {\r\n        if (!result.Status) res.status(500);\r\n        return res.json(result);\r\n      }\r\n    );\r\n  },\r\n  DeleteUserFolder: (req, res) => {\r\n    const FolderId = req.body.FolderId;\r\n    DeleteUserFolder(req.userId, FolderId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  addUserFolder: (req, res) => {\r\n    const FolderName = req.body.FolderName;\r\n    addUserFolder(req.userId, FolderName, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  SavePostToFaivorit: (req, res) => {\r\n    const FolderId = req.body.FolderId;\r\n    const PostId = req.body.PostId;\r\n    SavePostToFaivorit(FolderId, PostId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  DeleteFaivoritPost: (req, res) => {\r\n    const PostId = req.body.PostId;\r\n    DeleteFaivoritPost(req.userId, PostId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  GetUserChatContent: (req, res) => {\r\n    GetUserChatContent(req.userId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  GetUserChatMessages: (req, res) => {\r\n    const UserFrom = req.query.UserFrom;\r\n    GetUserChatMessages(req.userId, UserFrom, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  SendChatMessage: (req, res) => {\r\n    const UserIdTo = req.body.UserIdTo;\r\n    const Message = req.body.Message;\r\n    const IsCompany = req.body.IsCompany;\r\n    SendChatMessage(req.userId, UserIdTo, Message, IsCompany, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  UpdateUserImage: (req, res) => {\r\n    const ProfileImage = req.body.ProfileImage;\r\n    UpdateUserImage(req.userId, ProfileImage, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611153139943
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\users\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\users\\\\user.service.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\user.service.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\user.service.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\user.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\",
        "sourceFileName": "user.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _database = _interopRequireDefault(require(\"../../config/database\"));\n\nvar _DalilikDAL = require(\"../../DataAccess/DalilikDAL\");\n\nvar _config = _interopRequireDefault(require(\"../../auth/config\"));\n\nvar _jsonwebtoken = require(\"jsonwebtoken\");\n\nvar _response = require(\"../../model/response\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = {\n  checkUserAuth: function checkUserAuth(req, res) {\n    var token = req.get(\"authorization\");\n    if (!token) return res.status(200).send({\n      auth: false,\n      message: \"No token provided.\"\n    });else token = token.slice(7);\n    (0, _jsonwebtoken.verify)(token, _config[\"default\"].secret, function (err, decoded) {\n      if (err) return res.status(200).send({\n        auth: false,\n        message: \"Failed to authenticate token.\"\n      });\n      res.status(200).send({\n        auth: true,\n        message: \"User Veryfied\"\n      });\n    });\n  },\n  create: function create(data, callBack) {\n    _database[\"default\"].query(\"INSERT INTO test(col1,col2,col3,col4) VALUES (?,?,?,?)\", [data.col1, data.col2, data.col3, data.col4], function (error, result, fields) {\n      if (error) {\n        return callBack(error);\n      } else {\n        return callBack(null, result);\n      }\n    });\n  },\n  getUsers: function getUsers(callBack) {\n    _database[\"default\"].query(\"Select * From test\", [], function (error, result, fields) {\n      if (error) {\n        console.log(error);\n        return;\n      }\n\n      return callBack(null, result);\n    });\n  },\n  getUserById: function getUserById(userId, Callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhere)(\"systemuser\", {\n      Id: userId\n    }, function (result) {\n      Callback(result);\n    });\n  },\n  getUserListings: function getUserListings(userId, offset, Callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhereLimitOffSet)(\"UserPosts\", {\n      UserId: userId\n    }, 5, offset, function (result) {\n      Callback(result);\n    });\n  },\n  updateUser: function updateUser(userId, user, callBack) {\n    var response = new _response.Response();\n    (0, _DalilikDAL.GenerateUpdate)(\"systemuser\", {\n      Id: userId\n    }, user, function (result) {\n      response = result;\n\n      if (result.Status) {\n        response.Description = \"تم تعديل المستخدم بنجاح\";\n      } else {\n        response.Description = \"حصل خطاء اثناء محاولة تعديل المستخدم\";\n      }\n\n      return callBack(response);\n    });\n  },\n  getUserLikedPages: function getUserLikedPages(userId, Callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhere)(\"CompanyList\", {\n      UserId: userId\n    }, function (result) {\n      Callback(result);\n    });\n  },\n  changeCompanyFollowState: function changeCompanyFollowState(state, userId, companyId, Callback) {\n    var userLikedCompany = {\n      UserId: userId,\n      CompanyId: companyId\n    };\n\n    if (state) {\n      (0, _DalilikDAL.GenerateInsert)(\"userlikedcompanies\", userLikedCompany, function (result) {\n        Callback(result);\n      });\n    } else {\n      (0, _DalilikDAL.GenerateDelete)(\"userlikedcompanies\", userLikedCompany, function (result) {\n        Callback(result);\n      });\n    }\n  },\n  changePostSavedState: function changePostSavedState(state, userId, listingId, Callback) {\n    var userSavedListings = {\n      UserId: userId,\n      ListingId: listingId\n    };\n\n    if (state) {\n      (0, _DalilikDAL.GenerateInsert)(\"savedlists\", userSavedListings, function (result) {\n        Callback(result);\n      });\n    } else {\n      (0, _DalilikDAL.GenerateDelete)(\"savedlists\", userSavedListings, function (result) {\n        Callback(result);\n      });\n    }\n  },\n  getUserSavedPosts: function getUserSavedPosts(userId, offset, Callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhereLimitOffSet)(\"UserPosts\", {\n      UserId: userId,\n      Saved: 0\n    }, 5, offset, function (result) {\n      Callback(result);\n    });\n  },\n  getUserFaivoritFolders: function getUserFaivoritFolders(userId, Callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhere)(\"UserFaivoritFolders\", {\n      UserId: userId\n    }, function (result) {\n      Callback(result);\n    });\n  },\n  getUserFaivoritPosts: function getUserFaivoritPosts(userId, folderId, offset, Callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhereLimitOffSet)(\"UserFaivoritPosts\", {\n      UserId: userId,\n      FolderId: folderId\n    }, 5, offset, function (result) {\n      Callback(result);\n    });\n  },\n  addUserFolder: function addUserFolder(userId, folderName, callback) {\n    var UserFolder = {\n      UserId: userId,\n      FloderName: folderName\n    };\n    (0, _DalilikDAL.GenerateInsert)(\"userfolders\", UserFolder, function (result) {\n      callback(result);\n    });\n  },\n  updateUserFolder: function updateUserFolder(userId, folderId, model, callBack) {\n    var response = new _response.Response();\n    (0, _DalilikDAL.GenerateUpdate)(\"userfolders\", {\n      id: folderId,\n      UserId: userId\n    }, model, function (result) {\n      response = result;\n\n      if (result.Status) {\n        response.Description = \"تم تعديل الملف بنجاح\";\n      } else {\n        response.Description = \"حصل خطاء اثناء محاولة الملف المستخدم\";\n      }\n\n      return callBack(response);\n    });\n  },\n  DeleteUserFolder: function DeleteUserFolder(userId, folderId, callback) {\n    var response = new _response.Response();\n    var userFolder = {\n      UserId: userId,\n      id: folderId\n    };\n    (0, _DalilikDAL.ExecuteDeleteTransactionTransaction)(\"userfaivorits\", \"userfolders\", {\n      FolderId: folderId\n    }, userFolder, function (result) {\n      response = result;\n\n      if (result.Status) {\n        response.Description = \"تم تعديل الملف بنجاح\";\n      } else {\n        response.Description = \"حصل خطاء اثناء محاولة الملف المستخدم\";\n      }\n\n      return callback(response);\n    });\n  },\n  SavePostToFaivorit: function SavePostToFaivorit(folderId, postId, callback) {\n    var UserFaiv = {\n      FolderId: folderId,\n      PostId: postId\n    };\n    (0, _DalilikDAL.GenerateInsert)(\"userfaivorits\", UserFaiv, function (result) {\n      callback(result);\n    });\n  },\n  DeleteFaivoritPost: function DeleteFaivoritPost(userId, postId, callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhere)(\"UsersFoldersByUserId\", {\n      UserId: userId,\n      PostId: postId\n    }, function (result) {\n      if (result.Status) {\n        var UserFaiv = {\n          FolderId: result.Refrence[0].FolderId,\n          PostId: postId\n        };\n        (0, _DalilikDAL.GenerateDelete)(\"userfaivorits\", UserFaiv, function (result) {\n          callback(result);\n        });\n      }\n    });\n  },\n  GetUserChatContent: function GetUserChatContent(userId, callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhere)(\"ChatContact\", {\n      UserIdTo: userId\n    }, function (result) {\n      callback(result);\n    });\n  },\n  GetUserChatMessages: function GetUserChatMessages(userId, userFrom, callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhereOrWhere)(\"UserChatMessages\", {\n      UserIdTo: userId,\n      UserIdFrom: userFrom\n    }, {\n      UserIdTo: userFrom,\n      UserIdFrom: userId\n    }, function (result) {\n      callback(result);\n    });\n  },\n  SendChatMessage: function SendChatMessage(userId, userTo, message, IsCompany, callback) {\n    var UserChat = {\n      UserIdFrom: userId,\n      UserIdTo: userTo,\n      Message: message,\n      IsCompany: IsCompany\n    };\n    (0, _DalilikDAL.GenerateInsert)(\"userschat\", UserChat, function (result) {\n      callback(result);\n    });\n  },\n  UpdateUserImage: function UpdateUserImage(userId, Img, callback) {\n    var response = new _response.Response();\n    var model = {\n      ProfileImage: Img\n    };\n    (0, _DalilikDAL.GenerateUpdate)(\"systemuser\", {\n      Id: userId\n    }, model, function (result) {\n      response = result;\n\n      if (result.Status) {\n        response.Description = \"تم تعديل الصورة بنجاح\";\n      } else {\n        response.Description = \"حصل خطاء اثناء محاولة تعديل الصورة \";\n      }\n\n      return callback(response);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY2hlY2tVc2VyQXV0aCIsInJlcSIsInJlcyIsInRva2VuIiwiZ2V0Iiwic3RhdHVzIiwic2VuZCIsImF1dGgiLCJtZXNzYWdlIiwic2xpY2UiLCJjb25maWciLCJzZWNyZXQiLCJlcnIiLCJkZWNvZGVkIiwiY3JlYXRlIiwiZGF0YSIsImNhbGxCYWNrIiwicG9vbCIsInF1ZXJ5IiwiY29sMSIsImNvbDIiLCJjb2wzIiwiY29sNCIsImVycm9yIiwicmVzdWx0IiwiZmllbGRzIiwiZ2V0VXNlcnMiLCJjb25zb2xlIiwibG9nIiwiZ2V0VXNlckJ5SWQiLCJ1c2VySWQiLCJDYWxsYmFjayIsIklkIiwiZ2V0VXNlckxpc3RpbmdzIiwib2Zmc2V0IiwiVXNlcklkIiwidXBkYXRlVXNlciIsInVzZXIiLCJyZXNwb25zZSIsIlJlc3BvbnNlIiwiU3RhdHVzIiwiRGVzY3JpcHRpb24iLCJnZXRVc2VyTGlrZWRQYWdlcyIsImNoYW5nZUNvbXBhbnlGb2xsb3dTdGF0ZSIsInN0YXRlIiwiY29tcGFueUlkIiwidXNlckxpa2VkQ29tcGFueSIsIkNvbXBhbnlJZCIsImNoYW5nZVBvc3RTYXZlZFN0YXRlIiwibGlzdGluZ0lkIiwidXNlclNhdmVkTGlzdGluZ3MiLCJMaXN0aW5nSWQiLCJnZXRVc2VyU2F2ZWRQb3N0cyIsIlNhdmVkIiwiZ2V0VXNlckZhaXZvcml0Rm9sZGVycyIsImdldFVzZXJGYWl2b3JpdFBvc3RzIiwiZm9sZGVySWQiLCJGb2xkZXJJZCIsImFkZFVzZXJGb2xkZXIiLCJmb2xkZXJOYW1lIiwiY2FsbGJhY2siLCJVc2VyRm9sZGVyIiwiRmxvZGVyTmFtZSIsInVwZGF0ZVVzZXJGb2xkZXIiLCJtb2RlbCIsImlkIiwiRGVsZXRlVXNlckZvbGRlciIsInVzZXJGb2xkZXIiLCJTYXZlUG9zdFRvRmFpdm9yaXQiLCJwb3N0SWQiLCJVc2VyRmFpdiIsIlBvc3RJZCIsIkRlbGV0ZUZhaXZvcml0UG9zdCIsIlJlZnJlbmNlIiwiR2V0VXNlckNoYXRDb250ZW50IiwiVXNlcklkVG8iLCJHZXRVc2VyQ2hhdE1lc3NhZ2VzIiwidXNlckZyb20iLCJVc2VySWRGcm9tIiwiU2VuZENoYXRNZXNzYWdlIiwidXNlclRvIiwiSXNDb21wYW55IiwiVXNlckNoYXQiLCJNZXNzYWdlIiwiVXBkYXRlVXNlckltYWdlIiwiSW1nIiwiUHJvZmlsZUltYWdlIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQVNBOztBQUNBOztBQUNBOzs7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmQyxFQUFBQSxhQUFhLEVBQUUsdUJBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNCLFFBQUlDLEtBQUssR0FBR0YsR0FBRyxDQUFDRyxHQUFKLENBQVEsZUFBUixDQUFaO0FBQ0EsUUFBSSxDQUFDRCxLQUFMLEVBQ0UsT0FBT0QsR0FBRyxDQUNQRyxNQURJLENBQ0csR0FESCxFQUVKQyxJQUZJLENBRUM7QUFBRUMsTUFBQUEsSUFBSSxFQUFFLEtBQVI7QUFBZUMsTUFBQUEsT0FBTyxFQUFFO0FBQXhCLEtBRkQsQ0FBUCxDQURGLEtBSUtMLEtBQUssR0FBR0EsS0FBSyxDQUFDTSxLQUFOLENBQVksQ0FBWixDQUFSO0FBQ0wsOEJBQU9OLEtBQVAsRUFBY08sbUJBQU9DLE1BQXJCLEVBQTZCLFVBQUNDLEdBQUQsRUFBTUMsT0FBTixFQUFrQjtBQUM3QyxVQUFJRCxHQUFKLEVBQ0UsT0FBT1YsR0FBRyxDQUNQRyxNQURJLENBQ0csR0FESCxFQUVKQyxJQUZJLENBRUM7QUFBRUMsUUFBQUEsSUFBSSxFQUFFLEtBQVI7QUFBZUMsUUFBQUEsT0FBTyxFQUFFO0FBQXhCLE9BRkQsQ0FBUDtBQUdGTixNQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFQyxRQUFBQSxJQUFJLEVBQUUsSUFBUjtBQUFjQyxRQUFBQSxPQUFPLEVBQUU7QUFBdkIsT0FBckI7QUFDRCxLQU5EO0FBT0QsR0FmYztBQWdCZk0sRUFBQUEsTUFBTSxFQUFFLGdCQUFDQyxJQUFELEVBQU9DLFFBQVAsRUFBb0I7QUFDMUJDLHlCQUFLQyxLQUFMLDJEQUVFLENBQUNILElBQUksQ0FBQ0ksSUFBTixFQUFZSixJQUFJLENBQUNLLElBQWpCLEVBQXVCTCxJQUFJLENBQUNNLElBQTVCLEVBQWtDTixJQUFJLENBQUNPLElBQXZDLENBRkYsRUFHRSxVQUFDQyxLQUFELEVBQVFDLE1BQVIsRUFBZ0JDLE1BQWhCLEVBQTJCO0FBQ3pCLFVBQUlGLEtBQUosRUFBVztBQUNULGVBQU9QLFFBQVEsQ0FBQ08sS0FBRCxDQUFmO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsZUFBT1AsUUFBUSxDQUFDLElBQUQsRUFBT1EsTUFBUCxDQUFmO0FBQ0Q7QUFDRixLQVRIO0FBV0QsR0E1QmM7QUE2QmZFLEVBQUFBLFFBQVEsRUFBRSxrQkFBQ1YsUUFBRCxFQUFjO0FBQ3RCQyx5QkFBS0MsS0FBTCxDQUFXLG9CQUFYLEVBQWlDLEVBQWpDLEVBQXFDLFVBQUNLLEtBQUQsRUFBUUMsTUFBUixFQUFnQkMsTUFBaEIsRUFBMkI7QUFDOUQsVUFBSUYsS0FBSixFQUFXO0FBQ1RJLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTCxLQUFaO0FBQ0E7QUFDRDs7QUFDRCxhQUFPUCxRQUFRLENBQUMsSUFBRCxFQUFPUSxNQUFQLENBQWY7QUFDRCxLQU5EO0FBT0QsR0FyQ2M7QUFzQ2ZLLEVBQUFBLFdBQVcsRUFBRSxxQkFBQ0MsTUFBRCxFQUFTQyxRQUFULEVBQXNCO0FBQ2pDLDZDQUF3QixZQUF4QixFQUFzQztBQUFFQyxNQUFBQSxFQUFFLEVBQUVGO0FBQU4sS0FBdEMsRUFBc0QsVUFBQ04sTUFBRCxFQUFZO0FBQ2hFTyxNQUFBQSxRQUFRLENBQUNQLE1BQUQsQ0FBUjtBQUNELEtBRkQ7QUFHRCxHQTFDYztBQTJDZlMsRUFBQUEsZUFBZSxFQUFFLHlCQUFDSCxNQUFELEVBQVNJLE1BQVQsRUFBaUJILFFBQWpCLEVBQThCO0FBQzdDLHdEQUNFLFdBREYsRUFFRTtBQUFFSSxNQUFBQSxNQUFNLEVBQUVMO0FBQVYsS0FGRixFQUdFLENBSEYsRUFJRUksTUFKRixFQUtFLFVBQUNWLE1BQUQsRUFBWTtBQUNWTyxNQUFBQSxRQUFRLENBQUNQLE1BQUQsQ0FBUjtBQUNELEtBUEg7QUFTRCxHQXJEYztBQXNEZlksRUFBQUEsVUFBVSxFQUFFLG9CQUFDTixNQUFELEVBQVNPLElBQVQsRUFBZXJCLFFBQWYsRUFBNEI7QUFDdEMsUUFBSXNCLFFBQVEsR0FBRyxJQUFJQyxrQkFBSixFQUFmO0FBQ0Esb0NBQWUsWUFBZixFQUE2QjtBQUFFUCxNQUFBQSxFQUFFLEVBQUVGO0FBQU4sS0FBN0IsRUFBNkNPLElBQTdDLEVBQW1ELFVBQUNiLE1BQUQsRUFBWTtBQUM3RGMsTUFBQUEsUUFBUSxHQUFHZCxNQUFYOztBQUNBLFVBQUlBLE1BQU0sQ0FBQ2dCLE1BQVgsRUFBbUI7QUFDakJGLFFBQUFBLFFBQVEsQ0FBQ0csV0FBVCxHQUF1Qix5QkFBdkI7QUFDRCxPQUZELE1BRU87QUFDTEgsUUFBQUEsUUFBUSxDQUFDRyxXQUFULEdBQXVCLHNDQUF2QjtBQUNEOztBQUNELGFBQU96QixRQUFRLENBQUNzQixRQUFELENBQWY7QUFDRCxLQVJEO0FBU0QsR0FqRWM7QUFrRWZJLEVBQUFBLGlCQUFpQixFQUFFLDJCQUFDWixNQUFELEVBQVNDLFFBQVQsRUFBc0I7QUFDdkMsNkNBQXdCLGFBQXhCLEVBQXVDO0FBQUVJLE1BQUFBLE1BQU0sRUFBRUw7QUFBVixLQUF2QyxFQUEyRCxVQUFDTixNQUFELEVBQVk7QUFDckVPLE1BQUFBLFFBQVEsQ0FBQ1AsTUFBRCxDQUFSO0FBQ0QsS0FGRDtBQUdELEdBdEVjO0FBdUVmbUIsRUFBQUEsd0JBQXdCLEVBQUUsa0NBQUNDLEtBQUQsRUFBUWQsTUFBUixFQUFnQmUsU0FBaEIsRUFBMkJkLFFBQTNCLEVBQXdDO0FBQ2hFLFFBQU1lLGdCQUFnQixHQUFHO0FBQ3ZCWCxNQUFBQSxNQUFNLEVBQUVMLE1BRGU7QUFFdkJpQixNQUFBQSxTQUFTLEVBQUVGO0FBRlksS0FBekI7O0FBSUEsUUFBSUQsS0FBSixFQUFXO0FBQ1Qsc0NBQWUsb0JBQWYsRUFBcUNFLGdCQUFyQyxFQUF1RCxVQUFDdEIsTUFBRCxFQUFZO0FBQ2pFTyxRQUFBQSxRQUFRLENBQUNQLE1BQUQsQ0FBUjtBQUNELE9BRkQ7QUFHRCxLQUpELE1BSU87QUFDTCxzQ0FBZSxvQkFBZixFQUFxQ3NCLGdCQUFyQyxFQUF1RCxVQUFDdEIsTUFBRCxFQUFZO0FBQ2pFTyxRQUFBQSxRQUFRLENBQUNQLE1BQUQsQ0FBUjtBQUNELE9BRkQ7QUFHRDtBQUNGLEdBckZjO0FBc0Zmd0IsRUFBQUEsb0JBQW9CLEVBQUUsOEJBQUNKLEtBQUQsRUFBUWQsTUFBUixFQUFnQm1CLFNBQWhCLEVBQTJCbEIsUUFBM0IsRUFBd0M7QUFDNUQsUUFBTW1CLGlCQUFpQixHQUFHO0FBQ3hCZixNQUFBQSxNQUFNLEVBQUVMLE1BRGdCO0FBRXhCcUIsTUFBQUEsU0FBUyxFQUFFRjtBQUZhLEtBQTFCOztBQUlBLFFBQUlMLEtBQUosRUFBVztBQUNULHNDQUFlLFlBQWYsRUFBNkJNLGlCQUE3QixFQUFnRCxVQUFDMUIsTUFBRCxFQUFZO0FBQzFETyxRQUFBQSxRQUFRLENBQUNQLE1BQUQsQ0FBUjtBQUNELE9BRkQ7QUFHRCxLQUpELE1BSU87QUFDTCxzQ0FBZSxZQUFmLEVBQTZCMEIsaUJBQTdCLEVBQWdELFVBQUMxQixNQUFELEVBQVk7QUFDMURPLFFBQUFBLFFBQVEsQ0FBQ1AsTUFBRCxDQUFSO0FBQ0QsT0FGRDtBQUdEO0FBQ0YsR0FwR2M7QUFxR2Y0QixFQUFBQSxpQkFBaUIsRUFBRSwyQkFBQ3RCLE1BQUQsRUFBU0ksTUFBVCxFQUFpQkgsUUFBakIsRUFBOEI7QUFDL0Msd0RBQ0UsV0FERixFQUVFO0FBQUVJLE1BQUFBLE1BQU0sRUFBRUwsTUFBVjtBQUFrQnVCLE1BQUFBLEtBQUssRUFBRTtBQUF6QixLQUZGLEVBR0UsQ0FIRixFQUlFbkIsTUFKRixFQUtFLFVBQUNWLE1BQUQsRUFBWTtBQUNWTyxNQUFBQSxRQUFRLENBQUNQLE1BQUQsQ0FBUjtBQUNELEtBUEg7QUFTRCxHQS9HYztBQWdIZjhCLEVBQUFBLHNCQUFzQixFQUFFLGdDQUFDeEIsTUFBRCxFQUFTQyxRQUFULEVBQXNCO0FBQzVDLDZDQUNFLHFCQURGLEVBRUU7QUFBRUksTUFBQUEsTUFBTSxFQUFFTDtBQUFWLEtBRkYsRUFHRSxVQUFDTixNQUFELEVBQVk7QUFDVk8sTUFBQUEsUUFBUSxDQUFDUCxNQUFELENBQVI7QUFDRCxLQUxIO0FBT0QsR0F4SGM7QUF5SGYrQixFQUFBQSxvQkFBb0IsRUFBRSw4QkFBQ3pCLE1BQUQsRUFBUzBCLFFBQVQsRUFBbUJ0QixNQUFuQixFQUEyQkgsUUFBM0IsRUFBd0M7QUFDNUQsd0RBQ0UsbUJBREYsRUFFRTtBQUFFSSxNQUFBQSxNQUFNLEVBQUVMLE1BQVY7QUFBa0IyQixNQUFBQSxRQUFRLEVBQUVEO0FBQTVCLEtBRkYsRUFHRSxDQUhGLEVBSUV0QixNQUpGLEVBS0UsVUFBQ1YsTUFBRCxFQUFZO0FBQ1ZPLE1BQUFBLFFBQVEsQ0FBQ1AsTUFBRCxDQUFSO0FBQ0QsS0FQSDtBQVNELEdBbkljO0FBb0lma0MsRUFBQUEsYUFBYSxFQUFFLHVCQUFDNUIsTUFBRCxFQUFTNkIsVUFBVCxFQUFxQkMsUUFBckIsRUFBa0M7QUFDL0MsUUFBTUMsVUFBVSxHQUFHO0FBQ2pCMUIsTUFBQUEsTUFBTSxFQUFFTCxNQURTO0FBRWpCZ0MsTUFBQUEsVUFBVSxFQUFFSDtBQUZLLEtBQW5CO0FBSUEsb0NBQWUsYUFBZixFQUE4QkUsVUFBOUIsRUFBMEMsVUFBQ3JDLE1BQUQsRUFBWTtBQUNwRG9DLE1BQUFBLFFBQVEsQ0FBQ3BDLE1BQUQsQ0FBUjtBQUNELEtBRkQ7QUFHRCxHQTVJYztBQTZJZnVDLEVBQUFBLGdCQUFnQixFQUFFLDBCQUFDakMsTUFBRCxFQUFTMEIsUUFBVCxFQUFtQlEsS0FBbkIsRUFBMEJoRCxRQUExQixFQUF1QztBQUN2RCxRQUFJc0IsUUFBUSxHQUFHLElBQUlDLGtCQUFKLEVBQWY7QUFDQSxvQ0FDRSxhQURGLEVBRUU7QUFBRTBCLE1BQUFBLEVBQUUsRUFBRVQsUUFBTjtBQUFnQnJCLE1BQUFBLE1BQU0sRUFBRUw7QUFBeEIsS0FGRixFQUdFa0MsS0FIRixFQUlFLFVBQUN4QyxNQUFELEVBQVk7QUFDVmMsTUFBQUEsUUFBUSxHQUFHZCxNQUFYOztBQUNBLFVBQUlBLE1BQU0sQ0FBQ2dCLE1BQVgsRUFBbUI7QUFDakJGLFFBQUFBLFFBQVEsQ0FBQ0csV0FBVCxHQUF1QixzQkFBdkI7QUFDRCxPQUZELE1BRU87QUFDTEgsUUFBQUEsUUFBUSxDQUFDRyxXQUFULEdBQXVCLHNDQUF2QjtBQUNEOztBQUNELGFBQU96QixRQUFRLENBQUNzQixRQUFELENBQWY7QUFDRCxLQVpIO0FBY0QsR0E3SmM7QUE4SmY0QixFQUFBQSxnQkFBZ0IsRUFBRSwwQkFBQ3BDLE1BQUQsRUFBUzBCLFFBQVQsRUFBbUJJLFFBQW5CLEVBQWdDO0FBQ2hELFFBQUl0QixRQUFRLEdBQUcsSUFBSUMsa0JBQUosRUFBZjtBQUNBLFFBQU00QixVQUFVLEdBQUc7QUFDakJoQyxNQUFBQSxNQUFNLEVBQUVMLE1BRFM7QUFFakJtQyxNQUFBQSxFQUFFLEVBQUVUO0FBRmEsS0FBbkI7QUFJQSx5REFDRSxlQURGLEVBRUUsYUFGRixFQUdFO0FBQUVDLE1BQUFBLFFBQVEsRUFBRUQ7QUFBWixLQUhGLEVBSUVXLFVBSkYsRUFLRSxVQUFDM0MsTUFBRCxFQUFZO0FBQ1ZjLE1BQUFBLFFBQVEsR0FBR2QsTUFBWDs7QUFDQSxVQUFJQSxNQUFNLENBQUNnQixNQUFYLEVBQW1CO0FBQ2pCRixRQUFBQSxRQUFRLENBQUNHLFdBQVQsR0FBdUIsc0JBQXZCO0FBQ0QsT0FGRCxNQUVPO0FBQ0xILFFBQUFBLFFBQVEsQ0FBQ0csV0FBVCxHQUF1QixzQ0FBdkI7QUFDRDs7QUFDRCxhQUFPbUIsUUFBUSxDQUFDdEIsUUFBRCxDQUFmO0FBQ0QsS0FiSDtBQWVELEdBbkxjO0FBb0xmOEIsRUFBQUEsa0JBQWtCLEVBQUUsNEJBQUNaLFFBQUQsRUFBV2EsTUFBWCxFQUFtQlQsUUFBbkIsRUFBZ0M7QUFDbEQsUUFBTVUsUUFBUSxHQUFHO0FBQ2ZiLE1BQUFBLFFBQVEsRUFBRUQsUUFESztBQUVmZSxNQUFBQSxNQUFNLEVBQUVGO0FBRk8sS0FBakI7QUFJQSxvQ0FBZSxlQUFmLEVBQWdDQyxRQUFoQyxFQUEwQyxVQUFDOUMsTUFBRCxFQUFZO0FBQ3BEb0MsTUFBQUEsUUFBUSxDQUFDcEMsTUFBRCxDQUFSO0FBQ0QsS0FGRDtBQUdELEdBNUxjO0FBNkxmZ0QsRUFBQUEsa0JBQWtCLEVBQUUsNEJBQUMxQyxNQUFELEVBQVN1QyxNQUFULEVBQWlCVCxRQUFqQixFQUE4QjtBQUNoRCw2Q0FDRSxzQkFERixFQUVFO0FBQUV6QixNQUFBQSxNQUFNLEVBQUVMLE1BQVY7QUFBa0J5QyxNQUFBQSxNQUFNLEVBQUVGO0FBQTFCLEtBRkYsRUFHRSxVQUFDN0MsTUFBRCxFQUFZO0FBQ1YsVUFBSUEsTUFBTSxDQUFDZ0IsTUFBWCxFQUFtQjtBQUNqQixZQUFNOEIsUUFBUSxHQUFHO0FBQ2ZiLFVBQUFBLFFBQVEsRUFBRWpDLE1BQU0sQ0FBQ2lELFFBQVAsQ0FBZ0IsQ0FBaEIsRUFBbUJoQixRQURkO0FBRWZjLFVBQUFBLE1BQU0sRUFBRUY7QUFGTyxTQUFqQjtBQUlBLHdDQUFlLGVBQWYsRUFBZ0NDLFFBQWhDLEVBQTBDLFVBQUM5QyxNQUFELEVBQVk7QUFDcERvQyxVQUFBQSxRQUFRLENBQUNwQyxNQUFELENBQVI7QUFDRCxTQUZEO0FBR0Q7QUFDRixLQWJIO0FBZUQsR0E3TWM7QUE4TWZrRCxFQUFBQSxrQkFBa0IsRUFBRSw0QkFBQzVDLE1BQUQsRUFBUzhCLFFBQVQsRUFBc0I7QUFDeEMsNkNBQXdCLGFBQXhCLEVBQXVDO0FBQUVlLE1BQUFBLFFBQVEsRUFBRTdDO0FBQVosS0FBdkMsRUFBNkQsVUFBQ04sTUFBRCxFQUFZO0FBQ3ZFb0MsTUFBQUEsUUFBUSxDQUFDcEMsTUFBRCxDQUFSO0FBQ0QsS0FGRDtBQUdELEdBbE5jO0FBbU5mb0QsRUFBQUEsbUJBQW1CLEVBQUUsNkJBQUM5QyxNQUFELEVBQVMrQyxRQUFULEVBQW1CakIsUUFBbkIsRUFBZ0M7QUFDbkQsb0RBQ0Usa0JBREYsRUFFRTtBQUFFZSxNQUFBQSxRQUFRLEVBQUU3QyxNQUFaO0FBQW9CZ0QsTUFBQUEsVUFBVSxFQUFFRDtBQUFoQyxLQUZGLEVBR0U7QUFBRUYsTUFBQUEsUUFBUSxFQUFFRSxRQUFaO0FBQXNCQyxNQUFBQSxVQUFVLEVBQUVoRDtBQUFsQyxLQUhGLEVBSUUsVUFBQ04sTUFBRCxFQUFZO0FBQ1ZvQyxNQUFBQSxRQUFRLENBQUNwQyxNQUFELENBQVI7QUFDRCxLQU5IO0FBUUQsR0E1TmM7QUE2TmZ1RCxFQUFBQSxlQUFlLEVBQUUseUJBQUNqRCxNQUFELEVBQVNrRCxNQUFULEVBQWlCeEUsT0FBakIsRUFBMEJ5RSxTQUExQixFQUFxQ3JCLFFBQXJDLEVBQWtEO0FBQ2pFLFFBQU1zQixRQUFRLEdBQUc7QUFDZkosTUFBQUEsVUFBVSxFQUFFaEQsTUFERztBQUVmNkMsTUFBQUEsUUFBUSxFQUFFSyxNQUZLO0FBR2ZHLE1BQUFBLE9BQU8sRUFBRTNFLE9BSE07QUFJZnlFLE1BQUFBLFNBQVMsRUFBRUE7QUFKSSxLQUFqQjtBQU1BLG9DQUFlLFdBQWYsRUFBNEJDLFFBQTVCLEVBQXNDLFVBQUMxRCxNQUFELEVBQVk7QUFDaERvQyxNQUFBQSxRQUFRLENBQUNwQyxNQUFELENBQVI7QUFDRCxLQUZEO0FBR0QsR0F2T2M7QUF3T2Y0RCxFQUFBQSxlQUFlLEVBQUUseUJBQUN0RCxNQUFELEVBQVN1RCxHQUFULEVBQWN6QixRQUFkLEVBQTJCO0FBQzFDLFFBQUl0QixRQUFRLEdBQUcsSUFBSUMsa0JBQUosRUFBZjtBQUNBLFFBQU15QixLQUFLLEdBQUc7QUFDWnNCLE1BQUFBLFlBQVksRUFBRUQ7QUFERixLQUFkO0FBR0Esb0NBQWUsWUFBZixFQUE2QjtBQUFFckQsTUFBQUEsRUFBRSxFQUFFRjtBQUFOLEtBQTdCLEVBQTZDa0MsS0FBN0MsRUFBb0QsVUFBQ3hDLE1BQUQsRUFBWTtBQUM5RGMsTUFBQUEsUUFBUSxHQUFHZCxNQUFYOztBQUNBLFVBQUlBLE1BQU0sQ0FBQ2dCLE1BQVgsRUFBbUI7QUFDakJGLFFBQUFBLFFBQVEsQ0FBQ0csV0FBVCxHQUF1Qix1QkFBdkI7QUFDRCxPQUZELE1BRU87QUFDTEgsUUFBQUEsUUFBUSxDQUFDRyxXQUFULEdBQXVCLHFDQUF2QjtBQUNEOztBQUNELGFBQU9tQixRQUFRLENBQUN0QixRQUFELENBQWY7QUFDRCxLQVJEO0FBU0Q7QUF0UGMsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXFByb2plY3RcXFdlYlNpdGVzXFxEYWxpbGtcXHNlcnZlclxcYXBpXFx1c2Vyc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBvb2wgZnJvbSBcIi4uLy4uL2NvbmZpZy9kYXRhYmFzZVwiO1xyXG5pbXBvcnQge1xyXG4gIEdlbmVyYXRlU2VsZWN0V2l0aFdoZXJlLFxyXG4gIEdlbmVyYXRlU2VsZWN0V2l0aFdoZXJlTGltaXRPZmZTZXQsXHJcbiAgR2VuZXJhdGVVcGRhdGUsXHJcbiAgR2VuZXJhdGVJbnNlcnQsXHJcbiAgR2VuZXJhdGVEZWxldGUsXHJcbiAgRXhlY3V0ZURlbGV0ZVRyYW5zYWN0aW9uVHJhbnNhY3Rpb24sXHJcbiAgR2VuZXJhdGVTZWxlY3RXaXRoV2hlcmVPcldoZXJlLFxyXG59IGZyb20gXCIuLi8uLi9EYXRhQWNjZXNzL0RhbGlsaWtEQUxcIjtcclxuaW1wb3J0IGNvbmZpZyBmcm9tIFwiLi4vLi4vYXV0aC9jb25maWdcIjtcclxuaW1wb3J0IHsgdmVyaWZ5IH0gZnJvbSBcImpzb253ZWJ0b2tlblwiO1xyXG5pbXBvcnQgeyBSZXNwb25zZSB9IGZyb20gXCIuLi8uLi9tb2RlbC9yZXNwb25zZVwiO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBjaGVja1VzZXJBdXRoOiAocmVxLCByZXMpID0+IHtcclxuICAgIHZhciB0b2tlbiA9IHJlcS5nZXQoXCJhdXRob3JpemF0aW9uXCIpO1xyXG4gICAgaWYgKCF0b2tlbilcclxuICAgICAgcmV0dXJuIHJlc1xyXG4gICAgICAgIC5zdGF0dXMoMjAwKVxyXG4gICAgICAgIC5zZW5kKHsgYXV0aDogZmFsc2UsIG1lc3NhZ2U6IFwiTm8gdG9rZW4gcHJvdmlkZWQuXCIgfSk7XHJcbiAgICBlbHNlIHRva2VuID0gdG9rZW4uc2xpY2UoNyk7XHJcbiAgICB2ZXJpZnkodG9rZW4sIGNvbmZpZy5zZWNyZXQsIChlcnIsIGRlY29kZWQpID0+IHtcclxuICAgICAgaWYgKGVycilcclxuICAgICAgICByZXR1cm4gcmVzXHJcbiAgICAgICAgICAuc3RhdHVzKDIwMClcclxuICAgICAgICAgIC5zZW5kKHsgYXV0aDogZmFsc2UsIG1lc3NhZ2U6IFwiRmFpbGVkIHRvIGF1dGhlbnRpY2F0ZSB0b2tlbi5cIiB9KTtcclxuICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoeyBhdXRoOiB0cnVlLCBtZXNzYWdlOiBcIlVzZXIgVmVyeWZpZWRcIiB9KTtcclxuICAgIH0pO1xyXG4gIH0sXHJcbiAgY3JlYXRlOiAoZGF0YSwgY2FsbEJhY2spID0+IHtcclxuICAgIHBvb2wucXVlcnkoXHJcbiAgICAgIGBJTlNFUlQgSU5UTyB0ZXN0KGNvbDEsY29sMixjb2wzLGNvbDQpIFZBTFVFUyAoPyw/LD8sPylgLFxyXG4gICAgICBbZGF0YS5jb2wxLCBkYXRhLmNvbDIsIGRhdGEuY29sMywgZGF0YS5jb2w0XSxcclxuICAgICAgKGVycm9yLCByZXN1bHQsIGZpZWxkcykgPT4ge1xyXG4gICAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgICAgcmV0dXJuIGNhbGxCYWNrKGVycm9yKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmV0dXJuIGNhbGxCYWNrKG51bGwsIHJlc3VsdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICApO1xyXG4gIH0sXHJcbiAgZ2V0VXNlcnM6IChjYWxsQmFjaykgPT4ge1xyXG4gICAgcG9vbC5xdWVyeShcIlNlbGVjdCAqIEZyb20gdGVzdFwiLCBbXSwgKGVycm9yLCByZXN1bHQsIGZpZWxkcykgPT4ge1xyXG4gICAgICBpZiAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBjYWxsQmFjayhudWxsLCByZXN1bHQpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxuICBnZXRVc2VyQnlJZDogKHVzZXJJZCwgQ2FsbGJhY2spID0+IHtcclxuICAgIEdlbmVyYXRlU2VsZWN0V2l0aFdoZXJlKFwic3lzdGVtdXNlclwiLCB7IElkOiB1c2VySWQgfSwgKHJlc3VsdCkgPT4ge1xyXG4gICAgICBDYWxsYmFjayhyZXN1bHQpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxuICBnZXRVc2VyTGlzdGluZ3M6ICh1c2VySWQsIG9mZnNldCwgQ2FsbGJhY2spID0+IHtcclxuICAgIEdlbmVyYXRlU2VsZWN0V2l0aFdoZXJlTGltaXRPZmZTZXQoXHJcbiAgICAgIFwiVXNlclBvc3RzXCIsXHJcbiAgICAgIHsgVXNlcklkOiB1c2VySWQgfSxcclxuICAgICAgNSxcclxuICAgICAgb2Zmc2V0LFxyXG4gICAgICAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgQ2FsbGJhY2socmVzdWx0KTtcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9LFxyXG4gIHVwZGF0ZVVzZXI6ICh1c2VySWQsIHVzZXIsIGNhbGxCYWNrKSA9PiB7XHJcbiAgICBsZXQgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoKTtcclxuICAgIEdlbmVyYXRlVXBkYXRlKFwic3lzdGVtdXNlclwiLCB7IElkOiB1c2VySWQgfSwgdXNlciwgKHJlc3VsdCkgPT4ge1xyXG4gICAgICByZXNwb25zZSA9IHJlc3VsdDtcclxuICAgICAgaWYgKHJlc3VsdC5TdGF0dXMpIHtcclxuICAgICAgICByZXNwb25zZS5EZXNjcmlwdGlvbiA9IFwi2KrZhSDYqti52K/ZitmEINin2YTZhdiz2KrYrtiv2YUg2KjZhtis2KfYrVwiO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYrdi12YQg2K7Yt9in2KEg2KfYq9mG2KfYoSDZhdit2KfZiNmE2Kkg2KrYudiv2YrZhCDYp9mE2YXYs9iq2K7Yr9mFXCI7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGNhbGxCYWNrKHJlc3BvbnNlKTtcclxuICAgIH0pO1xyXG4gIH0sXHJcbiAgZ2V0VXNlckxpa2VkUGFnZXM6ICh1c2VySWQsIENhbGxiYWNrKSA9PiB7XHJcbiAgICBHZW5lcmF0ZVNlbGVjdFdpdGhXaGVyZShcIkNvbXBhbnlMaXN0XCIsIHsgVXNlcklkOiB1c2VySWQgfSwgKHJlc3VsdCkgPT4ge1xyXG4gICAgICBDYWxsYmFjayhyZXN1bHQpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxuICBjaGFuZ2VDb21wYW55Rm9sbG93U3RhdGU6IChzdGF0ZSwgdXNlcklkLCBjb21wYW55SWQsIENhbGxiYWNrKSA9PiB7XHJcbiAgICBjb25zdCB1c2VyTGlrZWRDb21wYW55ID0ge1xyXG4gICAgICBVc2VySWQ6IHVzZXJJZCxcclxuICAgICAgQ29tcGFueUlkOiBjb21wYW55SWQsXHJcbiAgICB9O1xyXG4gICAgaWYgKHN0YXRlKSB7XHJcbiAgICAgIEdlbmVyYXRlSW5zZXJ0KFwidXNlcmxpa2VkY29tcGFuaWVzXCIsIHVzZXJMaWtlZENvbXBhbnksIChyZXN1bHQpID0+IHtcclxuICAgICAgICBDYWxsYmFjayhyZXN1bHQpO1xyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIEdlbmVyYXRlRGVsZXRlKFwidXNlcmxpa2VkY29tcGFuaWVzXCIsIHVzZXJMaWtlZENvbXBhbnksIChyZXN1bHQpID0+IHtcclxuICAgICAgICBDYWxsYmFjayhyZXN1bHQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9LFxyXG4gIGNoYW5nZVBvc3RTYXZlZFN0YXRlOiAoc3RhdGUsIHVzZXJJZCwgbGlzdGluZ0lkLCBDYWxsYmFjaykgPT4ge1xyXG4gICAgY29uc3QgdXNlclNhdmVkTGlzdGluZ3MgPSB7XHJcbiAgICAgIFVzZXJJZDogdXNlcklkLFxyXG4gICAgICBMaXN0aW5nSWQ6IGxpc3RpbmdJZCxcclxuICAgIH07XHJcbiAgICBpZiAoc3RhdGUpIHtcclxuICAgICAgR2VuZXJhdGVJbnNlcnQoXCJzYXZlZGxpc3RzXCIsIHVzZXJTYXZlZExpc3RpbmdzLCAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgQ2FsbGJhY2socmVzdWx0KTtcclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBHZW5lcmF0ZURlbGV0ZShcInNhdmVkbGlzdHNcIiwgdXNlclNhdmVkTGlzdGluZ3MsIChyZXN1bHQpID0+IHtcclxuICAgICAgICBDYWxsYmFjayhyZXN1bHQpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9LFxyXG4gIGdldFVzZXJTYXZlZFBvc3RzOiAodXNlcklkLCBvZmZzZXQsIENhbGxiYWNrKSA9PiB7XHJcbiAgICBHZW5lcmF0ZVNlbGVjdFdpdGhXaGVyZUxpbWl0T2ZmU2V0KFxyXG4gICAgICBcIlVzZXJQb3N0c1wiLFxyXG4gICAgICB7IFVzZXJJZDogdXNlcklkLCBTYXZlZDogMCB9LFxyXG4gICAgICA1LFxyXG4gICAgICBvZmZzZXQsXHJcbiAgICAgIChyZXN1bHQpID0+IHtcclxuICAgICAgICBDYWxsYmFjayhyZXN1bHQpO1xyXG4gICAgICB9XHJcbiAgICApO1xyXG4gIH0sXHJcbiAgZ2V0VXNlckZhaXZvcml0Rm9sZGVyczogKHVzZXJJZCwgQ2FsbGJhY2spID0+IHtcclxuICAgIEdlbmVyYXRlU2VsZWN0V2l0aFdoZXJlKFxyXG4gICAgICBcIlVzZXJGYWl2b3JpdEZvbGRlcnNcIixcclxuICAgICAgeyBVc2VySWQ6IHVzZXJJZCB9LFxyXG4gICAgICAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgQ2FsbGJhY2socmVzdWx0KTtcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9LFxyXG4gIGdldFVzZXJGYWl2b3JpdFBvc3RzOiAodXNlcklkLCBmb2xkZXJJZCwgb2Zmc2V0LCBDYWxsYmFjaykgPT4ge1xyXG4gICAgR2VuZXJhdGVTZWxlY3RXaXRoV2hlcmVMaW1pdE9mZlNldChcclxuICAgICAgXCJVc2VyRmFpdm9yaXRQb3N0c1wiLFxyXG4gICAgICB7IFVzZXJJZDogdXNlcklkLCBGb2xkZXJJZDogZm9sZGVySWQgfSxcclxuICAgICAgNSxcclxuICAgICAgb2Zmc2V0LFxyXG4gICAgICAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgQ2FsbGJhY2socmVzdWx0KTtcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9LFxyXG4gIGFkZFVzZXJGb2xkZXI6ICh1c2VySWQsIGZvbGRlck5hbWUsIGNhbGxiYWNrKSA9PiB7XHJcbiAgICBjb25zdCBVc2VyRm9sZGVyID0ge1xyXG4gICAgICBVc2VySWQ6IHVzZXJJZCxcclxuICAgICAgRmxvZGVyTmFtZTogZm9sZGVyTmFtZSxcclxuICAgIH07XHJcbiAgICBHZW5lcmF0ZUluc2VydChcInVzZXJmb2xkZXJzXCIsIFVzZXJGb2xkZXIsIChyZXN1bHQpID0+IHtcclxuICAgICAgY2FsbGJhY2socmVzdWx0KTtcclxuICAgIH0pO1xyXG4gIH0sXHJcbiAgdXBkYXRlVXNlckZvbGRlcjogKHVzZXJJZCwgZm9sZGVySWQsIG1vZGVsLCBjYWxsQmFjaykgPT4ge1xyXG4gICAgbGV0IHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKCk7XHJcbiAgICBHZW5lcmF0ZVVwZGF0ZShcclxuICAgICAgXCJ1c2VyZm9sZGVyc1wiLFxyXG4gICAgICB7IGlkOiBmb2xkZXJJZCwgVXNlcklkOiB1c2VySWQgfSxcclxuICAgICAgbW9kZWwsXHJcbiAgICAgIChyZXN1bHQpID0+IHtcclxuICAgICAgICByZXNwb25zZSA9IHJlc3VsdDtcclxuICAgICAgICBpZiAocmVzdWx0LlN0YXR1cykge1xyXG4gICAgICAgICAgcmVzcG9uc2UuRGVzY3JpcHRpb24gPSBcItiq2YUg2KrYudiv2YrZhCDYp9mE2YXZhNmBINio2YbYrNin2K1cIjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmVzcG9uc2UuRGVzY3JpcHRpb24gPSBcItit2LXZhCDYrti32KfYoSDYp9ir2YbYp9ihINmF2K3Yp9mI2YTYqSDYp9mE2YXZhNmBINin2YTZhdiz2KrYrtiv2YVcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGNhbGxCYWNrKHJlc3BvbnNlKTtcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9LFxyXG4gIERlbGV0ZVVzZXJGb2xkZXI6ICh1c2VySWQsIGZvbGRlcklkLCBjYWxsYmFjaykgPT4ge1xyXG4gICAgbGV0IHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKCk7XHJcbiAgICBjb25zdCB1c2VyRm9sZGVyID0ge1xyXG4gICAgICBVc2VySWQ6IHVzZXJJZCxcclxuICAgICAgaWQ6IGZvbGRlcklkLFxyXG4gICAgfTtcclxuICAgIEV4ZWN1dGVEZWxldGVUcmFuc2FjdGlvblRyYW5zYWN0aW9uKFxyXG4gICAgICBcInVzZXJmYWl2b3JpdHNcIixcclxuICAgICAgXCJ1c2VyZm9sZGVyc1wiLFxyXG4gICAgICB7IEZvbGRlcklkOiBmb2xkZXJJZCB9LFxyXG4gICAgICB1c2VyRm9sZGVyLFxyXG4gICAgICAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgcmVzcG9uc2UgPSByZXN1bHQ7XHJcbiAgICAgICAgaWYgKHJlc3VsdC5TdGF0dXMpIHtcclxuICAgICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYqtmFINiq2LnYr9mK2YQg2KfZhNmF2YTZgSDYqNmG2KzYp9itXCI7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYrdi12YQg2K7Yt9in2KEg2KfYq9mG2KfYoSDZhdit2KfZiNmE2Kkg2KfZhNmF2YTZgSDYp9mE2YXYs9iq2K7Yr9mFXCI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBjYWxsYmFjayhyZXNwb25zZSk7XHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfSxcclxuICBTYXZlUG9zdFRvRmFpdm9yaXQ6IChmb2xkZXJJZCwgcG9zdElkLCBjYWxsYmFjaykgPT4ge1xyXG4gICAgY29uc3QgVXNlckZhaXYgPSB7XHJcbiAgICAgIEZvbGRlcklkOiBmb2xkZXJJZCxcclxuICAgICAgUG9zdElkOiBwb3N0SWQsXHJcbiAgICB9O1xyXG4gICAgR2VuZXJhdGVJbnNlcnQoXCJ1c2VyZmFpdm9yaXRzXCIsIFVzZXJGYWl2LCAocmVzdWx0KSA9PiB7XHJcbiAgICAgIGNhbGxiYWNrKHJlc3VsdCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIERlbGV0ZUZhaXZvcml0UG9zdDogKHVzZXJJZCwgcG9zdElkLCBjYWxsYmFjaykgPT4ge1xyXG4gICAgR2VuZXJhdGVTZWxlY3RXaXRoV2hlcmUoXHJcbiAgICAgIFwiVXNlcnNGb2xkZXJzQnlVc2VySWRcIixcclxuICAgICAgeyBVc2VySWQ6IHVzZXJJZCwgUG9zdElkOiBwb3N0SWQgfSxcclxuICAgICAgKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIGlmIChyZXN1bHQuU3RhdHVzKSB7XHJcbiAgICAgICAgICBjb25zdCBVc2VyRmFpdiA9IHtcclxuICAgICAgICAgICAgRm9sZGVySWQ6IHJlc3VsdC5SZWZyZW5jZVswXS5Gb2xkZXJJZCxcclxuICAgICAgICAgICAgUG9zdElkOiBwb3N0SWQsXHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgICAgR2VuZXJhdGVEZWxldGUoXCJ1c2VyZmFpdm9yaXRzXCIsIFVzZXJGYWl2LCAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgIGNhbGxiYWNrKHJlc3VsdCk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfSxcclxuICBHZXRVc2VyQ2hhdENvbnRlbnQ6ICh1c2VySWQsIGNhbGxiYWNrKSA9PiB7XHJcbiAgICBHZW5lcmF0ZVNlbGVjdFdpdGhXaGVyZShcIkNoYXRDb250YWN0XCIsIHsgVXNlcklkVG86IHVzZXJJZCB9LCAocmVzdWx0KSA9PiB7XHJcbiAgICAgIGNhbGxiYWNrKHJlc3VsdCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIEdldFVzZXJDaGF0TWVzc2FnZXM6ICh1c2VySWQsIHVzZXJGcm9tLCBjYWxsYmFjaykgPT4ge1xyXG4gICAgR2VuZXJhdGVTZWxlY3RXaXRoV2hlcmVPcldoZXJlKFxyXG4gICAgICBcIlVzZXJDaGF0TWVzc2FnZXNcIixcclxuICAgICAgeyBVc2VySWRUbzogdXNlcklkLCBVc2VySWRGcm9tOiB1c2VyRnJvbSB9LFxyXG4gICAgICB7IFVzZXJJZFRvOiB1c2VyRnJvbSwgVXNlcklkRnJvbTogdXNlcklkIH0sXHJcbiAgICAgIChyZXN1bHQpID0+IHtcclxuICAgICAgICBjYWxsYmFjayhyZXN1bHQpO1xyXG4gICAgICB9XHJcbiAgICApO1xyXG4gIH0sXHJcbiAgU2VuZENoYXRNZXNzYWdlOiAodXNlcklkLCB1c2VyVG8sIG1lc3NhZ2UsIElzQ29tcGFueSwgY2FsbGJhY2spID0+IHtcclxuICAgIGNvbnN0IFVzZXJDaGF0ID0ge1xyXG4gICAgICBVc2VySWRGcm9tOiB1c2VySWQsXHJcbiAgICAgIFVzZXJJZFRvOiB1c2VyVG8sXHJcbiAgICAgIE1lc3NhZ2U6IG1lc3NhZ2UsXHJcbiAgICAgIElzQ29tcGFueTogSXNDb21wYW55LFxyXG4gICAgfTtcclxuICAgIEdlbmVyYXRlSW5zZXJ0KFwidXNlcnNjaGF0XCIsIFVzZXJDaGF0LCAocmVzdWx0KSA9PiB7XHJcbiAgICAgIGNhbGxiYWNrKHJlc3VsdCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIFVwZGF0ZVVzZXJJbWFnZTogKHVzZXJJZCwgSW1nLCBjYWxsYmFjaykgPT4ge1xyXG4gICAgbGV0IHJlc3BvbnNlID0gbmV3IFJlc3BvbnNlKCk7XHJcbiAgICBjb25zdCBtb2RlbCA9IHtcclxuICAgICAgUHJvZmlsZUltYWdlOiBJbWcsXHJcbiAgICB9O1xyXG4gICAgR2VuZXJhdGVVcGRhdGUoXCJzeXN0ZW11c2VyXCIsIHsgSWQ6IHVzZXJJZCB9LCBtb2RlbCwgKHJlc3VsdCkgPT4ge1xyXG4gICAgICByZXNwb25zZSA9IHJlc3VsdDtcclxuICAgICAgaWYgKHJlc3VsdC5TdGF0dXMpIHtcclxuICAgICAgICByZXNwb25zZS5EZXNjcmlwdGlvbiA9IFwi2KrZhSDYqti52K/ZitmEINin2YTYtdmI2LHYqSDYqNmG2KzYp9itXCI7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzcG9uc2UuRGVzY3JpcHRpb24gPSBcItit2LXZhCDYrti32KfYoSDYp9ir2YbYp9ihINmF2K3Yp9mI2YTYqSDYqti52K/ZitmEINin2YTYtdmI2LHYqSBcIjtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gY2FsbGJhY2socmVzcG9uc2UpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxufTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "user.service.js"
      ],
      "names": [
        "module",
        "exports",
        "checkUserAuth",
        "req",
        "res",
        "token",
        "get",
        "status",
        "send",
        "auth",
        "message",
        "slice",
        "config",
        "secret",
        "err",
        "decoded",
        "create",
        "data",
        "callBack",
        "pool",
        "query",
        "col1",
        "col2",
        "col3",
        "col4",
        "error",
        "result",
        "fields",
        "getUsers",
        "console",
        "log",
        "getUserById",
        "userId",
        "Callback",
        "Id",
        "getUserListings",
        "offset",
        "UserId",
        "updateUser",
        "user",
        "response",
        "Response",
        "Status",
        "Description",
        "getUserLikedPages",
        "changeCompanyFollowState",
        "state",
        "companyId",
        "userLikedCompany",
        "CompanyId",
        "changePostSavedState",
        "listingId",
        "userSavedListings",
        "ListingId",
        "getUserSavedPosts",
        "Saved",
        "getUserFaivoritFolders",
        "getUserFaivoritPosts",
        "folderId",
        "FolderId",
        "addUserFolder",
        "folderName",
        "callback",
        "UserFolder",
        "FloderName",
        "updateUserFolder",
        "model",
        "id",
        "DeleteUserFolder",
        "userFolder",
        "SavePostToFaivorit",
        "postId",
        "UserFaiv",
        "PostId",
        "DeleteFaivoritPost",
        "Refrence",
        "GetUserChatContent",
        "UserIdTo",
        "GetUserChatMessages",
        "userFrom",
        "UserIdFrom",
        "SendChatMessage",
        "userTo",
        "IsCompany",
        "UserChat",
        "Message",
        "UpdateUserImage",
        "Img",
        "ProfileImage"
      ],
      "mappings": ";;AAAA;;AACA;;AASA;;AACA;;AACA;;;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,aAAa,EAAE,uBAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,QAAIC,KAAK,GAAGF,GAAG,CAACG,GAAJ,CAAQ,eAAR,CAAZ;AACA,QAAI,CAACD,KAAL,EACE,OAAOD,GAAG,CACPG,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAFD,CAAP,CADF,KAIKL,KAAK,GAAGA,KAAK,CAACM,KAAN,CAAY,CAAZ,CAAR;AACL,8BAAON,KAAP,EAAcO,mBAAOC,MAArB,EAA6B,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC7C,UAAID,GAAJ,EACE,OAAOV,GAAG,CACPG,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAFD,CAAP;AAGFN,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,OAAO,EAAE;AAAvB,OAArB;AACD,KAND;AAOD,GAfc;AAgBfM,EAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,QAAP,EAAoB;AAC1BC,yBAAKC,KAAL,2DAEE,CAACH,IAAI,CAACI,IAAN,EAAYJ,IAAI,CAACK,IAAjB,EAAuBL,IAAI,CAACM,IAA5B,EAAkCN,IAAI,CAACO,IAAvC,CAFF,EAGE,UAACC,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAA2B;AACzB,UAAIF,KAAJ,EAAW;AACT,eAAOP,QAAQ,CAACO,KAAD,CAAf;AACD,OAFD,MAEO;AACL,eAAOP,QAAQ,CAAC,IAAD,EAAOQ,MAAP,CAAf;AACD;AACF,KATH;AAWD,GA5Bc;AA6BfE,EAAAA,QAAQ,EAAE,kBAACV,QAAD,EAAc;AACtBC,yBAAKC,KAAL,CAAW,oBAAX,EAAiC,EAAjC,EAAqC,UAACK,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,EAA2B;AAC9D,UAAIF,KAAJ,EAAW;AACTI,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA;AACD;;AACD,aAAOP,QAAQ,CAAC,IAAD,EAAOQ,MAAP,CAAf;AACD,KAND;AAOD,GArCc;AAsCfK,EAAAA,WAAW,EAAE,qBAACC,MAAD,EAASC,QAAT,EAAsB;AACjC,6CAAwB,YAAxB,EAAsC;AAAEC,MAAAA,EAAE,EAAEF;AAAN,KAAtC,EAAsD,UAACN,MAAD,EAAY;AAChEO,MAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,KAFD;AAGD,GA1Cc;AA2CfS,EAAAA,eAAe,EAAE,yBAACH,MAAD,EAASI,MAAT,EAAiBH,QAAjB,EAA8B;AAC7C,wDACE,WADF,EAEE;AAAEI,MAAAA,MAAM,EAAEL;AAAV,KAFF,EAGE,CAHF,EAIEI,MAJF,EAKE,UAACV,MAAD,EAAY;AACVO,MAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,KAPH;AASD,GArDc;AAsDfY,EAAAA,UAAU,EAAE,oBAACN,MAAD,EAASO,IAAT,EAAerB,QAAf,EAA4B;AACtC,QAAIsB,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;AACA,oCAAe,YAAf,EAA6B;AAAEP,MAAAA,EAAE,EAAEF;AAAN,KAA7B,EAA6CO,IAA7C,EAAmD,UAACb,MAAD,EAAY;AAC7Dc,MAAAA,QAAQ,GAAGd,MAAX;;AACA,UAAIA,MAAM,CAACgB,MAAX,EAAmB;AACjBF,QAAAA,QAAQ,CAACG,WAAT,GAAuB,yBAAvB;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAACG,WAAT,GAAuB,sCAAvB;AACD;;AACD,aAAOzB,QAAQ,CAACsB,QAAD,CAAf;AACD,KARD;AASD,GAjEc;AAkEfI,EAAAA,iBAAiB,EAAE,2BAACZ,MAAD,EAASC,QAAT,EAAsB;AACvC,6CAAwB,aAAxB,EAAuC;AAAEI,MAAAA,MAAM,EAAEL;AAAV,KAAvC,EAA2D,UAACN,MAAD,EAAY;AACrEO,MAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,KAFD;AAGD,GAtEc;AAuEfmB,EAAAA,wBAAwB,EAAE,kCAACC,KAAD,EAAQd,MAAR,EAAgBe,SAAhB,EAA2Bd,QAA3B,EAAwC;AAChE,QAAMe,gBAAgB,GAAG;AACvBX,MAAAA,MAAM,EAAEL,MADe;AAEvBiB,MAAAA,SAAS,EAAEF;AAFY,KAAzB;;AAIA,QAAID,KAAJ,EAAW;AACT,sCAAe,oBAAf,EAAqCE,gBAArC,EAAuD,UAACtB,MAAD,EAAY;AACjEO,QAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,OAFD;AAGD,KAJD,MAIO;AACL,sCAAe,oBAAf,EAAqCsB,gBAArC,EAAuD,UAACtB,MAAD,EAAY;AACjEO,QAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,OAFD;AAGD;AACF,GArFc;AAsFfwB,EAAAA,oBAAoB,EAAE,8BAACJ,KAAD,EAAQd,MAAR,EAAgBmB,SAAhB,EAA2BlB,QAA3B,EAAwC;AAC5D,QAAMmB,iBAAiB,GAAG;AACxBf,MAAAA,MAAM,EAAEL,MADgB;AAExBqB,MAAAA,SAAS,EAAEF;AAFa,KAA1B;;AAIA,QAAIL,KAAJ,EAAW;AACT,sCAAe,YAAf,EAA6BM,iBAA7B,EAAgD,UAAC1B,MAAD,EAAY;AAC1DO,QAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,OAFD;AAGD,KAJD,MAIO;AACL,sCAAe,YAAf,EAA6B0B,iBAA7B,EAAgD,UAAC1B,MAAD,EAAY;AAC1DO,QAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,OAFD;AAGD;AACF,GApGc;AAqGf4B,EAAAA,iBAAiB,EAAE,2BAACtB,MAAD,EAASI,MAAT,EAAiBH,QAAjB,EAA8B;AAC/C,wDACE,WADF,EAEE;AAAEI,MAAAA,MAAM,EAAEL,MAAV;AAAkBuB,MAAAA,KAAK,EAAE;AAAzB,KAFF,EAGE,CAHF,EAIEnB,MAJF,EAKE,UAACV,MAAD,EAAY;AACVO,MAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,KAPH;AASD,GA/Gc;AAgHf8B,EAAAA,sBAAsB,EAAE,gCAACxB,MAAD,EAASC,QAAT,EAAsB;AAC5C,6CACE,qBADF,EAEE;AAAEI,MAAAA,MAAM,EAAEL;AAAV,KAFF,EAGE,UAACN,MAAD,EAAY;AACVO,MAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,KALH;AAOD,GAxHc;AAyHf+B,EAAAA,oBAAoB,EAAE,8BAACzB,MAAD,EAAS0B,QAAT,EAAmBtB,MAAnB,EAA2BH,QAA3B,EAAwC;AAC5D,wDACE,mBADF,EAEE;AAAEI,MAAAA,MAAM,EAAEL,MAAV;AAAkB2B,MAAAA,QAAQ,EAAED;AAA5B,KAFF,EAGE,CAHF,EAIEtB,MAJF,EAKE,UAACV,MAAD,EAAY;AACVO,MAAAA,QAAQ,CAACP,MAAD,CAAR;AACD,KAPH;AASD,GAnIc;AAoIfkC,EAAAA,aAAa,EAAE,uBAAC5B,MAAD,EAAS6B,UAAT,EAAqBC,QAArB,EAAkC;AAC/C,QAAMC,UAAU,GAAG;AACjB1B,MAAAA,MAAM,EAAEL,MADS;AAEjBgC,MAAAA,UAAU,EAAEH;AAFK,KAAnB;AAIA,oCAAe,aAAf,EAA8BE,UAA9B,EAA0C,UAACrC,MAAD,EAAY;AACpDoC,MAAAA,QAAQ,CAACpC,MAAD,CAAR;AACD,KAFD;AAGD,GA5Ic;AA6IfuC,EAAAA,gBAAgB,EAAE,0BAACjC,MAAD,EAAS0B,QAAT,EAAmBQ,KAAnB,EAA0BhD,QAA1B,EAAuC;AACvD,QAAIsB,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;AACA,oCACE,aADF,EAEE;AAAE0B,MAAAA,EAAE,EAAET,QAAN;AAAgBrB,MAAAA,MAAM,EAAEL;AAAxB,KAFF,EAGEkC,KAHF,EAIE,UAACxC,MAAD,EAAY;AACVc,MAAAA,QAAQ,GAAGd,MAAX;;AACA,UAAIA,MAAM,CAACgB,MAAX,EAAmB;AACjBF,QAAAA,QAAQ,CAACG,WAAT,GAAuB,sBAAvB;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAACG,WAAT,GAAuB,sCAAvB;AACD;;AACD,aAAOzB,QAAQ,CAACsB,QAAD,CAAf;AACD,KAZH;AAcD,GA7Jc;AA8Jf4B,EAAAA,gBAAgB,EAAE,0BAACpC,MAAD,EAAS0B,QAAT,EAAmBI,QAAnB,EAAgC;AAChD,QAAItB,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;AACA,QAAM4B,UAAU,GAAG;AACjBhC,MAAAA,MAAM,EAAEL,MADS;AAEjBmC,MAAAA,EAAE,EAAET;AAFa,KAAnB;AAIA,yDACE,eADF,EAEE,aAFF,EAGE;AAAEC,MAAAA,QAAQ,EAAED;AAAZ,KAHF,EAIEW,UAJF,EAKE,UAAC3C,MAAD,EAAY;AACVc,MAAAA,QAAQ,GAAGd,MAAX;;AACA,UAAIA,MAAM,CAACgB,MAAX,EAAmB;AACjBF,QAAAA,QAAQ,CAACG,WAAT,GAAuB,sBAAvB;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAACG,WAAT,GAAuB,sCAAvB;AACD;;AACD,aAAOmB,QAAQ,CAACtB,QAAD,CAAf;AACD,KAbH;AAeD,GAnLc;AAoLf8B,EAAAA,kBAAkB,EAAE,4BAACZ,QAAD,EAAWa,MAAX,EAAmBT,QAAnB,EAAgC;AAClD,QAAMU,QAAQ,GAAG;AACfb,MAAAA,QAAQ,EAAED,QADK;AAEfe,MAAAA,MAAM,EAAEF;AAFO,KAAjB;AAIA,oCAAe,eAAf,EAAgCC,QAAhC,EAA0C,UAAC9C,MAAD,EAAY;AACpDoC,MAAAA,QAAQ,CAACpC,MAAD,CAAR;AACD,KAFD;AAGD,GA5Lc;AA6LfgD,EAAAA,kBAAkB,EAAE,4BAAC1C,MAAD,EAASuC,MAAT,EAAiBT,QAAjB,EAA8B;AAChD,6CACE,sBADF,EAEE;AAAEzB,MAAAA,MAAM,EAAEL,MAAV;AAAkByC,MAAAA,MAAM,EAAEF;AAA1B,KAFF,EAGE,UAAC7C,MAAD,EAAY;AACV,UAAIA,MAAM,CAACgB,MAAX,EAAmB;AACjB,YAAM8B,QAAQ,GAAG;AACfb,UAAAA,QAAQ,EAAEjC,MAAM,CAACiD,QAAP,CAAgB,CAAhB,EAAmBhB,QADd;AAEfc,UAAAA,MAAM,EAAEF;AAFO,SAAjB;AAIA,wCAAe,eAAf,EAAgCC,QAAhC,EAA0C,UAAC9C,MAAD,EAAY;AACpDoC,UAAAA,QAAQ,CAACpC,MAAD,CAAR;AACD,SAFD;AAGD;AACF,KAbH;AAeD,GA7Mc;AA8MfkD,EAAAA,kBAAkB,EAAE,4BAAC5C,MAAD,EAAS8B,QAAT,EAAsB;AACxC,6CAAwB,aAAxB,EAAuC;AAAEe,MAAAA,QAAQ,EAAE7C;AAAZ,KAAvC,EAA6D,UAACN,MAAD,EAAY;AACvEoC,MAAAA,QAAQ,CAACpC,MAAD,CAAR;AACD,KAFD;AAGD,GAlNc;AAmNfoD,EAAAA,mBAAmB,EAAE,6BAAC9C,MAAD,EAAS+C,QAAT,EAAmBjB,QAAnB,EAAgC;AACnD,oDACE,kBADF,EAEE;AAAEe,MAAAA,QAAQ,EAAE7C,MAAZ;AAAoBgD,MAAAA,UAAU,EAAED;AAAhC,KAFF,EAGE;AAAEF,MAAAA,QAAQ,EAAEE,QAAZ;AAAsBC,MAAAA,UAAU,EAAEhD;AAAlC,KAHF,EAIE,UAACN,MAAD,EAAY;AACVoC,MAAAA,QAAQ,CAACpC,MAAD,CAAR;AACD,KANH;AAQD,GA5Nc;AA6NfuD,EAAAA,eAAe,EAAE,yBAACjD,MAAD,EAASkD,MAAT,EAAiBxE,OAAjB,EAA0ByE,SAA1B,EAAqCrB,QAArC,EAAkD;AACjE,QAAMsB,QAAQ,GAAG;AACfJ,MAAAA,UAAU,EAAEhD,MADG;AAEf6C,MAAAA,QAAQ,EAAEK,MAFK;AAGfG,MAAAA,OAAO,EAAE3E,OAHM;AAIfyE,MAAAA,SAAS,EAAEA;AAJI,KAAjB;AAMA,oCAAe,WAAf,EAA4BC,QAA5B,EAAsC,UAAC1D,MAAD,EAAY;AAChDoC,MAAAA,QAAQ,CAACpC,MAAD,CAAR;AACD,KAFD;AAGD,GAvOc;AAwOf4D,EAAAA,eAAe,EAAE,yBAACtD,MAAD,EAASuD,GAAT,EAAczB,QAAd,EAA2B;AAC1C,QAAItB,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;AACA,QAAMyB,KAAK,GAAG;AACZsB,MAAAA,YAAY,EAAED;AADF,KAAd;AAGA,oCAAe,YAAf,EAA6B;AAAErD,MAAAA,EAAE,EAAEF;AAAN,KAA7B,EAA6CkC,KAA7C,EAAoD,UAACxC,MAAD,EAAY;AAC9Dc,MAAAA,QAAQ,GAAGd,MAAX;;AACA,UAAIA,MAAM,CAACgB,MAAX,EAAmB;AACjBF,QAAAA,QAAQ,CAACG,WAAT,GAAuB,uBAAvB;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAACG,WAAT,GAAuB,qCAAvB;AACD;;AACD,aAAOmB,QAAQ,CAACtB,QAAD,CAAf;AACD,KARD;AASD;AAtPc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\users\\",
      "sourcesContent": [
        "import pool from \"../../config/database\";\r\nimport {\r\n  GenerateSelectWithWhere,\r\n  GenerateSelectWithWhereLimitOffSet,\r\n  GenerateUpdate,\r\n  GenerateInsert,\r\n  GenerateDelete,\r\n  ExecuteDeleteTransactionTransaction,\r\n  GenerateSelectWithWhereOrWhere,\r\n} from \"../../DataAccess/DalilikDAL\";\r\nimport config from \"../../auth/config\";\r\nimport { verify } from \"jsonwebtoken\";\r\nimport { Response } from \"../../model/response\";\r\nmodule.exports = {\r\n  checkUserAuth: (req, res) => {\r\n    var token = req.get(\"authorization\");\r\n    if (!token)\r\n      return res\r\n        .status(200)\r\n        .send({ auth: false, message: \"No token provided.\" });\r\n    else token = token.slice(7);\r\n    verify(token, config.secret, (err, decoded) => {\r\n      if (err)\r\n        return res\r\n          .status(200)\r\n          .send({ auth: false, message: \"Failed to authenticate token.\" });\r\n      res.status(200).send({ auth: true, message: \"User Veryfied\" });\r\n    });\r\n  },\r\n  create: (data, callBack) => {\r\n    pool.query(\r\n      `INSERT INTO test(col1,col2,col3,col4) VALUES (?,?,?,?)`,\r\n      [data.col1, data.col2, data.col3, data.col4],\r\n      (error, result, fields) => {\r\n        if (error) {\r\n          return callBack(error);\r\n        } else {\r\n          return callBack(null, result);\r\n        }\r\n      }\r\n    );\r\n  },\r\n  getUsers: (callBack) => {\r\n    pool.query(\"Select * From test\", [], (error, result, fields) => {\r\n      if (error) {\r\n        console.log(error);\r\n        return;\r\n      }\r\n      return callBack(null, result);\r\n    });\r\n  },\r\n  getUserById: (userId, Callback) => {\r\n    GenerateSelectWithWhere(\"systemuser\", { Id: userId }, (result) => {\r\n      Callback(result);\r\n    });\r\n  },\r\n  getUserListings: (userId, offset, Callback) => {\r\n    GenerateSelectWithWhereLimitOffSet(\r\n      \"UserPosts\",\r\n      { UserId: userId },\r\n      5,\r\n      offset,\r\n      (result) => {\r\n        Callback(result);\r\n      }\r\n    );\r\n  },\r\n  updateUser: (userId, user, callBack) => {\r\n    let response = new Response();\r\n    GenerateUpdate(\"systemuser\", { Id: userId }, user, (result) => {\r\n      response = result;\r\n      if (result.Status) {\r\n        response.Description = \"تم تعديل المستخدم بنجاح\";\r\n      } else {\r\n        response.Description = \"حصل خطاء اثناء محاولة تعديل المستخدم\";\r\n      }\r\n      return callBack(response);\r\n    });\r\n  },\r\n  getUserLikedPages: (userId, Callback) => {\r\n    GenerateSelectWithWhere(\"CompanyList\", { UserId: userId }, (result) => {\r\n      Callback(result);\r\n    });\r\n  },\r\n  changeCompanyFollowState: (state, userId, companyId, Callback) => {\r\n    const userLikedCompany = {\r\n      UserId: userId,\r\n      CompanyId: companyId,\r\n    };\r\n    if (state) {\r\n      GenerateInsert(\"userlikedcompanies\", userLikedCompany, (result) => {\r\n        Callback(result);\r\n      });\r\n    } else {\r\n      GenerateDelete(\"userlikedcompanies\", userLikedCompany, (result) => {\r\n        Callback(result);\r\n      });\r\n    }\r\n  },\r\n  changePostSavedState: (state, userId, listingId, Callback) => {\r\n    const userSavedListings = {\r\n      UserId: userId,\r\n      ListingId: listingId,\r\n    };\r\n    if (state) {\r\n      GenerateInsert(\"savedlists\", userSavedListings, (result) => {\r\n        Callback(result);\r\n      });\r\n    } else {\r\n      GenerateDelete(\"savedlists\", userSavedListings, (result) => {\r\n        Callback(result);\r\n      });\r\n    }\r\n  },\r\n  getUserSavedPosts: (userId, offset, Callback) => {\r\n    GenerateSelectWithWhereLimitOffSet(\r\n      \"UserPosts\",\r\n      { UserId: userId, Saved: 0 },\r\n      5,\r\n      offset,\r\n      (result) => {\r\n        Callback(result);\r\n      }\r\n    );\r\n  },\r\n  getUserFaivoritFolders: (userId, Callback) => {\r\n    GenerateSelectWithWhere(\r\n      \"UserFaivoritFolders\",\r\n      { UserId: userId },\r\n      (result) => {\r\n        Callback(result);\r\n      }\r\n    );\r\n  },\r\n  getUserFaivoritPosts: (userId, folderId, offset, Callback) => {\r\n    GenerateSelectWithWhereLimitOffSet(\r\n      \"UserFaivoritPosts\",\r\n      { UserId: userId, FolderId: folderId },\r\n      5,\r\n      offset,\r\n      (result) => {\r\n        Callback(result);\r\n      }\r\n    );\r\n  },\r\n  addUserFolder: (userId, folderName, callback) => {\r\n    const UserFolder = {\r\n      UserId: userId,\r\n      FloderName: folderName,\r\n    };\r\n    GenerateInsert(\"userfolders\", UserFolder, (result) => {\r\n      callback(result);\r\n    });\r\n  },\r\n  updateUserFolder: (userId, folderId, model, callBack) => {\r\n    let response = new Response();\r\n    GenerateUpdate(\r\n      \"userfolders\",\r\n      { id: folderId, UserId: userId },\r\n      model,\r\n      (result) => {\r\n        response = result;\r\n        if (result.Status) {\r\n          response.Description = \"تم تعديل الملف بنجاح\";\r\n        } else {\r\n          response.Description = \"حصل خطاء اثناء محاولة الملف المستخدم\";\r\n        }\r\n        return callBack(response);\r\n      }\r\n    );\r\n  },\r\n  DeleteUserFolder: (userId, folderId, callback) => {\r\n    let response = new Response();\r\n    const userFolder = {\r\n      UserId: userId,\r\n      id: folderId,\r\n    };\r\n    ExecuteDeleteTransactionTransaction(\r\n      \"userfaivorits\",\r\n      \"userfolders\",\r\n      { FolderId: folderId },\r\n      userFolder,\r\n      (result) => {\r\n        response = result;\r\n        if (result.Status) {\r\n          response.Description = \"تم تعديل الملف بنجاح\";\r\n        } else {\r\n          response.Description = \"حصل خطاء اثناء محاولة الملف المستخدم\";\r\n        }\r\n        return callback(response);\r\n      }\r\n    );\r\n  },\r\n  SavePostToFaivorit: (folderId, postId, callback) => {\r\n    const UserFaiv = {\r\n      FolderId: folderId,\r\n      PostId: postId,\r\n    };\r\n    GenerateInsert(\"userfaivorits\", UserFaiv, (result) => {\r\n      callback(result);\r\n    });\r\n  },\r\n  DeleteFaivoritPost: (userId, postId, callback) => {\r\n    GenerateSelectWithWhere(\r\n      \"UsersFoldersByUserId\",\r\n      { UserId: userId, PostId: postId },\r\n      (result) => {\r\n        if (result.Status) {\r\n          const UserFaiv = {\r\n            FolderId: result.Refrence[0].FolderId,\r\n            PostId: postId,\r\n          };\r\n          GenerateDelete(\"userfaivorits\", UserFaiv, (result) => {\r\n            callback(result);\r\n          });\r\n        }\r\n      }\r\n    );\r\n  },\r\n  GetUserChatContent: (userId, callback) => {\r\n    GenerateSelectWithWhere(\"ChatContact\", { UserIdTo: userId }, (result) => {\r\n      callback(result);\r\n    });\r\n  },\r\n  GetUserChatMessages: (userId, userFrom, callback) => {\r\n    GenerateSelectWithWhereOrWhere(\r\n      \"UserChatMessages\",\r\n      { UserIdTo: userId, UserIdFrom: userFrom },\r\n      { UserIdTo: userFrom, UserIdFrom: userId },\r\n      (result) => {\r\n        callback(result);\r\n      }\r\n    );\r\n  },\r\n  SendChatMessage: (userId, userTo, message, IsCompany, callback) => {\r\n    const UserChat = {\r\n      UserIdFrom: userId,\r\n      UserIdTo: userTo,\r\n      Message: message,\r\n      IsCompany: IsCompany,\r\n    };\r\n    GenerateInsert(\"userschat\", UserChat, (result) => {\r\n      callback(result);\r\n    });\r\n  },\r\n  UpdateUserImage: (userId, Img, callback) => {\r\n    let response = new Response();\r\n    const model = {\r\n      ProfileImage: Img,\r\n    };\r\n    GenerateUpdate(\"systemuser\", { Id: userId }, model, (result) => {\r\n      response = result;\r\n      if (result.Status) {\r\n        response.Description = \"تم تعديل الصورة بنجاح\";\r\n      } else {\r\n        response.Description = \"حصل خطاء اثناء محاولة تعديل الصورة \";\r\n      }\r\n      return callback(response);\r\n    });\r\n  },\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611152818464
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\config\\\\database.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\config\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\config\\database.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\config\\database.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\config\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\config\\",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar knex = require(\"knex\")({\n  client: \"mysql\",\n  connection: {\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASS,\n    database: process.env.MYSQL_DB,\n    port: process.env.DB_PORT\n  }\n});\n\nmodule.exports = {\n  knex: knex\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbImtuZXgiLCJyZXF1aXJlIiwiY2xpZW50IiwiY29ubmVjdGlvbiIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiREJfSE9TVCIsInVzZXIiLCJEQl9VU0VSIiwicGFzc3dvcmQiLCJEQl9QQVNTIiwiZGF0YWJhc2UiLCJNWVNRTF9EQiIsInBvcnQiLCJEQl9QT1JUIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQVAsQ0FBZ0I7QUFDekJDLEVBQUFBLE1BQU0sRUFBRSxPQURpQjtBQUV6QkMsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLElBQUksRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BRFI7QUFFVkMsSUFBQUEsSUFBSSxFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUcsT0FGUjtBQUdWQyxJQUFBQSxRQUFRLEVBQUVMLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxPQUhaO0FBSVZDLElBQUFBLFFBQVEsRUFBRVAsT0FBTyxDQUFDQyxHQUFSLENBQVlPLFFBSlo7QUFLVkMsSUFBQUEsSUFBSSxFQUFFVCxPQUFPLENBQUNDLEdBQVIsQ0FBWVM7QUFMUjtBQUZhLENBQWhCLENBQVg7O0FBV0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUFFakIsRUFBQUEsSUFBSSxFQUFKQTtBQUFGLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxQcm9qZWN0XFxXZWJTaXRlc1xcRGFsaWxrXFxzZXJ2ZXJcXGNvbmZpZ1xcIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGtuZXggPSByZXF1aXJlKFwia25leFwiKSh7XHJcbiAgY2xpZW50OiBcIm15c3FsXCIsXHJcbiAgY29ubmVjdGlvbjoge1xyXG4gICAgaG9zdDogcHJvY2Vzcy5lbnYuREJfSE9TVCxcclxuICAgIHVzZXI6IHByb2Nlc3MuZW52LkRCX1VTRVIsXHJcbiAgICBwYXNzd29yZDogcHJvY2Vzcy5lbnYuREJfUEFTUyxcclxuICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5NWVNRTF9EQixcclxuICAgIHBvcnQ6IHByb2Nlc3MuZW52LkRCX1BPUlQsXHJcbiAgfSxcclxufSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHsga25leCB9O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "knex",
        "require",
        "client",
        "connection",
        "host",
        "process",
        "env",
        "DB_HOST",
        "user",
        "DB_USER",
        "password",
        "DB_PASS",
        "database",
        "MYSQL_DB",
        "port",
        "DB_PORT",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgB;AACzBC,EAAAA,MAAM,EAAE,OADiB;AAEzBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADR;AAEVC,IAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,OAFR;AAGVC,IAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,OAHZ;AAIVC,IAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO,QAJZ;AAKVC,IAAAA,IAAI,EAAET,OAAO,CAACC,GAAR,CAAYS;AALR;AAFa,CAAhB,CAAX;;AAWAC,MAAM,CAACC,OAAP,GAAiB;AAAEjB,EAAAA,IAAI,EAAJA;AAAF,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\config\\",
      "sourcesContent": [
        "var knex = require(\"knex\")({\r\n  client: \"mysql\",\r\n  connection: {\r\n    host: process.env.DB_HOST,\r\n    user: process.env.DB_USER,\r\n    password: process.env.DB_PASS,\r\n    database: process.env.MYSQL_DB,\r\n    port: process.env.DB_PORT,\r\n  },\r\n});\r\n\r\nmodule.exports = { knex };\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610733435400
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Businesses\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Businesses\\\\business.router.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\business.router.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\business.router.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\business.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\",
        "sourceFileName": "business.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _business = require(\"./business.controller\");\n\nvar router = require(\"express\").Router();\n\nrouter.get(\"/api/businesses/getAllBusinesses\", _business.getAllBusinesses);\nrouter.post(\"/api/businesses/SearchBusinesses\", _business.searchBusinesses);\nrouter.get(\"/api/businesses/UserSearchBusinesses\", _business.UserSearchBusinesses);\nrouter.get(\"/api/businesses/getListingDetails\", _business.getListingDetails);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1c2luZXNzLnJvdXRlci5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyZXF1aXJlIiwiUm91dGVyIiwiZ2V0IiwiZ2V0QWxsQnVzaW5lc3NlcyIsInBvc3QiLCJzZWFyY2hCdXNpbmVzc2VzIiwiVXNlclNlYXJjaEJ1c2luZXNzZXMiLCJnZXRMaXN0aW5nRGV0YWlscyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxNQUFuQixFQUFmOztBQUNBRixNQUFNLENBQUNHLEdBQVAsQ0FBVyxrQ0FBWCxFQUErQ0MsMEJBQS9DO0FBQ0FKLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLGtDQUFaLEVBQWdEQywwQkFBaEQ7QUFDQU4sTUFBTSxDQUFDRyxHQUFQLENBQVcsc0NBQVgsRUFBbURJLDhCQUFuRDtBQUNBUCxNQUFNLENBQUNHLEdBQVAsQ0FBVyxtQ0FBWCxFQUFnREssMkJBQWhEO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlYsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXFByb2plY3RcXFdlYlNpdGVzXFxEYWxpbGtcXHNlcnZlclxcYXBpXFxCdXNpbmVzc2VzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRBbGxCdXNpbmVzc2VzLCBzZWFyY2hCdXNpbmVzc2VzICwgVXNlclNlYXJjaEJ1c2luZXNzZXMgLCBnZXRMaXN0aW5nRGV0YWlsc30gZnJvbSBcIi4vYnVzaW5lc3MuY29udHJvbGxlclwiO1xyXG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKFwiZXhwcmVzc1wiKS5Sb3V0ZXIoKTtcclxucm91dGVyLmdldChcIi9hcGkvYnVzaW5lc3Nlcy9nZXRBbGxCdXNpbmVzc2VzXCIsIGdldEFsbEJ1c2luZXNzZXMpO1xyXG5yb3V0ZXIucG9zdChcIi9hcGkvYnVzaW5lc3Nlcy9TZWFyY2hCdXNpbmVzc2VzXCIsIHNlYXJjaEJ1c2luZXNzZXMpO1xyXG5yb3V0ZXIuZ2V0KFwiL2FwaS9idXNpbmVzc2VzL1VzZXJTZWFyY2hCdXNpbmVzc2VzXCIsIFVzZXJTZWFyY2hCdXNpbmVzc2VzKTtcclxucm91dGVyLmdldChcIi9hcGkvYnVzaW5lc3Nlcy9nZXRMaXN0aW5nRGV0YWlsc1wiLCBnZXRMaXN0aW5nRGV0YWlscyk7XHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "business.router.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "get",
        "getAllBusinesses",
        "post",
        "searchBusinesses",
        "UserSearchBusinesses",
        "getListingDetails",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACAF,MAAM,CAACG,GAAP,CAAW,kCAAX,EAA+CC,0BAA/C;AACAJ,MAAM,CAACK,IAAP,CAAY,kCAAZ,EAAgDC,0BAAhD;AACAN,MAAM,CAACG,GAAP,CAAW,sCAAX,EAAmDI,8BAAnD;AACAP,MAAM,CAACG,GAAP,CAAW,mCAAX,EAAgDK,2BAAhD;AACAC,MAAM,CAACC,OAAP,GAAiBV,MAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\",
      "sourcesContent": [
        "import { getAllBusinesses, searchBusinesses , UserSearchBusinesses , getListingDetails} from \"./business.controller\";\r\nconst router = require(\"express\").Router();\r\nrouter.get(\"/api/businesses/getAllBusinesses\", getAllBusinesses);\r\nrouter.post(\"/api/businesses/SearchBusinesses\", searchBusinesses);\r\nrouter.get(\"/api/businesses/UserSearchBusinesses\", UserSearchBusinesses);\r\nrouter.get(\"/api/businesses/getListingDetails\", getListingDetails);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610981362540
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Businesses\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Businesses\\\\business.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\business.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\business.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\business.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\",
        "sourceFileName": "business.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require(\"./business.service\"),\n    getBusinesses = _require.getBusinesses,\n    _searchBusinesses = _require.searchBusinesses,\n    _UserSearchBusinesses = _require.UserSearchBusinesses,\n    _getListingDetails = _require.getListingDetails;\n\nmodule.exports = {\n  getAllBusinesses: function getAllBusinesses(req, res) {\n    getBusinesses(function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  searchBusinesses: function searchBusinesses(req, res) {\n    var searchId = req.body.searchId;\n\n    _searchBusinesses(searchId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  UserSearchBusinesses: function UserSearchBusinesses(req, res) {\n    var searchId = req.query.searchId;\n\n    _UserSearchBusinesses(searchId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  getListingDetails: function getListingDetails(req, res) {\n    var listId = req.query.ListId;\n\n    _getListingDetails(listId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1c2luZXNzLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImdldEJ1c2luZXNzZXMiLCJzZWFyY2hCdXNpbmVzc2VzIiwiVXNlclNlYXJjaEJ1c2luZXNzZXMiLCJnZXRMaXN0aW5nRGV0YWlscyIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRBbGxCdXNpbmVzc2VzIiwicmVxIiwicmVzIiwicmVzdWx0IiwiU3RhdHVzIiwic3RhdHVzIiwianNvbiIsInNlYXJjaElkIiwiYm9keSIsInF1ZXJ5IiwibGlzdElkIiwiTGlzdElkIl0sIm1hcHBpbmdzIjoiOztlQUtJQSxPQUFPLENBQUMsb0JBQUQsQztJQUpUQyxhLFlBQUFBLGE7SUFDQUMsaUIsWUFBQUEsZ0I7SUFDQUMscUIsWUFBQUEsb0I7SUFDQUMsa0IsWUFBQUEsaUI7O0FBR0ZDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmQyxFQUFBQSxnQkFBZ0IsRUFBRSwwQkFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDOUJSLElBQUFBLGFBQWEsQ0FBQyxVQUFDUyxNQUFELEVBQVk7QUFDeEIsVUFBSSxDQUFDQSxNQUFNLENBQUNDLE1BQVosRUFBb0JGLEdBQUcsQ0FBQ0csTUFBSixDQUFXLEdBQVg7QUFDcEIsYUFBT0gsR0FBRyxDQUFDSSxJQUFKLENBQVNILE1BQVQsQ0FBUDtBQUNELEtBSFksQ0FBYjtBQUlELEdBTmM7QUFPZlIsRUFBQUEsZ0JBQWdCLEVBQUUsMEJBQUNNLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzlCLFFBQUlLLFFBQVEsR0FBR04sR0FBRyxDQUFDTyxJQUFKLENBQVNELFFBQXhCOztBQUNBWixJQUFBQSxpQkFBZ0IsQ0FBQ1ksUUFBRCxFQUFXLFVBQUNKLE1BQUQsRUFBWTtBQUNyQyxVQUFJLENBQUNBLE1BQU0sQ0FBQ0MsTUFBWixFQUFvQkYsR0FBRyxDQUFDRyxNQUFKLENBQVcsR0FBWDtBQUNwQixhQUFPSCxHQUFHLENBQUNJLElBQUosQ0FBU0gsTUFBVCxDQUFQO0FBQ0QsS0FIZSxDQUFoQjtBQUlELEdBYmM7QUFjZlAsRUFBQUEsb0JBQW9CLEVBQUUsOEJBQUNLLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xDLFFBQUlLLFFBQVEsR0FBR04sR0FBRyxDQUFDUSxLQUFKLENBQVVGLFFBQXpCOztBQUNBWCxJQUFBQSxxQkFBb0IsQ0FBQ1csUUFBRCxFQUFXLFVBQUNKLE1BQUQsRUFBWTtBQUN6QyxVQUFJLENBQUNBLE1BQU0sQ0FBQ0MsTUFBWixFQUFvQkYsR0FBRyxDQUFDRyxNQUFKLENBQVcsR0FBWDtBQUNwQixhQUFPSCxHQUFHLENBQUNJLElBQUosQ0FBU0gsTUFBVCxDQUFQO0FBQ0QsS0FIbUIsQ0FBcEI7QUFJRCxHQXBCYztBQXFCZk4sRUFBQUEsaUJBQWlCLEVBQUMsMkJBQUNJLEdBQUQsRUFBTUMsR0FBTixFQUFhO0FBQzdCLFFBQUlRLE1BQU0sR0FBR1QsR0FBRyxDQUFDUSxLQUFKLENBQVVFLE1BQXZCOztBQUNBZCxJQUFBQSxrQkFBaUIsQ0FBQ2EsTUFBRCxFQUFTLFVBQUNQLE1BQUQsRUFBWTtBQUNwQyxVQUFJLENBQUNBLE1BQU0sQ0FBQ0MsTUFBWixFQUFvQkYsR0FBRyxDQUFDRyxNQUFKLENBQVcsR0FBWDtBQUNwQixhQUFPSCxHQUFHLENBQUNJLElBQUosQ0FBU0gsTUFBVCxDQUFQO0FBQ0QsS0FIZ0IsQ0FBakI7QUFJRDtBQTNCYyxDQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcUHJvamVjdFxcV2ViU2l0ZXNcXERhbGlsa1xcc2VydmVyXFxhcGlcXEJ1c2luZXNzZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHtcclxuICBnZXRCdXNpbmVzc2VzLFxyXG4gIHNlYXJjaEJ1c2luZXNzZXMsXHJcbiAgVXNlclNlYXJjaEJ1c2luZXNzZXMsXHJcbiAgZ2V0TGlzdGluZ0RldGFpbHNcclxufSA9IHJlcXVpcmUoXCIuL2J1c2luZXNzLnNlcnZpY2VcIik7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBnZXRBbGxCdXNpbmVzc2VzOiAocmVxLCByZXMpID0+IHtcclxuICAgIGdldEJ1c2luZXNzZXMoKHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoIXJlc3VsdC5TdGF0dXMpIHJlcy5zdGF0dXMoNTAwKTtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKHJlc3VsdCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIHNlYXJjaEJ1c2luZXNzZXM6IChyZXEsIHJlcykgPT4ge1xyXG4gICAgdmFyIHNlYXJjaElkID0gcmVxLmJvZHkuc2VhcmNoSWQ7XHJcbiAgICBzZWFyY2hCdXNpbmVzc2VzKHNlYXJjaElkLCAocmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmICghcmVzdWx0LlN0YXR1cykgcmVzLnN0YXR1cyg1MDApO1xyXG4gICAgICByZXR1cm4gcmVzLmpzb24ocmVzdWx0KTtcclxuICAgIH0pO1xyXG4gIH0sXHJcbiAgVXNlclNlYXJjaEJ1c2luZXNzZXM6IChyZXEsIHJlcykgPT4ge1xyXG4gICAgdmFyIHNlYXJjaElkID0gcmVxLnF1ZXJ5LnNlYXJjaElkO1xyXG4gICAgVXNlclNlYXJjaEJ1c2luZXNzZXMoc2VhcmNoSWQsIChyZXN1bHQpID0+IHtcclxuICAgICAgaWYgKCFyZXN1bHQuU3RhdHVzKSByZXMuc3RhdHVzKDUwMCk7XHJcbiAgICAgIHJldHVybiByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxuICBnZXRMaXN0aW5nRGV0YWlsczoocmVxLCByZXMpID0+e1xyXG4gICAgdmFyIGxpc3RJZCA9IHJlcS5xdWVyeS5MaXN0SWQ7XHJcbiAgICBnZXRMaXN0aW5nRGV0YWlscyhsaXN0SWQsIChyZXN1bHQpID0+IHtcclxuICAgICAgaWYgKCFyZXN1bHQuU3RhdHVzKSByZXMuc3RhdHVzKDUwMCk7XHJcbiAgICAgIHJldHVybiByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "business.controller.js"
      ],
      "names": [
        "require",
        "getBusinesses",
        "searchBusinesses",
        "UserSearchBusinesses",
        "getListingDetails",
        "module",
        "exports",
        "getAllBusinesses",
        "req",
        "res",
        "result",
        "Status",
        "status",
        "json",
        "searchId",
        "body",
        "query",
        "listId",
        "ListId"
      ],
      "mappings": ";;eAKIA,OAAO,CAAC,oBAAD,C;IAJTC,a,YAAAA,a;IACAC,iB,YAAAA,gB;IACAC,qB,YAAAA,oB;IACAC,kB,YAAAA,iB;;AAGFC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,gBAAgB,EAAE,0BAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BR,IAAAA,aAAa,CAAC,UAACS,MAAD,EAAY;AACxB,UAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBF,GAAG,CAACG,MAAJ,CAAW,GAAX;AACpB,aAAOH,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAP;AACD,KAHY,CAAb;AAID,GANc;AAOfR,EAAAA,gBAAgB,EAAE,0BAACM,GAAD,EAAMC,GAAN,EAAc;AAC9B,QAAIK,QAAQ,GAAGN,GAAG,CAACO,IAAJ,CAASD,QAAxB;;AACAZ,IAAAA,iBAAgB,CAACY,QAAD,EAAW,UAACJ,MAAD,EAAY;AACrC,UAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBF,GAAG,CAACG,MAAJ,CAAW,GAAX;AACpB,aAAOH,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAP;AACD,KAHe,CAAhB;AAID,GAbc;AAcfP,EAAAA,oBAAoB,EAAE,8BAACK,GAAD,EAAMC,GAAN,EAAc;AAClC,QAAIK,QAAQ,GAAGN,GAAG,CAACQ,KAAJ,CAAUF,QAAzB;;AACAX,IAAAA,qBAAoB,CAACW,QAAD,EAAW,UAACJ,MAAD,EAAY;AACzC,UAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBF,GAAG,CAACG,MAAJ,CAAW,GAAX;AACpB,aAAOH,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAP;AACD,KAHmB,CAApB;AAID,GApBc;AAqBfN,EAAAA,iBAAiB,EAAC,2BAACI,GAAD,EAAMC,GAAN,EAAa;AAC7B,QAAIQ,MAAM,GAAGT,GAAG,CAACQ,KAAJ,CAAUE,MAAvB;;AACAd,IAAAA,kBAAiB,CAACa,MAAD,EAAS,UAACP,MAAD,EAAY;AACpC,UAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBF,GAAG,CAACG,MAAJ,CAAW,GAAX;AACpB,aAAOH,GAAG,CAACI,IAAJ,CAASH,MAAT,CAAP;AACD,KAHgB,CAAjB;AAID;AA3Bc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\",
      "sourcesContent": [
        "const {\r\n  getBusinesses,\r\n  searchBusinesses,\r\n  UserSearchBusinesses,\r\n  getListingDetails\r\n} = require(\"./business.service\");\r\n\r\nmodule.exports = {\r\n  getAllBusinesses: (req, res) => {\r\n    getBusinesses((result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  searchBusinesses: (req, res) => {\r\n    var searchId = req.body.searchId;\r\n    searchBusinesses(searchId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  UserSearchBusinesses: (req, res) => {\r\n    var searchId = req.query.searchId;\r\n    UserSearchBusinesses(searchId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  getListingDetails:(req, res) =>{\r\n    var listId = req.query.ListId;\r\n    getListingDetails(listId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610981337510
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Businesses\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Businesses\\\\business.service.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\business.service.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\business.service.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\business.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\",
        "sourceFileName": "business.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _DalilikDAL = require(\"../../DataAccess/DalilikDAL\");\n\nvar _database = require(\"../../config/database\");\n\nvar _response = require(\"../../model/response\");\n\nmodule.exports = {\n  getBusinesses: function getBusinesses(callBack) {\n    var response = new _response.Response();\n    (0, _DalilikDAL.GenerateSelect)(\"getallbusinesses\", function (result) {\n      response = result;\n\n      if (result.Status) {\n        response.Description = \"تم جلب البيانات بنجاح\";\n      } else {\n        response.Description = \"حصل خطاء اثناء محاولة جلب البيانات\";\n      }\n\n      return callBack(response);\n    });\n  },\n  searchBusinesses: function searchBusinesses(searchId, callBack) {\n    var response = new _response.Response();\n\n    _database.knex.select().from(\"getallbusinesses\").where(\"BusinessName\", \"like\", \"%\".concat(searchId, \"%\")).orWhere(\"CompanyName\", \"like\", \"%\".concat(searchId, \"%\")).then(function (row) {\n      response.Status = true;\n      response.Refrence = row;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callBack(response);\n    });\n  },\n  UserSearchBusinesses: function UserSearchBusinesses(searchId, callBack) {\n    var response = new _response.Response();\n\n    _database.knex.select().from(\"SearchListings\").where(\"ListingHeader\", \"like\", \"%\".concat(searchId, \"%\")).orWhere(\"CompanyName\", \"like\", \"%\".concat(searchId, \"%\")).then(function (row) {\n      response.Status = true;\n      response.Refrence = row;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callBack(response);\n    });\n  },\n  getListingDetails: function getListingDetails(searchId, callBack) {\n    var response = new _response.Response();\n\n    _database.knex.select().from(\"ListingDetails\").where({\n      ListingId: searchId\n    }).then(function (row) {\n      response.Status = true;\n      response.Refrence = row;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callBack(response);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1c2luZXNzLnNlcnZpY2UuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldEJ1c2luZXNzZXMiLCJjYWxsQmFjayIsInJlc3BvbnNlIiwiUmVzcG9uc2UiLCJyZXN1bHQiLCJTdGF0dXMiLCJEZXNjcmlwdGlvbiIsInNlYXJjaEJ1c2luZXNzZXMiLCJzZWFyY2hJZCIsImtuZXgiLCJzZWxlY3QiLCJmcm9tIiwid2hlcmUiLCJvcldoZXJlIiwidGhlbiIsInJvdyIsIlJlZnJlbmNlIiwiZXJyIiwiVXNlclNlYXJjaEJ1c2luZXNzZXMiLCJnZXRMaXN0aW5nRGV0YWlscyIsIkxpc3RpbmdJZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZDLEVBQUFBLGFBQWEsRUFBRSx1QkFBQ0MsUUFBRCxFQUFjO0FBQzNCLFFBQUlDLFFBQVEsR0FBRyxJQUFJQyxrQkFBSixFQUFmO0FBQ0Esb0NBQWUsa0JBQWYsRUFBbUMsVUFBQ0MsTUFBRCxFQUFZO0FBQzdDRixNQUFBQSxRQUFRLEdBQUdFLE1BQVg7O0FBQ0EsVUFBSUEsTUFBTSxDQUFDQyxNQUFYLEVBQW1CO0FBQ2pCSCxRQUFBQSxRQUFRLENBQUNJLFdBQVQsR0FBdUIsdUJBQXZCO0FBQ0QsT0FGRCxNQUVPO0FBQ0xKLFFBQUFBLFFBQVEsQ0FBQ0ksV0FBVCxHQUF1QixvQ0FBdkI7QUFDRDs7QUFDRCxhQUFPTCxRQUFRLENBQUNDLFFBQUQsQ0FBZjtBQUNELEtBUkQ7QUFTRCxHQVpjO0FBYWZLLEVBQUFBLGdCQUFnQixFQUFFLDBCQUFDQyxRQUFELEVBQVdQLFFBQVgsRUFBd0I7QUFDeEMsUUFBSUMsUUFBUSxHQUFHLElBQUlDLGtCQUFKLEVBQWY7O0FBQ0FNLG1CQUNHQyxNQURILEdBRUdDLElBRkgsQ0FFUSxrQkFGUixFQUdHQyxLQUhILENBR1MsY0FIVCxFQUd5QixNQUh6QixhQUdxQ0osUUFIckMsUUFJR0ssT0FKSCxDQUlXLGFBSlgsRUFJMEIsTUFKMUIsYUFJc0NMLFFBSnRDLFFBS0dNLElBTEgsQ0FLUSxVQUFDQyxHQUFELEVBQVM7QUFDYmIsTUFBQUEsUUFBUSxDQUFDRyxNQUFULEdBQWtCLElBQWxCO0FBQ0FILE1BQUFBLFFBQVEsQ0FBQ2MsUUFBVCxHQUFvQkQsR0FBcEI7QUFDQWIsTUFBQUEsUUFBUSxDQUFDSSxXQUFULEdBQXVCLG1CQUF2QjtBQUNELEtBVEgsV0FVUyxVQUFDVyxHQUFELEVBQVM7QUFDZGYsTUFBQUEsUUFBUSxDQUFDRyxNQUFULEdBQWtCLEtBQWxCO0FBQ0FILE1BQUFBLFFBQVEsQ0FBQ2MsUUFBVCxHQUFvQkMsR0FBcEI7QUFDQWYsTUFBQUEsUUFBUSxDQUFDSSxXQUFULEdBQXVCLG9DQUF2QjtBQUNELEtBZEgsYUFlVyxZQUFNO0FBQ2IsYUFBT0wsUUFBUSxDQUFDQyxRQUFELENBQWY7QUFDRCxLQWpCSDtBQWtCRCxHQWpDYztBQWtDZmdCLEVBQUFBLG9CQUFvQixFQUFFLDhCQUFDVixRQUFELEVBQVdQLFFBQVgsRUFBd0I7QUFDNUMsUUFBSUMsUUFBUSxHQUFHLElBQUlDLGtCQUFKLEVBQWY7O0FBQ0FNLG1CQUNHQyxNQURILEdBRUdDLElBRkgsQ0FFUSxnQkFGUixFQUdHQyxLQUhILENBR1MsZUFIVCxFQUcwQixNQUgxQixhQUdzQ0osUUFIdEMsUUFJR0ssT0FKSCxDQUlXLGFBSlgsRUFJMEIsTUFKMUIsYUFJc0NMLFFBSnRDLFFBS0dNLElBTEgsQ0FLUSxVQUFDQyxHQUFELEVBQVM7QUFDYmIsTUFBQUEsUUFBUSxDQUFDRyxNQUFULEdBQWtCLElBQWxCO0FBQ0FILE1BQUFBLFFBQVEsQ0FBQ2MsUUFBVCxHQUFvQkQsR0FBcEI7QUFDQWIsTUFBQUEsUUFBUSxDQUFDSSxXQUFULEdBQXVCLG1CQUF2QjtBQUNELEtBVEgsV0FVUyxVQUFDVyxHQUFELEVBQVM7QUFDZGYsTUFBQUEsUUFBUSxDQUFDRyxNQUFULEdBQWtCLEtBQWxCO0FBQ0FILE1BQUFBLFFBQVEsQ0FBQ2MsUUFBVCxHQUFvQkMsR0FBcEI7QUFDQWYsTUFBQUEsUUFBUSxDQUFDSSxXQUFULEdBQXVCLG9DQUF2QjtBQUNELEtBZEgsYUFlVyxZQUFNO0FBQ2IsYUFBT0wsUUFBUSxDQUFDQyxRQUFELENBQWY7QUFDRCxLQWpCSDtBQWtCRCxHQXREYztBQXVEZmlCLEVBQUFBLGlCQUFpQixFQUFFLDJCQUFDWCxRQUFELEVBQVdQLFFBQVgsRUFBd0I7QUFDekMsUUFBSUMsUUFBUSxHQUFHLElBQUlDLGtCQUFKLEVBQWY7O0FBQ0FNLG1CQUNHQyxNQURILEdBRUdDLElBRkgsQ0FFUSxnQkFGUixFQUdHQyxLQUhILENBR1M7QUFBRVEsTUFBQUEsU0FBUyxFQUFFWjtBQUFiLEtBSFQsRUFJR00sSUFKSCxDQUlRLFVBQUNDLEdBQUQsRUFBUztBQUNiYixNQUFBQSxRQUFRLENBQUNHLE1BQVQsR0FBa0IsSUFBbEI7QUFDQUgsTUFBQUEsUUFBUSxDQUFDYyxRQUFULEdBQW9CRCxHQUFwQjtBQUNBYixNQUFBQSxRQUFRLENBQUNJLFdBQVQsR0FBdUIsbUJBQXZCO0FBQ0QsS0FSSCxXQVNTLFVBQUNXLEdBQUQsRUFBUztBQUNkZixNQUFBQSxRQUFRLENBQUNHLE1BQVQsR0FBa0IsS0FBbEI7QUFDQUgsTUFBQUEsUUFBUSxDQUFDYyxRQUFULEdBQW9CQyxHQUFwQjtBQUNBZixNQUFBQSxRQUFRLENBQUNJLFdBQVQsR0FBdUIsb0NBQXZCO0FBQ0QsS0FiSCxhQWNXLFlBQU07QUFDYixhQUFPTCxRQUFRLENBQUNDLFFBQUQsQ0FBZjtBQUNELEtBaEJIO0FBaUJEO0FBMUVjLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxQcm9qZWN0XFxXZWJTaXRlc1xcRGFsaWxrXFxzZXJ2ZXJcXGFwaVxcQnVzaW5lc3Nlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2VuZXJhdGVTZWxlY3QgfSBmcm9tIFwiLi4vLi4vRGF0YUFjY2Vzcy9EYWxpbGlrREFMXCI7XHJcbmltcG9ydCB7IGtuZXggfSBmcm9tIFwiLi4vLi4vY29uZmlnL2RhdGFiYXNlXCI7XHJcbmltcG9ydCB7IFJlc3BvbnNlIH0gZnJvbSBcIi4uLy4uL21vZGVsL3Jlc3BvbnNlXCI7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBnZXRCdXNpbmVzc2VzOiAoY2FsbEJhY2spID0+IHtcclxuICAgIGxldCByZXNwb25zZSA9IG5ldyBSZXNwb25zZSgpO1xyXG4gICAgR2VuZXJhdGVTZWxlY3QoXCJnZXRhbGxidXNpbmVzc2VzXCIsIChyZXN1bHQpID0+IHtcclxuICAgICAgcmVzcG9uc2UgPSByZXN1bHQ7XHJcbiAgICAgIGlmIChyZXN1bHQuU3RhdHVzKSB7XHJcbiAgICAgICAgcmVzcG9uc2UuRGVzY3JpcHRpb24gPSBcItiq2YUg2KzZhNioINin2YTYqNmK2KfZhtin2Kog2KjZhtis2KfYrVwiO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYrdi12YQg2K7Yt9in2KEg2KfYq9mG2KfYoSDZhdit2KfZiNmE2Kkg2KzZhNioINin2YTYqNmK2KfZhtin2KpcIjtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gY2FsbEJhY2socmVzcG9uc2UpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxuICBzZWFyY2hCdXNpbmVzc2VzOiAoc2VhcmNoSWQsIGNhbGxCYWNrKSA9PiB7XHJcbiAgICBsZXQgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoKTtcclxuICAgIGtuZXhcclxuICAgICAgLnNlbGVjdCgpXHJcbiAgICAgIC5mcm9tKFwiZ2V0YWxsYnVzaW5lc3Nlc1wiKVxyXG4gICAgICAud2hlcmUoXCJCdXNpbmVzc05hbWVcIiwgXCJsaWtlXCIsIGAlJHtzZWFyY2hJZH0lYClcclxuICAgICAgLm9yV2hlcmUoXCJDb21wYW55TmFtZVwiLCBcImxpa2VcIiwgYCUke3NlYXJjaElkfSVgKVxyXG4gICAgICAudGhlbigocm93KSA9PiB7XHJcbiAgICAgICAgcmVzcG9uc2UuU3RhdHVzID0gdHJ1ZTtcclxuICAgICAgICByZXNwb25zZS5SZWZyZW5jZSA9IHJvdztcclxuICAgICAgICByZXNwb25zZS5EZXNjcmlwdGlvbiA9IFwi2KrZhdiqINin2YTYudmF2YTZitipINio2YbYrNin2K1cIjtcclxuICAgICAgfSlcclxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICByZXNwb25zZS5TdGF0dXMgPSBmYWxzZTtcclxuICAgICAgICByZXNwb25zZS5SZWZyZW5jZSA9IGVycjtcclxuICAgICAgICByZXNwb25zZS5EZXNjcmlwdGlvbiA9IFwi2K3YtdmEINiu2LfYoyDYp9ir2YbYp9ihINmF2K3Yp9mI2YTYqSDYqtmG2YHZitiwINin2YTYudmF2YTZitipXCI7XHJcbiAgICAgIH0pXHJcbiAgICAgIC5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICByZXR1cm4gY2FsbEJhY2socmVzcG9uc2UpO1xyXG4gICAgICB9KTtcclxuICB9LFxyXG4gIFVzZXJTZWFyY2hCdXNpbmVzc2VzOiAoc2VhcmNoSWQsIGNhbGxCYWNrKSA9PiB7XHJcbiAgICBsZXQgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoKTtcclxuICAgIGtuZXhcclxuICAgICAgLnNlbGVjdCgpXHJcbiAgICAgIC5mcm9tKFwiU2VhcmNoTGlzdGluZ3NcIilcclxuICAgICAgLndoZXJlKFwiTGlzdGluZ0hlYWRlclwiLCBcImxpa2VcIiwgYCUke3NlYXJjaElkfSVgKVxyXG4gICAgICAub3JXaGVyZShcIkNvbXBhbnlOYW1lXCIsIFwibGlrZVwiLCBgJSR7c2VhcmNoSWR9JWApXHJcbiAgICAgIC50aGVuKChyb3cpID0+IHtcclxuICAgICAgICByZXNwb25zZS5TdGF0dXMgPSB0cnVlO1xyXG4gICAgICAgIHJlc3BvbnNlLlJlZnJlbmNlID0gcm93O1xyXG4gICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYqtmF2Kog2KfZhNi52YXZhNmK2Kkg2KjZhtis2KfYrVwiO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIHJlc3BvbnNlLlN0YXR1cyA9IGZhbHNlO1xyXG4gICAgICAgIHJlc3BvbnNlLlJlZnJlbmNlID0gZXJyO1xyXG4gICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYrdi12YQg2K7Yt9ijINin2KvZhtin2KEg2YXYrdin2YjZhNipINiq2YbZgdmK2LAg2KfZhNi52YXZhNmK2KlcIjtcclxuICAgICAgfSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBjYWxsQmFjayhyZXNwb25zZSk7XHJcbiAgICAgIH0pO1xyXG4gIH0sXHJcbiAgZ2V0TGlzdGluZ0RldGFpbHM6IChzZWFyY2hJZCwgY2FsbEJhY2spID0+IHtcclxuICAgIGxldCByZXNwb25zZSA9IG5ldyBSZXNwb25zZSgpO1xyXG4gICAga25leFxyXG4gICAgICAuc2VsZWN0KClcclxuICAgICAgLmZyb20oXCJMaXN0aW5nRGV0YWlsc1wiKVxyXG4gICAgICAud2hlcmUoeyBMaXN0aW5nSWQ6IHNlYXJjaElkIH0pXHJcbiAgICAgIC50aGVuKChyb3cpID0+IHtcclxuICAgICAgICByZXNwb25zZS5TdGF0dXMgPSB0cnVlO1xyXG4gICAgICAgIHJlc3BvbnNlLlJlZnJlbmNlID0gcm93O1xyXG4gICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYqtmF2Kog2KfZhNi52YXZhNmK2Kkg2KjZhtis2KfYrVwiO1xyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIHJlc3BvbnNlLlN0YXR1cyA9IGZhbHNlO1xyXG4gICAgICAgIHJlc3BvbnNlLlJlZnJlbmNlID0gZXJyO1xyXG4gICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYrdi12YQg2K7Yt9ijINin2KvZhtin2KEg2YXYrdin2YjZhNipINiq2YbZgdmK2LAg2KfZhNi52YXZhNmK2KlcIjtcclxuICAgICAgfSlcclxuICAgICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBjYWxsQmFjayhyZXNwb25zZSk7XHJcbiAgICAgIH0pO1xyXG4gIH0sXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "business.service.js"
      ],
      "names": [
        "module",
        "exports",
        "getBusinesses",
        "callBack",
        "response",
        "Response",
        "result",
        "Status",
        "Description",
        "searchBusinesses",
        "searchId",
        "knex",
        "select",
        "from",
        "where",
        "orWhere",
        "then",
        "row",
        "Refrence",
        "err",
        "UserSearchBusinesses",
        "getListingDetails",
        "ListingId"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,aAAa,EAAE,uBAACC,QAAD,EAAc;AAC3B,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;AACA,oCAAe,kBAAf,EAAmC,UAACC,MAAD,EAAY;AAC7CF,MAAAA,QAAQ,GAAGE,MAAX;;AACA,UAAIA,MAAM,CAACC,MAAX,EAAmB;AACjBH,QAAAA,QAAQ,CAACI,WAAT,GAAuB,uBAAvB;AACD,OAFD,MAEO;AACLJ,QAAAA,QAAQ,CAACI,WAAT,GAAuB,oCAAvB;AACD;;AACD,aAAOL,QAAQ,CAACC,QAAD,CAAf;AACD,KARD;AASD,GAZc;AAafK,EAAAA,gBAAgB,EAAE,0BAACC,QAAD,EAAWP,QAAX,EAAwB;AACxC,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAM,mBACGC,MADH,GAEGC,IAFH,CAEQ,kBAFR,EAGGC,KAHH,CAGS,cAHT,EAGyB,MAHzB,aAGqCJ,QAHrC,QAIGK,OAJH,CAIW,aAJX,EAI0B,MAJ1B,aAIsCL,QAJtC,QAKGM,IALH,CAKQ,UAACC,GAAD,EAAS;AACbb,MAAAA,QAAQ,CAACG,MAAT,GAAkB,IAAlB;AACAH,MAAAA,QAAQ,CAACc,QAAT,GAAoBD,GAApB;AACAb,MAAAA,QAAQ,CAACI,WAAT,GAAuB,mBAAvB;AACD,KATH,WAUS,UAACW,GAAD,EAAS;AACdf,MAAAA,QAAQ,CAACG,MAAT,GAAkB,KAAlB;AACAH,MAAAA,QAAQ,CAACc,QAAT,GAAoBC,GAApB;AACAf,MAAAA,QAAQ,CAACI,WAAT,GAAuB,oCAAvB;AACD,KAdH,aAeW,YAAM;AACb,aAAOL,QAAQ,CAACC,QAAD,CAAf;AACD,KAjBH;AAkBD,GAjCc;AAkCfgB,EAAAA,oBAAoB,EAAE,8BAACV,QAAD,EAAWP,QAAX,EAAwB;AAC5C,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAM,mBACGC,MADH,GAEGC,IAFH,CAEQ,gBAFR,EAGGC,KAHH,CAGS,eAHT,EAG0B,MAH1B,aAGsCJ,QAHtC,QAIGK,OAJH,CAIW,aAJX,EAI0B,MAJ1B,aAIsCL,QAJtC,QAKGM,IALH,CAKQ,UAACC,GAAD,EAAS;AACbb,MAAAA,QAAQ,CAACG,MAAT,GAAkB,IAAlB;AACAH,MAAAA,QAAQ,CAACc,QAAT,GAAoBD,GAApB;AACAb,MAAAA,QAAQ,CAACI,WAAT,GAAuB,mBAAvB;AACD,KATH,WAUS,UAACW,GAAD,EAAS;AACdf,MAAAA,QAAQ,CAACG,MAAT,GAAkB,KAAlB;AACAH,MAAAA,QAAQ,CAACc,QAAT,GAAoBC,GAApB;AACAf,MAAAA,QAAQ,CAACI,WAAT,GAAuB,oCAAvB;AACD,KAdH,aAeW,YAAM;AACb,aAAOL,QAAQ,CAACC,QAAD,CAAf;AACD,KAjBH;AAkBD,GAtDc;AAuDfiB,EAAAA,iBAAiB,EAAE,2BAACX,QAAD,EAAWP,QAAX,EAAwB;AACzC,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAM,mBACGC,MADH,GAEGC,IAFH,CAEQ,gBAFR,EAGGC,KAHH,CAGS;AAAEQ,MAAAA,SAAS,EAAEZ;AAAb,KAHT,EAIGM,IAJH,CAIQ,UAACC,GAAD,EAAS;AACbb,MAAAA,QAAQ,CAACG,MAAT,GAAkB,IAAlB;AACAH,MAAAA,QAAQ,CAACc,QAAT,GAAoBD,GAApB;AACAb,MAAAA,QAAQ,CAACI,WAAT,GAAuB,mBAAvB;AACD,KARH,WASS,UAACW,GAAD,EAAS;AACdf,MAAAA,QAAQ,CAACG,MAAT,GAAkB,KAAlB;AACAH,MAAAA,QAAQ,CAACc,QAAT,GAAoBC,GAApB;AACAf,MAAAA,QAAQ,CAACI,WAAT,GAAuB,oCAAvB;AACD,KAbH,aAcW,YAAM;AACb,aAAOL,QAAQ,CAACC,QAAD,CAAf;AACD,KAhBH;AAiBD;AA1Ec,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Businesses\\",
      "sourcesContent": [
        "import { GenerateSelect } from \"../../DataAccess/DalilikDAL\";\r\nimport { knex } from \"../../config/database\";\r\nimport { Response } from \"../../model/response\";\r\n\r\nmodule.exports = {\r\n  getBusinesses: (callBack) => {\r\n    let response = new Response();\r\n    GenerateSelect(\"getallbusinesses\", (result) => {\r\n      response = result;\r\n      if (result.Status) {\r\n        response.Description = \"تم جلب البيانات بنجاح\";\r\n      } else {\r\n        response.Description = \"حصل خطاء اثناء محاولة جلب البيانات\";\r\n      }\r\n      return callBack(response);\r\n    });\r\n  },\r\n  searchBusinesses: (searchId, callBack) => {\r\n    let response = new Response();\r\n    knex\r\n      .select()\r\n      .from(\"getallbusinesses\")\r\n      .where(\"BusinessName\", \"like\", `%${searchId}%`)\r\n      .orWhere(\"CompanyName\", \"like\", `%${searchId}%`)\r\n      .then((row) => {\r\n        response.Status = true;\r\n        response.Refrence = row;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callBack(response);\r\n      });\r\n  },\r\n  UserSearchBusinesses: (searchId, callBack) => {\r\n    let response = new Response();\r\n    knex\r\n      .select()\r\n      .from(\"SearchListings\")\r\n      .where(\"ListingHeader\", \"like\", `%${searchId}%`)\r\n      .orWhere(\"CompanyName\", \"like\", `%${searchId}%`)\r\n      .then((row) => {\r\n        response.Status = true;\r\n        response.Refrence = row;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callBack(response);\r\n      });\r\n  },\r\n  getListingDetails: (searchId, callBack) => {\r\n    let response = new Response();\r\n    knex\r\n      .select()\r\n      .from(\"ListingDetails\")\r\n      .where({ ListingId: searchId })\r\n      .then((row) => {\r\n        response.Status = true;\r\n        response.Refrence = row;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callBack(response);\r\n      });\r\n  },\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610981292486
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\model\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\model\\\\response.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\model\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\model\\response.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\model\\response.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\model\\response.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\model\\",
        "sourceFileName": "response.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Response = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Response = function Response(Status, Refrence, Refrence2, Description) {\n  _classCallCheck(this, Response);\n\n  this.Status = Status;\n  this.Refrence = Refrence;\n  this.Refrence2 = Refrence2;\n  this.Description = Description;\n};\n\nexports.Response = Response;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3BvbnNlLmpzIl0sIm5hbWVzIjpbIlJlc3BvbnNlIiwiU3RhdHVzIiwiUmVmcmVuY2UiLCJSZWZyZW5jZTIiLCJEZXNjcmlwdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQWFBLFEsR0FDWCxrQkFBWUMsTUFBWixFQUFvQkMsUUFBcEIsRUFBK0JDLFNBQS9CLEVBQTJDQyxXQUEzQyxFQUF3RDtBQUFBOztBQUN0RCxPQUFLSCxNQUFMLEdBQWNBLE1BQWQ7QUFDQSxPQUFLQyxRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLE9BQUtDLFNBQUwsR0FBaUJBLFNBQWpCO0FBQ0EsT0FBS0MsV0FBTCxHQUFtQkEsV0FBbkI7QUFDRCxDIiwic291cmNlUm9vdCI6IkQ6XFxQcm9qZWN0XFxXZWJTaXRlc1xcRGFsaWxrXFxzZXJ2ZXJcXG1vZGVsXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUmVzcG9uc2Uge1xyXG4gIGNvbnN0cnVjdG9yKFN0YXR1cywgUmVmcmVuY2UgLCBSZWZyZW5jZTIgLCBEZXNjcmlwdGlvbikge1xyXG4gICAgdGhpcy5TdGF0dXMgPSBTdGF0dXM7XHJcbiAgICB0aGlzLlJlZnJlbmNlID0gUmVmcmVuY2U7XHJcbiAgICB0aGlzLlJlZnJlbmNlMiA9IFJlZnJlbmNlMjtcclxuICAgIHRoaXMuRGVzY3JpcHRpb24gPSBEZXNjcmlwdGlvbjtcclxuICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "response.js"
      ],
      "names": [
        "Response",
        "Status",
        "Refrence",
        "Refrence2",
        "Description"
      ],
      "mappings": ";;;;;;;;;IAAaA,Q,GACX,kBAAYC,MAAZ,EAAoBC,QAApB,EAA+BC,SAA/B,EAA2CC,WAA3C,EAAwD;AAAA;;AACtD,OAAKH,MAAL,GAAcA,MAAd;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACA,OAAKC,WAAL,GAAmBA,WAAnB;AACD,C",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\model\\",
      "sourcesContent": [
        "export class Response {\r\n  constructor(Status, Refrence , Refrence2 , Description) {\r\n    this.Status = Status;\r\n    this.Refrence = Refrence;\r\n    this.Refrence2 = Refrence2;\r\n    this.Description = Description;\r\n  }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1609082410493
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Login&Register\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Login&Register\\\\login.router.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\login.router.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\login.router.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\login.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\",
        "sourceFileName": "login.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _login = require(\"./login.controller\");\n\nvar router = require(\"express\").Router();\n\nrouter.post(\"/api/Users/Register\", _login.Register);\nrouter.post(\"/api/Users/Login\", _login.Login);\nrouter.post(\"/api/Users/Logout\", _login.logout);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLnJvdXRlci5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJyZXF1aXJlIiwiUm91dGVyIiwicG9zdCIsIlJlZ2lzdGVyIiwiTG9naW4iLCJsb2dvdXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBUCxDQUFtQkMsTUFBbkIsRUFBZjs7QUFDQUYsTUFBTSxDQUFDRyxJQUFQLENBQVkscUJBQVosRUFBbUNDLGVBQW5DO0FBQ0FKLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGtCQUFaLEVBQWdDRSxZQUFoQztBQUNBTCxNQUFNLENBQUNHLElBQVAsQ0FBWSxtQkFBWixFQUFpQ0csYUFBakM7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCUixNQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcUHJvamVjdFxcV2ViU2l0ZXNcXERhbGlsa1xcc2VydmVyXFxhcGlcXExvZ2luJlJlZ2lzdGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWdpc3RlciAsIExvZ2luICwgbG9nb3V0fSBmcm9tIFwiLi9sb2dpbi5jb250cm9sbGVyXCI7XHJcbmNvbnN0IHJvdXRlciA9IHJlcXVpcmUoXCJleHByZXNzXCIpLlJvdXRlcigpO1xyXG5yb3V0ZXIucG9zdChcIi9hcGkvVXNlcnMvUmVnaXN0ZXJcIiwgUmVnaXN0ZXIpO1xyXG5yb3V0ZXIucG9zdChcIi9hcGkvVXNlcnMvTG9naW5cIiwgTG9naW4pO1xyXG5yb3V0ZXIucG9zdChcIi9hcGkvVXNlcnMvTG9nb3V0XCIsIGxvZ291dCk7XHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "login.router.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "post",
        "Register",
        "Login",
        "logout",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACAF,MAAM,CAACG,IAAP,CAAY,qBAAZ,EAAmCC,eAAnC;AACAJ,MAAM,CAACG,IAAP,CAAY,kBAAZ,EAAgCE,YAAhC;AACAL,MAAM,CAACG,IAAP,CAAY,mBAAZ,EAAiCG,aAAjC;AACAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\",
      "sourcesContent": [
        "import { Register , Login , logout} from \"./login.controller\";\r\nconst router = require(\"express\").Router();\r\nrouter.post(\"/api/Users/Register\", Register);\r\nrouter.post(\"/api/Users/Login\", Login);\r\nrouter.post(\"/api/Users/Logout\", logout);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610801736669
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Login&Register\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Login&Register\\\\login.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\login.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\login.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\login.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\",
        "sourceFileName": "login.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _login = require(\"./login.service\");\n\nvar _user = require(\"../../model/user\");\n\nvar _jsonwebtoken = require(\"jsonwebtoken\");\n\nvar _config = _interopRequireDefault(require(\"../../auth/config\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = {\n  Register: function Register(req, res) {\n    var user = new _user.User();\n    user.UserName = req.body.userName;\n    user.Password = req.body.password;\n    user.Email = req.body.email;\n    user.ProfileImage = req.body.profileImage;\n    user.UserState = 0;\n    user.GroupId = 1;\n    user.UserType = req.body.userType;\n    user.DateAdded = Date.now().toLocaleString();\n    (0, _login.Register)(user, function (result) {\n      if (result.Status) {\n        var token = (0, _jsonwebtoken.sign)({\n          id: result.Refrence[0]\n        }, _config[\"default\"].secret, {\n          expiresIn: 86400 // expires in 24 hours\n\n        });\n        result.Refrence2 = token;\n      }\n\n      return res.json(result);\n    });\n  },\n  Login: function Login(req, res) {\n    var user = new _user.User();\n    user.Email = req.body.email;\n    user.Password = req.body.password;\n    (0, _login.Login)(user, function (result) {\n      if (result.Status) {\n        var token = (0, _jsonwebtoken.sign)({\n          id: result.Refrence2.Id\n        }, _config[\"default\"].secret, {\n          expiresIn: 86400 // expires in 24 hours\n\n        });\n        result.Refrence2 = token;\n      } else {}\n\n      return res.json(result);\n    });\n  },\n  logout: function logout(req, res) {\n    res.status(200).send({\n      auth: false,\n      token: null\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIlJlZ2lzdGVyIiwicmVxIiwicmVzIiwidXNlciIsIlVzZXIiLCJVc2VyTmFtZSIsImJvZHkiLCJ1c2VyTmFtZSIsIlBhc3N3b3JkIiwicGFzc3dvcmQiLCJFbWFpbCIsImVtYWlsIiwiUHJvZmlsZUltYWdlIiwicHJvZmlsZUltYWdlIiwiVXNlclN0YXRlIiwiR3JvdXBJZCIsIlVzZXJUeXBlIiwidXNlclR5cGUiLCJEYXRlQWRkZWQiLCJEYXRlIiwibm93IiwidG9Mb2NhbGVTdHJpbmciLCJyZXN1bHQiLCJTdGF0dXMiLCJ0b2tlbiIsImlkIiwiUmVmcmVuY2UiLCJjb25maWciLCJzZWNyZXQiLCJleHBpcmVzSW4iLCJSZWZyZW5jZTIiLCJqc29uIiwiTG9naW4iLCJJZCIsImxvZ291dCIsInN0YXR1cyIsInNlbmQiLCJhdXRoIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmQyxFQUFBQSxRQUFRLEVBQUUsa0JBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3RCLFFBQUlDLElBQUksR0FBRyxJQUFJQyxVQUFKLEVBQVg7QUFDQUQsSUFBQUEsSUFBSSxDQUFDRSxRQUFMLEdBQWdCSixHQUFHLENBQUNLLElBQUosQ0FBU0MsUUFBekI7QUFDQUosSUFBQUEsSUFBSSxDQUFDSyxRQUFMLEdBQWdCUCxHQUFHLENBQUNLLElBQUosQ0FBU0csUUFBekI7QUFDQU4sSUFBQUEsSUFBSSxDQUFDTyxLQUFMLEdBQWFULEdBQUcsQ0FBQ0ssSUFBSixDQUFTSyxLQUF0QjtBQUNBUixJQUFBQSxJQUFJLENBQUNTLFlBQUwsR0FBb0JYLEdBQUcsQ0FBQ0ssSUFBSixDQUFTTyxZQUE3QjtBQUNBVixJQUFBQSxJQUFJLENBQUNXLFNBQUwsR0FBaUIsQ0FBakI7QUFDQVgsSUFBQUEsSUFBSSxDQUFDWSxPQUFMLEdBQWUsQ0FBZjtBQUNBWixJQUFBQSxJQUFJLENBQUNhLFFBQUwsR0FBZ0JmLEdBQUcsQ0FBQ0ssSUFBSixDQUFTVyxRQUF6QjtBQUNBZCxJQUFBQSxJQUFJLENBQUNlLFNBQUwsR0FBaUJDLElBQUksQ0FBQ0MsR0FBTCxHQUFXQyxjQUFYLEVBQWpCO0FBQ0EseUJBQVNsQixJQUFULEVBQWUsVUFBQ21CLE1BQUQsRUFBWTtBQUN6QixVQUFJQSxNQUFNLENBQUNDLE1BQVgsRUFBbUI7QUFDakIsWUFBSUMsS0FBSyxHQUFHLHdCQUFLO0FBQUVDLFVBQUFBLEVBQUUsRUFBRUgsTUFBTSxDQUFDSSxRQUFQLENBQWdCLENBQWhCO0FBQU4sU0FBTCxFQUFpQ0MsbUJBQU9DLE1BQXhDLEVBQWdEO0FBQzFEQyxVQUFBQSxTQUFTLEVBQUUsS0FEK0MsQ0FDeEM7O0FBRHdDLFNBQWhELENBQVo7QUFHQVAsUUFBQUEsTUFBTSxDQUFDUSxTQUFQLEdBQW1CTixLQUFuQjtBQUNEOztBQUNELGFBQU90QixHQUFHLENBQUM2QixJQUFKLENBQVNULE1BQVQsQ0FBUDtBQUNELEtBUkQ7QUFTRCxHQXBCYztBQXFCZlUsRUFBQUEsS0FBSyxFQUFFLGVBQUMvQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNuQixRQUFJQyxJQUFJLEdBQUcsSUFBSUMsVUFBSixFQUFYO0FBQ0FELElBQUFBLElBQUksQ0FBQ08sS0FBTCxHQUFhVCxHQUFHLENBQUNLLElBQUosQ0FBU0ssS0FBdEI7QUFDQVIsSUFBQUEsSUFBSSxDQUFDSyxRQUFMLEdBQWdCUCxHQUFHLENBQUNLLElBQUosQ0FBU0csUUFBekI7QUFDQSxzQkFBTU4sSUFBTixFQUFZLFVBQUNtQixNQUFELEVBQVk7QUFDdEIsVUFBSUEsTUFBTSxDQUFDQyxNQUFYLEVBQW1CO0FBQ2pCLFlBQUlDLEtBQUssR0FBRyx3QkFBSztBQUFFQyxVQUFBQSxFQUFFLEVBQUVILE1BQU0sQ0FBQ1EsU0FBUCxDQUFpQkc7QUFBdkIsU0FBTCxFQUFrQ04sbUJBQU9DLE1BQXpDLEVBQWlEO0FBQzNEQyxVQUFBQSxTQUFTLEVBQUUsS0FEZ0QsQ0FDekM7O0FBRHlDLFNBQWpELENBQVo7QUFHQVAsUUFBQUEsTUFBTSxDQUFDUSxTQUFQLEdBQW1CTixLQUFuQjtBQUNELE9BTEQsTUFLSyxDQUVKOztBQUNELGFBQU90QixHQUFHLENBQUM2QixJQUFKLENBQVNULE1BQVQsQ0FBUDtBQUNELEtBVkQ7QUFXRCxHQXBDYztBQXFDZlksRUFBQUEsTUFBTSxFQUFFLGdCQUFDakMsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDcEJBLElBQUFBLEdBQUcsQ0FBQ2lDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFQyxNQUFBQSxJQUFJLEVBQUUsS0FBUjtBQUFlYixNQUFBQSxLQUFLLEVBQUU7QUFBdEIsS0FBckI7QUFDRDtBQXZDYyxDQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcUHJvamVjdFxcV2ViU2l0ZXNcXERhbGlsa1xcc2VydmVyXFxhcGlcXExvZ2luJlJlZ2lzdGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWdpc3RlciwgTG9naW4gfSBmcm9tIFwiLi9sb2dpbi5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IFVzZXIgfSBmcm9tIFwiLi4vLi4vbW9kZWwvdXNlclwiO1xyXG5pbXBvcnQgeyBzaWduLCBkZXN0cm95IH0gZnJvbSBcImpzb253ZWJ0b2tlblwiO1xyXG5pbXBvcnQgY29uZmlnIGZyb20gXCIuLi8uLi9hdXRoL2NvbmZpZ1wiO1xyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBSZWdpc3RlcjogKHJlcSwgcmVzKSA9PiB7XHJcbiAgICB2YXIgdXNlciA9IG5ldyBVc2VyKCk7XHJcbiAgICB1c2VyLlVzZXJOYW1lID0gcmVxLmJvZHkudXNlck5hbWU7XHJcbiAgICB1c2VyLlBhc3N3b3JkID0gcmVxLmJvZHkucGFzc3dvcmQ7XHJcbiAgICB1c2VyLkVtYWlsID0gcmVxLmJvZHkuZW1haWw7XHJcbiAgICB1c2VyLlByb2ZpbGVJbWFnZSA9IHJlcS5ib2R5LnByb2ZpbGVJbWFnZTtcclxuICAgIHVzZXIuVXNlclN0YXRlID0gMDtcclxuICAgIHVzZXIuR3JvdXBJZCA9IDE7XHJcbiAgICB1c2VyLlVzZXJUeXBlID0gcmVxLmJvZHkudXNlclR5cGU7XHJcbiAgICB1c2VyLkRhdGVBZGRlZCA9IERhdGUubm93KCkudG9Mb2NhbGVTdHJpbmcoKTtcclxuICAgIFJlZ2lzdGVyKHVzZXIsIChyZXN1bHQpID0+IHtcclxuICAgICAgaWYgKHJlc3VsdC5TdGF0dXMpIHtcclxuICAgICAgICB2YXIgdG9rZW4gPSBzaWduKHsgaWQ6IHJlc3VsdC5SZWZyZW5jZVswXSB9LCBjb25maWcuc2VjcmV0LCB7XHJcbiAgICAgICAgICBleHBpcmVzSW46IDg2NDAwLCAvLyBleHBpcmVzIGluIDI0IGhvdXJzXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmVzdWx0LlJlZnJlbmNlMiA9IHRva2VuO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxuICBMb2dpbjogKHJlcSwgcmVzKSA9PiB7XHJcbiAgICB2YXIgdXNlciA9IG5ldyBVc2VyKCk7XHJcbiAgICB1c2VyLkVtYWlsID0gcmVxLmJvZHkuZW1haWw7XHJcbiAgICB1c2VyLlBhc3N3b3JkID0gcmVxLmJvZHkucGFzc3dvcmQ7XHJcbiAgICBMb2dpbih1c2VyLCAocmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmIChyZXN1bHQuU3RhdHVzKSB7XHJcbiAgICAgICAgdmFyIHRva2VuID0gc2lnbih7IGlkOiByZXN1bHQuUmVmcmVuY2UyLklkIH0sIGNvbmZpZy5zZWNyZXQsIHtcclxuICAgICAgICAgIGV4cGlyZXNJbjogODY0MDAsIC8vIGV4cGlyZXMgaW4gMjQgaG91cnNcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXN1bHQuUmVmcmVuY2UyID0gdG9rZW47XHJcbiAgICAgIH1lbHNle1xyXG5cclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcmVzLmpzb24ocmVzdWx0KTtcclxuICAgIH0pO1xyXG4gIH0sXHJcbiAgbG9nb3V0OiAocmVxLCByZXMpID0+IHtcclxuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKHsgYXV0aDogZmFsc2UsIHRva2VuOiBudWxsIH0pO1xyXG4gIH0sXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "login.controller.js"
      ],
      "names": [
        "module",
        "exports",
        "Register",
        "req",
        "res",
        "user",
        "User",
        "UserName",
        "body",
        "userName",
        "Password",
        "password",
        "Email",
        "email",
        "ProfileImage",
        "profileImage",
        "UserState",
        "GroupId",
        "UserType",
        "userType",
        "DateAdded",
        "Date",
        "now",
        "toLocaleString",
        "result",
        "Status",
        "token",
        "id",
        "Refrence",
        "config",
        "secret",
        "expiresIn",
        "Refrence2",
        "json",
        "Login",
        "Id",
        "logout",
        "status",
        "send",
        "auth"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMC,GAAN,EAAc;AACtB,QAAIC,IAAI,GAAG,IAAIC,UAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,QAAL,GAAgBJ,GAAG,CAACK,IAAJ,CAASC,QAAzB;AACAJ,IAAAA,IAAI,CAACK,QAAL,GAAgBP,GAAG,CAACK,IAAJ,CAASG,QAAzB;AACAN,IAAAA,IAAI,CAACO,KAAL,GAAaT,GAAG,CAACK,IAAJ,CAASK,KAAtB;AACAR,IAAAA,IAAI,CAACS,YAAL,GAAoBX,GAAG,CAACK,IAAJ,CAASO,YAA7B;AACAV,IAAAA,IAAI,CAACW,SAAL,GAAiB,CAAjB;AACAX,IAAAA,IAAI,CAACY,OAAL,GAAe,CAAf;AACAZ,IAAAA,IAAI,CAACa,QAAL,GAAgBf,GAAG,CAACK,IAAJ,CAASW,QAAzB;AACAd,IAAAA,IAAI,CAACe,SAAL,GAAiBC,IAAI,CAACC,GAAL,GAAWC,cAAX,EAAjB;AACA,yBAASlB,IAAT,EAAe,UAACmB,MAAD,EAAY;AACzB,UAAIA,MAAM,CAACC,MAAX,EAAmB;AACjB,YAAIC,KAAK,GAAG,wBAAK;AAAEC,UAAAA,EAAE,EAAEH,MAAM,CAACI,QAAP,CAAgB,CAAhB;AAAN,SAAL,EAAiCC,mBAAOC,MAAxC,EAAgD;AAC1DC,UAAAA,SAAS,EAAE,KAD+C,CACxC;;AADwC,SAAhD,CAAZ;AAGAP,QAAAA,MAAM,CAACQ,SAAP,GAAmBN,KAAnB;AACD;;AACD,aAAOtB,GAAG,CAAC6B,IAAJ,CAAST,MAAT,CAAP;AACD,KARD;AASD,GApBc;AAqBfU,EAAAA,KAAK,EAAE,eAAC/B,GAAD,EAAMC,GAAN,EAAc;AACnB,QAAIC,IAAI,GAAG,IAAIC,UAAJ,EAAX;AACAD,IAAAA,IAAI,CAACO,KAAL,GAAaT,GAAG,CAACK,IAAJ,CAASK,KAAtB;AACAR,IAAAA,IAAI,CAACK,QAAL,GAAgBP,GAAG,CAACK,IAAJ,CAASG,QAAzB;AACA,sBAAMN,IAAN,EAAY,UAACmB,MAAD,EAAY;AACtB,UAAIA,MAAM,CAACC,MAAX,EAAmB;AACjB,YAAIC,KAAK,GAAG,wBAAK;AAAEC,UAAAA,EAAE,EAAEH,MAAM,CAACQ,SAAP,CAAiBG;AAAvB,SAAL,EAAkCN,mBAAOC,MAAzC,EAAiD;AAC3DC,UAAAA,SAAS,EAAE,KADgD,CACzC;;AADyC,SAAjD,CAAZ;AAGAP,QAAAA,MAAM,CAACQ,SAAP,GAAmBN,KAAnB;AACD,OALD,MAKK,CAEJ;;AACD,aAAOtB,GAAG,CAAC6B,IAAJ,CAAST,MAAT,CAAP;AACD,KAVD;AAWD,GApCc;AAqCfY,EAAAA,MAAM,EAAE,gBAACjC,GAAD,EAAMC,GAAN,EAAc;AACpBA,IAAAA,GAAG,CAACiC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeb,MAAAA,KAAK,EAAE;AAAtB,KAArB;AACD;AAvCc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\",
      "sourcesContent": [
        "import { Register, Login } from \"./login.service\";\r\nimport { User } from \"../../model/user\";\r\nimport { sign, destroy } from \"jsonwebtoken\";\r\nimport config from \"../../auth/config\";\r\nmodule.exports = {\r\n  Register: (req, res) => {\r\n    var user = new User();\r\n    user.UserName = req.body.userName;\r\n    user.Password = req.body.password;\r\n    user.Email = req.body.email;\r\n    user.ProfileImage = req.body.profileImage;\r\n    user.UserState = 0;\r\n    user.GroupId = 1;\r\n    user.UserType = req.body.userType;\r\n    user.DateAdded = Date.now().toLocaleString();\r\n    Register(user, (result) => {\r\n      if (result.Status) {\r\n        var token = sign({ id: result.Refrence[0] }, config.secret, {\r\n          expiresIn: 86400, // expires in 24 hours\r\n        });\r\n        result.Refrence2 = token;\r\n      }\r\n      return res.json(result);\r\n    });\r\n  },\r\n  Login: (req, res) => {\r\n    var user = new User();\r\n    user.Email = req.body.email;\r\n    user.Password = req.body.password;\r\n    Login(user, (result) => {\r\n      if (result.Status) {\r\n        var token = sign({ id: result.Refrence2.Id }, config.secret, {\r\n          expiresIn: 86400, // expires in 24 hours\r\n        });\r\n        result.Refrence2 = token;\r\n      }else{\r\n\r\n      }\r\n      return res.json(result);\r\n    });\r\n  },\r\n  logout: (req, res) => {\r\n    res.status(200).send({ auth: false, token: null });\r\n  },\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611348319407
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Login&Register\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\Login&Register\\\\login.service.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\login.service.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\login.service.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\login.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\",
        "sourceFileName": "login.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _bcrypt = require(\"bcrypt\");\n\nvar _response = require(\"../../model/response\");\n\nvar _DalilikDAL = require(\"../../DataAccess/DalilikDAL\");\n\nvar _database = require(\"../../config/database\");\n\n// var hashedPassword = bcrypt.hashSync(req.body.password, 8);\n//var passwordIsValid = bcrypt.compareSync(req.body.password,user.password);\n// res.status(200).send({ auth: false, token: null }); //LogOut\nmodule.exports = {\n  Register: function Register(user, callBack) {\n    var response = new _response.Response();\n    user.Password = (0, _bcrypt.hashSync)(user.Password, 8); //Check User Type to Enable Or Disable It\n\n    (0, _DalilikDAL.GenerateInsert)(\"systemuser\", user, function (result) {\n      response = result;\n\n      if (result.Status) {\n        response.Description = \"تم تسجيل المستخدم بنجاح\";\n      } else {\n        response.Description = \"حصل خطاء اثناء محاولة تسجيل المستخدم\";\n      }\n\n      return callBack(response);\n    });\n  },\n  Login: function Login(user, callBack) {\n    var response = new _response.Response();\n\n    _database.knex.select().table(\"systemuser\").where(\"email\", user.Email).first().then(function (result) {\n      var passwordIsValid = (0, _bcrypt.compareSync)(user.Password, result.Password);\n      response.Refrence = 200;\n\n      if (passwordIsValid) {\n        response.Status = true;\n        response.Description = \"تم تسجيل الدخول بنجاح\";\n        response.Refrence2 = result;\n      } else {\n        response.Status = false;\n        response.Description = \"إسم المستخدم او كلمة المرور غير صحيحة\";\n      }\n    })[\"catch\"](function (err) {\n      response.Refrence = 500;\n      response.Status = false;\n      response.Description = \"إسم المستخدم او كلمة المرور غير صحيحة\";\n    })[\"finally\"](function () {\n      callBack(response);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLnNlcnZpY2UuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIlJlZ2lzdGVyIiwidXNlciIsImNhbGxCYWNrIiwicmVzcG9uc2UiLCJSZXNwb25zZSIsIlBhc3N3b3JkIiwicmVzdWx0IiwiU3RhdHVzIiwiRGVzY3JpcHRpb24iLCJMb2dpbiIsImtuZXgiLCJzZWxlY3QiLCJ0YWJsZSIsIndoZXJlIiwiRW1haWwiLCJmaXJzdCIsInRoZW4iLCJwYXNzd29yZElzVmFsaWQiLCJSZWZyZW5jZSIsIlJlZnJlbmNlMiIsImVyciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZDLEVBQUFBLFFBQVEsRUFBRSxrQkFBQ0MsSUFBRCxFQUFPQyxRQUFQLEVBQW9CO0FBQzVCLFFBQUlDLFFBQVEsR0FBRyxJQUFJQyxrQkFBSixFQUFmO0FBQ0FILElBQUFBLElBQUksQ0FBQ0ksUUFBTCxHQUFnQixzQkFBU0osSUFBSSxDQUFDSSxRQUFkLEVBQXdCLENBQXhCLENBQWhCLENBRjRCLENBRzVCOztBQUNBLG9DQUFlLFlBQWYsRUFBNkJKLElBQTdCLEVBQW1DLFVBQUNLLE1BQUQsRUFBWTtBQUM3Q0gsTUFBQUEsUUFBUSxHQUFHRyxNQUFYOztBQUNBLFVBQUlBLE1BQU0sQ0FBQ0MsTUFBWCxFQUFtQjtBQUNqQkosUUFBQUEsUUFBUSxDQUFDSyxXQUFULEdBQXVCLHlCQUF2QjtBQUNELE9BRkQsTUFFTztBQUNMTCxRQUFBQSxRQUFRLENBQUNLLFdBQVQsR0FBdUIsc0NBQXZCO0FBQ0Q7O0FBQ0QsYUFBT04sUUFBUSxDQUFDQyxRQUFELENBQWY7QUFDRCxLQVJEO0FBU0QsR0FkYztBQWVmTSxFQUFBQSxLQUFLLEVBQUUsZUFBQ1IsSUFBRCxFQUFPQyxRQUFQLEVBQW9CO0FBQ3pCLFFBQUlDLFFBQVEsR0FBRyxJQUFJQyxrQkFBSixFQUFmOztBQUNBTSxtQkFDR0MsTUFESCxHQUVHQyxLQUZILENBRVMsWUFGVCxFQUdHQyxLQUhILENBR1MsT0FIVCxFQUdrQlosSUFBSSxDQUFDYSxLQUh2QixFQUlHQyxLQUpILEdBS0dDLElBTEgsQ0FLUSxVQUFDVixNQUFELEVBQVk7QUFDaEIsVUFBSVcsZUFBZSxHQUFHLHlCQUFZaEIsSUFBSSxDQUFDSSxRQUFqQixFQUEyQkMsTUFBTSxDQUFDRCxRQUFsQyxDQUF0QjtBQUNBRixNQUFBQSxRQUFRLENBQUNlLFFBQVQsR0FBb0IsR0FBcEI7O0FBQ0EsVUFBSUQsZUFBSixFQUFxQjtBQUNuQmQsUUFBQUEsUUFBUSxDQUFDSSxNQUFULEdBQWtCLElBQWxCO0FBQ0FKLFFBQUFBLFFBQVEsQ0FBQ0ssV0FBVCxHQUF1Qix1QkFBdkI7QUFDQUwsUUFBQUEsUUFBUSxDQUFDZ0IsU0FBVCxHQUFxQmIsTUFBckI7QUFDRCxPQUpELE1BSU87QUFDTEgsUUFBQUEsUUFBUSxDQUFDSSxNQUFULEdBQWtCLEtBQWxCO0FBQ0FKLFFBQUFBLFFBQVEsQ0FBQ0ssV0FBVCxHQUF1Qix1Q0FBdkI7QUFDRDtBQUNGLEtBaEJILFdBaUJTLFVBQUNZLEdBQUQsRUFBUztBQUNkakIsTUFBQUEsUUFBUSxDQUFDZSxRQUFULEdBQW9CLEdBQXBCO0FBQ0FmLE1BQUFBLFFBQVEsQ0FBQ0ksTUFBVCxHQUFrQixLQUFsQjtBQUNBSixNQUFBQSxRQUFRLENBQUNLLFdBQVQsR0FBdUIsdUNBQXZCO0FBQ0QsS0FyQkgsYUFzQlcsWUFBTTtBQUNiTixNQUFBQSxRQUFRLENBQUNDLFFBQUQsQ0FBUjtBQUNELEtBeEJIO0FBeUJEO0FBMUNjLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxQcm9qZWN0XFxXZWJTaXRlc1xcRGFsaWxrXFxzZXJ2ZXJcXGFwaVxcTG9naW4mUmVnaXN0ZXJcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhc2hTeW5jLCBjb21wYXJlU3luYyB9IGZyb20gXCJiY3J5cHRcIjtcclxuaW1wb3J0IHsgUmVzcG9uc2UgfSBmcm9tIFwiLi4vLi4vbW9kZWwvcmVzcG9uc2VcIjtcclxuaW1wb3J0IHsgR2VuZXJhdGVJbnNlcnQgfSBmcm9tIFwiLi4vLi4vRGF0YUFjY2Vzcy9EYWxpbGlrREFMXCI7XHJcbmltcG9ydCB7IGtuZXggfSBmcm9tIFwiLi4vLi4vY29uZmlnL2RhdGFiYXNlXCI7XHJcbi8vIHZhciBoYXNoZWRQYXNzd29yZCA9IGJjcnlwdC5oYXNoU3luYyhyZXEuYm9keS5wYXNzd29yZCwgOCk7XHJcbi8vdmFyIHBhc3N3b3JkSXNWYWxpZCA9IGJjcnlwdC5jb21wYXJlU3luYyhyZXEuYm9keS5wYXNzd29yZCx1c2VyLnBhc3N3b3JkKTtcclxuLy8gcmVzLnN0YXR1cygyMDApLnNlbmQoeyBhdXRoOiBmYWxzZSwgdG9rZW46IG51bGwgfSk7IC8vTG9nT3V0XHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIFJlZ2lzdGVyOiAodXNlciwgY2FsbEJhY2spID0+IHtcclxuICAgIGxldCByZXNwb25zZSA9IG5ldyBSZXNwb25zZSgpO1xyXG4gICAgdXNlci5QYXNzd29yZCA9IGhhc2hTeW5jKHVzZXIuUGFzc3dvcmQsIDgpO1xyXG4gICAgLy9DaGVjayBVc2VyIFR5cGUgdG8gRW5hYmxlIE9yIERpc2FibGUgSXRcclxuICAgIEdlbmVyYXRlSW5zZXJ0KFwic3lzdGVtdXNlclwiLCB1c2VyLCAocmVzdWx0KSA9PiB7XHJcbiAgICAgIHJlc3BvbnNlID0gcmVzdWx0O1xyXG4gICAgICBpZiAocmVzdWx0LlN0YXR1cykge1xyXG4gICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYqtmFINiq2LPYrNmK2YQg2KfZhNmF2LPYqtiu2K/ZhSDYqNmG2KzYp9itXCI7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmVzcG9uc2UuRGVzY3JpcHRpb24gPSBcItit2LXZhCDYrti32KfYoSDYp9ir2YbYp9ihINmF2K3Yp9mI2YTYqSDYqtiz2KzZitmEINin2YTZhdiz2KrYrtiv2YVcIjtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gY2FsbEJhY2socmVzcG9uc2UpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxuICBMb2dpbjogKHVzZXIsIGNhbGxCYWNrKSA9PiB7XHJcbiAgICBsZXQgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoKTtcclxuICAgIGtuZXhcclxuICAgICAgLnNlbGVjdCgpXHJcbiAgICAgIC50YWJsZShcInN5c3RlbXVzZXJcIilcclxuICAgICAgLndoZXJlKFwiZW1haWxcIiwgdXNlci5FbWFpbClcclxuICAgICAgLmZpcnN0KClcclxuICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIHZhciBwYXNzd29yZElzVmFsaWQgPSBjb21wYXJlU3luYyh1c2VyLlBhc3N3b3JkLCByZXN1bHQuUGFzc3dvcmQpO1xyXG4gICAgICAgIHJlc3BvbnNlLlJlZnJlbmNlID0gMjAwO1xyXG4gICAgICAgIGlmIChwYXNzd29yZElzVmFsaWQpIHtcclxuICAgICAgICAgIHJlc3BvbnNlLlN0YXR1cyA9IHRydWU7XHJcbiAgICAgICAgICByZXNwb25zZS5EZXNjcmlwdGlvbiA9IFwi2KrZhSDYqtiz2KzZitmEINin2YTYr9iu2YjZhCDYqNmG2KzYp9itXCI7XHJcbiAgICAgICAgICByZXNwb25zZS5SZWZyZW5jZTIgPSByZXN1bHQ7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHJlc3BvbnNlLlN0YXR1cyA9IGZhbHNlO1xyXG4gICAgICAgICAgcmVzcG9uc2UuRGVzY3JpcHRpb24gPSBcItil2LPZhSDYp9mE2YXYs9iq2K7Yr9mFINin2Ygg2YPZhNmF2Kkg2KfZhNmF2LHZiNixINi62YrYsSDYtdit2YrYrdipXCI7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgIHJlc3BvbnNlLlJlZnJlbmNlID0gNTAwO1xyXG4gICAgICAgIHJlc3BvbnNlLlN0YXR1cyA9IGZhbHNlO1xyXG4gICAgICAgIHJlc3BvbnNlLkRlc2NyaXB0aW9uID0gXCLYpdiz2YUg2KfZhNmF2LPYqtiu2K/ZhSDYp9mIINmD2YTZhdipINin2YTZhdix2YjYsSDYutmK2LEg2LXYrdmK2K3YqVwiO1xyXG4gICAgICB9KVxyXG4gICAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgY2FsbEJhY2socmVzcG9uc2UpO1xyXG4gICAgICB9KTtcclxuICB9LFxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "login.service.js"
      ],
      "names": [
        "module",
        "exports",
        "Register",
        "user",
        "callBack",
        "response",
        "Response",
        "Password",
        "result",
        "Status",
        "Description",
        "Login",
        "knex",
        "select",
        "table",
        "where",
        "Email",
        "first",
        "then",
        "passwordIsValid",
        "Refrence",
        "Refrence2",
        "err"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,QAAQ,EAAE,kBAACC,IAAD,EAAOC,QAAP,EAAoB;AAC5B,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;AACAH,IAAAA,IAAI,CAACI,QAAL,GAAgB,sBAASJ,IAAI,CAACI,QAAd,EAAwB,CAAxB,CAAhB,CAF4B,CAG5B;;AACA,oCAAe,YAAf,EAA6BJ,IAA7B,EAAmC,UAACK,MAAD,EAAY;AAC7CH,MAAAA,QAAQ,GAAGG,MAAX;;AACA,UAAIA,MAAM,CAACC,MAAX,EAAmB;AACjBJ,QAAAA,QAAQ,CAACK,WAAT,GAAuB,yBAAvB;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAACK,WAAT,GAAuB,sCAAvB;AACD;;AACD,aAAON,QAAQ,CAACC,QAAD,CAAf;AACD,KARD;AASD,GAdc;AAefM,EAAAA,KAAK,EAAE,eAACR,IAAD,EAAOC,QAAP,EAAoB;AACzB,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAM,mBACGC,MADH,GAEGC,KAFH,CAES,YAFT,EAGGC,KAHH,CAGS,OAHT,EAGkBZ,IAAI,CAACa,KAHvB,EAIGC,KAJH,GAKGC,IALH,CAKQ,UAACV,MAAD,EAAY;AAChB,UAAIW,eAAe,GAAG,yBAAYhB,IAAI,CAACI,QAAjB,EAA2BC,MAAM,CAACD,QAAlC,CAAtB;AACAF,MAAAA,QAAQ,CAACe,QAAT,GAAoB,GAApB;;AACA,UAAID,eAAJ,EAAqB;AACnBd,QAAAA,QAAQ,CAACI,MAAT,GAAkB,IAAlB;AACAJ,QAAAA,QAAQ,CAACK,WAAT,GAAuB,uBAAvB;AACAL,QAAAA,QAAQ,CAACgB,SAAT,GAAqBb,MAArB;AACD,OAJD,MAIO;AACLH,QAAAA,QAAQ,CAACI,MAAT,GAAkB,KAAlB;AACAJ,QAAAA,QAAQ,CAACK,WAAT,GAAuB,uCAAvB;AACD;AACF,KAhBH,WAiBS,UAACY,GAAD,EAAS;AACdjB,MAAAA,QAAQ,CAACe,QAAT,GAAoB,GAApB;AACAf,MAAAA,QAAQ,CAACI,MAAT,GAAkB,KAAlB;AACAJ,MAAAA,QAAQ,CAACK,WAAT,GAAuB,uCAAvB;AACD,KArBH,aAsBW,YAAM;AACbN,MAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,KAxBH;AAyBD;AA1Cc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\Login&Register\\",
      "sourcesContent": [
        "import { hashSync, compareSync } from \"bcrypt\";\r\nimport { Response } from \"../../model/response\";\r\nimport { GenerateInsert } from \"../../DataAccess/DalilikDAL\";\r\nimport { knex } from \"../../config/database\";\r\n// var hashedPassword = bcrypt.hashSync(req.body.password, 8);\r\n//var passwordIsValid = bcrypt.compareSync(req.body.password,user.password);\r\n// res.status(200).send({ auth: false, token: null }); //LogOut\r\nmodule.exports = {\r\n  Register: (user, callBack) => {\r\n    let response = new Response();\r\n    user.Password = hashSync(user.Password, 8);\r\n    //Check User Type to Enable Or Disable It\r\n    GenerateInsert(\"systemuser\", user, (result) => {\r\n      response = result;\r\n      if (result.Status) {\r\n        response.Description = \"تم تسجيل المستخدم بنجاح\";\r\n      } else {\r\n        response.Description = \"حصل خطاء اثناء محاولة تسجيل المستخدم\";\r\n      }\r\n      return callBack(response);\r\n    });\r\n  },\r\n  Login: (user, callBack) => {\r\n    let response = new Response();\r\n    knex\r\n      .select()\r\n      .table(\"systemuser\")\r\n      .where(\"email\", user.Email)\r\n      .first()\r\n      .then((result) => {\r\n        var passwordIsValid = compareSync(user.Password, result.Password);\r\n        response.Refrence = 200;\r\n        if (passwordIsValid) {\r\n          response.Status = true;\r\n          response.Description = \"تم تسجيل الدخول بنجاح\";\r\n          response.Refrence2 = result;\r\n        } else {\r\n          response.Status = false;\r\n          response.Description = \"إسم المستخدم او كلمة المرور غير صحيحة\";\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        response.Refrence = 500;\r\n        response.Status = false;\r\n        response.Description = \"إسم المستخدم او كلمة المرور غير صحيحة\";\r\n      })\r\n      .finally(() => {\r\n        callBack(response);\r\n      });\r\n  },\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611348234739
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\auth\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\auth\\\\config.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\config.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\config.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = {\n  secret: \"supersecret\"\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VjcmV0Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsTUFBTSxFQUFFO0FBRE8sQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXFByb2plY3RcXFdlYlNpdGVzXFxEYWxpbGtcXHNlcnZlclxcYXV0aFxcIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgc2VjcmV0OiBcInN1cGVyc2VjcmV0XCIsXHJcbn07XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "module",
        "exports",
        "secret"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,MAAM,EAAE;AADO,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\",
      "sourcesContent": [
        "module.exports = {\r\n  secret: \"supersecret\",\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1608140285956
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\model\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\model\\\\user.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\model\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\model\\user.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\model\\user.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\model\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\model\\",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.User = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar User = function User(UserName, Password, Email, GroupId, ProfileImage, UserState, UserType, UserAbout, UserLocation, DateAdded, Phone, Website, CompanyId) {\n  _classCallCheck(this, User);\n\n  this.UserName = UserName;\n  this.Password = Password;\n  this.Email = Email;\n  this.GroupId = GroupId;\n  this.ProfileImage = ProfileImage;\n  this.UserState = UserState;\n  this.UserType = UserType;\n  this.UserAbout = UserAbout;\n  this.UserLocation = UserLocation;\n  this.DateAdded = DateAdded;\n  this.Phone = Phone;\n  this.Website = Website;\n  this.CompanyId = CompanyId;\n};\n\nexports.User = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiVXNlciIsIlVzZXJOYW1lIiwiUGFzc3dvcmQiLCJFbWFpbCIsIkdyb3VwSWQiLCJQcm9maWxlSW1hZ2UiLCJVc2VyU3RhdGUiLCJVc2VyVHlwZSIsIlVzZXJBYm91dCIsIlVzZXJMb2NhdGlvbiIsIkRhdGVBZGRlZCIsIlBob25lIiwiV2Vic2l0ZSIsIkNvbXBhbnlJZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0lBQWFBLEksR0FDWCxjQUNFQyxRQURGLEVBRUVDLFFBRkYsRUFHRUMsS0FIRixFQUlFQyxPQUpGLEVBS0VDLFlBTEYsRUFNRUMsU0FORixFQU9FQyxRQVBGLEVBUUVDLFNBUkYsRUFTRUMsWUFURixFQVVFQyxTQVZGLEVBV0VDLEtBWEYsRUFZRUMsT0FaRixFQWFFQyxTQWJGLEVBY0U7QUFBQTs7QUFDQSxPQUFLWixRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLE9BQUtDLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsT0FBS0MsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsT0FBS0MsT0FBTCxHQUFlQSxPQUFmO0FBQ0EsT0FBS0MsWUFBTCxHQUFvQkEsWUFBcEI7QUFDQSxPQUFLQyxTQUFMLEdBQWlCQSxTQUFqQjtBQUNBLE9BQUtDLFFBQUwsR0FBZ0JBLFFBQWhCO0FBQ0EsT0FBS0MsU0FBTCxHQUFpQkEsU0FBakI7QUFDQSxPQUFLQyxZQUFMLEdBQW9CQSxZQUFwQjtBQUNBLE9BQUtDLFNBQUwsR0FBaUJBLFNBQWpCO0FBQ0EsT0FBS0MsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsT0FBS0MsT0FBTCxHQUFlQSxPQUFmO0FBQ0EsT0FBS0MsU0FBTCxHQUFpQkEsU0FBakI7QUFDRCxDIiwic291cmNlUm9vdCI6IkQ6XFxQcm9qZWN0XFxXZWJTaXRlc1xcRGFsaWxrXFxzZXJ2ZXJcXG1vZGVsXFwiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVXNlciB7XHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBVc2VyTmFtZSxcclxuICAgIFBhc3N3b3JkLFxyXG4gICAgRW1haWwsXHJcbiAgICBHcm91cElkLFxyXG4gICAgUHJvZmlsZUltYWdlLFxyXG4gICAgVXNlclN0YXRlLFxyXG4gICAgVXNlclR5cGUsXHJcbiAgICBVc2VyQWJvdXQsXHJcbiAgICBVc2VyTG9jYXRpb24sXHJcbiAgICBEYXRlQWRkZWQsXHJcbiAgICBQaG9uZSxcclxuICAgIFdlYnNpdGUsXHJcbiAgICBDb21wYW55SWRcclxuICApIHtcclxuICAgIHRoaXMuVXNlck5hbWUgPSBVc2VyTmFtZTtcclxuICAgIHRoaXMuUGFzc3dvcmQgPSBQYXNzd29yZDtcclxuICAgIHRoaXMuRW1haWwgPSBFbWFpbDtcclxuICAgIHRoaXMuR3JvdXBJZCA9IEdyb3VwSWQ7XHJcbiAgICB0aGlzLlByb2ZpbGVJbWFnZSA9IFByb2ZpbGVJbWFnZTtcclxuICAgIHRoaXMuVXNlclN0YXRlID0gVXNlclN0YXRlO1xyXG4gICAgdGhpcy5Vc2VyVHlwZSA9IFVzZXJUeXBlO1xyXG4gICAgdGhpcy5Vc2VyQWJvdXQgPSBVc2VyQWJvdXQ7XHJcbiAgICB0aGlzLlVzZXJMb2NhdGlvbiA9IFVzZXJMb2NhdGlvbjtcclxuICAgIHRoaXMuRGF0ZUFkZGVkID0gRGF0ZUFkZGVkO1xyXG4gICAgdGhpcy5QaG9uZSA9IFBob25lO1xyXG4gICAgdGhpcy5XZWJzaXRlID0gV2Vic2l0ZTtcclxuICAgIHRoaXMuQ29tcGFueUlkID0gQ29tcGFueUlkO1xyXG4gIH1cclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "User",
        "UserName",
        "Password",
        "Email",
        "GroupId",
        "ProfileImage",
        "UserState",
        "UserType",
        "UserAbout",
        "UserLocation",
        "DateAdded",
        "Phone",
        "Website",
        "CompanyId"
      ],
      "mappings": ";;;;;;;;;IAAaA,I,GACX,cACEC,QADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,OAJF,EAKEC,YALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,SARF,EASEC,YATF,EAUEC,SAVF,EAWEC,KAXF,EAYEC,OAZF,EAaEC,SAbF,EAcE;AAAA;;AACA,OAAKZ,QAAL,GAAgBA,QAAhB;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf;AACA,OAAKC,YAAL,GAAoBA,YAApB;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACA,OAAKC,YAAL,GAAoBA,YAApB;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACA,OAAKC,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf;AACA,OAAKC,SAAL,GAAiBA,SAAjB;AACD,C",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\model\\",
      "sourcesContent": [
        "export class User {\r\n  constructor(\r\n    UserName,\r\n    Password,\r\n    Email,\r\n    GroupId,\r\n    ProfileImage,\r\n    UserState,\r\n    UserType,\r\n    UserAbout,\r\n    UserLocation,\r\n    DateAdded,\r\n    Phone,\r\n    Website,\r\n    CompanyId\r\n  ) {\r\n    this.UserName = UserName;\r\n    this.Password = Password;\r\n    this.Email = Email;\r\n    this.GroupId = GroupId;\r\n    this.ProfileImage = ProfileImage;\r\n    this.UserState = UserState;\r\n    this.UserType = UserType;\r\n    this.UserAbout = UserAbout;\r\n    this.UserLocation = UserLocation;\r\n    this.DateAdded = DateAdded;\r\n    this.Phone = Phone;\r\n    this.Website = Website;\r\n    this.CompanyId = CompanyId;\r\n  }\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611347318349
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\DataAccess\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\DataAccess\\\\DalilikDAL.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\DataAccess\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\DataAccess\\DalilikDAL.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\DataAccess\\DalilikDAL.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\DataAccess\\DalilikDAL.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\DataAccess\\",
        "sourceFileName": "DalilikDAL.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _database = require(\"../config/database\");\n\nvar _response = require(\"../model/response\");\n\nmodule.exports = {\n  GenerateSelect: function GenerateSelect(table, callBack) {\n    var response = new _response.Response();\n\n    _database.knex.select().from(table).then(function (row) {\n      response.Status = true;\n      response.Refrence = row;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callBack(response);\n    });\n  },\n  GenerateSelectWithWhere: function GenerateSelectWithWhere(table, Where, callBack) {\n    var response = new _response.Response();\n\n    _database.knex.select().from(table).where(Where).then(function (row) {\n      response.Status = true;\n      response.Refrence = row;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callBack(response);\n    });\n  },\n  GenerateInsert: function GenerateInsert(table, model, callback) {\n    var response = new _response.Response();\n\n    _database.knex.insert(model).into(table).then(function (res) {\n      response.Status = true;\n      response.Refrence = res;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callback(response);\n    });\n  },\n  GenerateSelectWithWhereLimitOffSet: function GenerateSelectWithWhereLimitOffSet(table, Where, limit, offset, callBack) {\n    var response = new _response.Response();\n\n    _database.knex.select(\"*\").from(table).where(Where).limit(limit).offset(offset).then(function (row) {\n      response.Status = true;\n      response.Refrence = row;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callBack(response);\n    });\n  },\n  GenerateUpdate: function GenerateUpdate(table, Where, model, callback) {\n    var response = new _response.Response();\n    (0, _database.knex)(table).where(Where).update(model).then(function (result) {\n      response.Status = true;\n      response.Refrence = result;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callback(response);\n    });\n  },\n  GenerateDelete: function GenerateDelete(table, Where, callBack) {\n    var response = new _response.Response();\n\n    _database.knex[\"delete\"]().from(table).where(Where).then(function (res) {\n      response.Status = true;\n      response.Refrence = res;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callBack(response);\n    });\n  },\n  ExecuteDeleteTransactionTransaction: function ExecuteDeleteTransactionTransaction(table1, table2, where1, where2, callBack) {\n    var response = new _response.Response();\n\n    _database.knex.transaction(function (trx) {\n      trx[\"delete\"]().from(table1).where(where1).transacting(trx).then(function (res) {\n        return trx[\"delete\"]().from(table2).where(where2).transacting(trx);\n      }).then(trx.commit)[\"catch\"](trx.rollback);\n    }).then(function (res) {\n      response.Status = true;\n      response.Refrence = res;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (error) {\n      response.Status = false;\n      response.Refrence = error;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callBack(response);\n    });\n  },\n  GenerateSelectWithWhereOrWhere: function GenerateSelectWithWhereOrWhere(table, Where, OrWhere, callBack) {\n    var response = new _response.Response();\n\n    _database.knex.select().from(table).where(Where).orWhere(OrWhere).then(function (row) {\n      response.Status = true;\n      response.Refrence = row;\n      response.Description = \"تمت العملية بنجاح\";\n    })[\"catch\"](function (err) {\n      response.Status = false;\n      response.Refrence = err;\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\n    })[\"finally\"](function () {\n      return callBack(response);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "DalilikDAL.js"
      ],
      "names": [
        "module",
        "exports",
        "GenerateSelect",
        "table",
        "callBack",
        "response",
        "Response",
        "knex",
        "select",
        "from",
        "then",
        "row",
        "Status",
        "Refrence",
        "Description",
        "err",
        "GenerateSelectWithWhere",
        "Where",
        "where",
        "GenerateInsert",
        "model",
        "callback",
        "insert",
        "into",
        "res",
        "GenerateSelectWithWhereLimitOffSet",
        "limit",
        "offset",
        "GenerateUpdate",
        "update",
        "result",
        "GenerateDelete",
        "ExecuteDeleteTransactionTransaction",
        "table1",
        "table2",
        "where1",
        "where2",
        "transaction",
        "trx",
        "transacting",
        "commit",
        "rollback",
        "error",
        "GenerateSelectWithWhereOrWhere",
        "OrWhere",
        "orWhere"
      ],
      "mappings": ";;AAAA;;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,cAAc,EAAE,wBAACC,KAAD,EAAQC,QAAR,EAAqB;AACnC,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAC,mBACGC,MADH,GAEGC,IAFH,CAEQN,KAFR,EAGGO,IAHH,CAGQ,UAACC,GAAD,EAAS;AACbN,MAAAA,QAAQ,CAACO,MAAT,GAAkB,IAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBF,GAApB;AACAN,MAAAA,QAAQ,CAACS,WAAT,GAAuB,mBAAvB;AACD,KAPH,WAQS,UAACC,GAAD,EAAS;AACdV,MAAAA,QAAQ,CAACO,MAAT,GAAkB,KAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBE,GAApB;AACAV,MAAAA,QAAQ,CAACS,WAAT,GAAuB,oCAAvB;AACD,KAZH,aAaW,YAAM;AACb,aAAOV,QAAQ,CAACC,QAAD,CAAf;AACD,KAfH;AAgBD,GAnBc;AAoBfW,EAAAA,uBAAuB,EAAE,iCAACb,KAAD,EAAQc,KAAR,EAAeb,QAAf,EAA4B;AACnD,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAC,mBACGC,MADH,GAEGC,IAFH,CAEQN,KAFR,EAGGe,KAHH,CAGSD,KAHT,EAIGP,IAJH,CAIQ,UAACC,GAAD,EAAS;AACbN,MAAAA,QAAQ,CAACO,MAAT,GAAkB,IAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBF,GAApB;AACAN,MAAAA,QAAQ,CAACS,WAAT,GAAuB,mBAAvB;AACD,KARH,WASS,UAACC,GAAD,EAAS;AACdV,MAAAA,QAAQ,CAACO,MAAT,GAAkB,KAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBE,GAApB;AACAV,MAAAA,QAAQ,CAACS,WAAT,GAAuB,oCAAvB;AACD,KAbH,aAcW,YAAM;AACb,aAAOV,QAAQ,CAACC,QAAD,CAAf;AACD,KAhBH;AAiBD,GAvCc;AAwCfc,EAAAA,cAAc,EAAE,wBAAChB,KAAD,EAAQiB,KAAR,EAAeC,QAAf,EAA4B;AAC1C,QAAIhB,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAC,mBACGe,MADH,CACUF,KADV,EAEGG,IAFH,CAEQpB,KAFR,EAGGO,IAHH,CAGQ,UAACc,GAAD,EAAS;AACbnB,MAAAA,QAAQ,CAACO,MAAT,GAAkB,IAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBW,GAApB;AACAnB,MAAAA,QAAQ,CAACS,WAAT,GAAuB,mBAAvB;AACD,KAPH,WAQS,UAACC,GAAD,EAAS;AACdV,MAAAA,QAAQ,CAACO,MAAT,GAAkB,KAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBE,GAApB;AACAV,MAAAA,QAAQ,CAACS,WAAT,GAAuB,oCAAvB;AACD,KAZH,aAaW,YAAM;AACb,aAAOO,QAAQ,CAAChB,QAAD,CAAf;AACD,KAfH;AAgBD,GA1Dc;AA2DfoB,EAAAA,kCAAkC,EAAE,4CAClCtB,KADkC,EAElCc,KAFkC,EAGlCS,KAHkC,EAIlCC,MAJkC,EAKlCvB,QALkC,EAM/B;AACH,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAC,mBACGC,MADH,CACU,GADV,EAEGC,IAFH,CAEQN,KAFR,EAGGe,KAHH,CAGSD,KAHT,EAIGS,KAJH,CAISA,KAJT,EAKGC,MALH,CAKUA,MALV,EAMGjB,IANH,CAMQ,UAACC,GAAD,EAAS;AACbN,MAAAA,QAAQ,CAACO,MAAT,GAAkB,IAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBF,GAApB;AACAN,MAAAA,QAAQ,CAACS,WAAT,GAAuB,mBAAvB;AACD,KAVH,WAWS,UAACC,GAAD,EAAS;AACdV,MAAAA,QAAQ,CAACO,MAAT,GAAkB,KAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBE,GAApB;AACAV,MAAAA,QAAQ,CAACS,WAAT,GAAuB,oCAAvB;AACD,KAfH,aAgBW,YAAM;AACb,aAAOV,QAAQ,CAACC,QAAD,CAAf;AACD,KAlBH;AAmBD,GAtFc;AAuFfuB,EAAAA,cAAc,EAAE,wBAACzB,KAAD,EAAQc,KAAR,EAAeG,KAAf,EAAsBC,QAAtB,EAAmC;AACjD,QAAIhB,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;AACA,wBAAKH,KAAL,EACGe,KADH,CACSD,KADT,EAEGY,MAFH,CAEUT,KAFV,EAGGV,IAHH,CAGQ,UAACoB,MAAD,EAAY;AAChBzB,MAAAA,QAAQ,CAACO,MAAT,GAAkB,IAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBiB,MAApB;AACAzB,MAAAA,QAAQ,CAACS,WAAT,GAAuB,mBAAvB;AACD,KAPH,WAQS,UAACC,GAAD,EAAS;AACdV,MAAAA,QAAQ,CAACO,MAAT,GAAkB,KAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBE,GAApB;AACAV,MAAAA,QAAQ,CAACS,WAAT,GAAuB,oCAAvB;AACD,KAZH,aAaW,YAAM;AACb,aAAOO,QAAQ,CAAChB,QAAD,CAAf;AACD,KAfH;AAgBD,GAzGc;AA0Gf0B,EAAAA,cAAc,EAAE,wBAAC5B,KAAD,EAAQc,KAAR,EAAeb,QAAf,EAA4B;AAC1C,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAC,+BAEGE,IAFH,CAEQN,KAFR,EAGGe,KAHH,CAGSD,KAHT,EAIGP,IAJH,CAIQ,UAACc,GAAD,EAAS;AACbnB,MAAAA,QAAQ,CAACO,MAAT,GAAkB,IAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBW,GAApB;AACAnB,MAAAA,QAAQ,CAACS,WAAT,GAAuB,mBAAvB;AACD,KARH,WASS,UAACC,GAAD,EAAS;AACdV,MAAAA,QAAQ,CAACO,MAAT,GAAkB,KAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBE,GAApB;AACAV,MAAAA,QAAQ,CAACS,WAAT,GAAuB,oCAAvB;AACD,KAbH,aAcW,YAAM;AACb,aAAOV,QAAQ,CAACC,QAAD,CAAf;AACD,KAhBH;AAiBD,GA7Hc;AA8Hf2B,EAAAA,mCAAmC,EAAC,6CAACC,MAAD,EAAUC,MAAV,EAAmBC,MAAnB,EAA4BC,MAA5B,EAAqChC,QAArC,EAAiD;AACnF,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAC,mBACC8B,WADD,CACa,UAACC,GAAD,EAAS;AACpBA,MAAAA,GAAG,UAAH,GAEG7B,IAFH,CAEQwB,MAFR,EAGGf,KAHH,CAGSiB,MAHT,EAIGI,WAJH,CAIeD,GAJf,EAKG5B,IALH,CAKQ,UAACc,GAAD,EAAS;AACb,eAAOc,GAAG,UAAH,GAEJ7B,IAFI,CAECyB,MAFD,EAGJhB,KAHI,CAGEkB,MAHF,EAIJG,WAJI,CAIQD,GAJR,CAAP;AAKD,OAXH,EAYG5B,IAZH,CAYQ4B,GAAG,CAACE,MAZZ,WAaSF,GAAG,CAACG,QAbb;AAcD,KAhBD,EAiBC/B,IAjBD,CAiBM,UAACc,GAAD,EAAS;AACbnB,MAAAA,QAAQ,CAACO,MAAT,GAAkB,IAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBW,GAApB;AACAnB,MAAAA,QAAQ,CAACS,WAAT,GAAuB,mBAAvB;AACD,KArBD,WAsBO,UAAC4B,KAAD,EAAW;AAChBrC,MAAAA,QAAQ,CAACO,MAAT,GAAkB,KAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoB6B,KAApB;AACArC,MAAAA,QAAQ,CAACS,WAAT,GAAuB,oCAAvB;AACD,KA1BD,aA2BS,YAAM;AACb,aAAOV,QAAQ,CAACC,QAAD,CAAf;AACD,KA7BD;AA8BD,GA9Jc;AA+JfsC,EAAAA,8BAA8B,EAAE,wCAACxC,KAAD,EAAQc,KAAR,EAAgB2B,OAAhB,EAA0BxC,QAA1B,EAAuC;AACrE,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;;AACAC,mBACGC,MADH,GAEGC,IAFH,CAEQN,KAFR,EAGGe,KAHH,CAGSD,KAHT,EAIG4B,OAJH,CAIWD,OAJX,EAKGlC,IALH,CAKQ,UAACC,GAAD,EAAS;AACbN,MAAAA,QAAQ,CAACO,MAAT,GAAkB,IAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBF,GAApB;AACAN,MAAAA,QAAQ,CAACS,WAAT,GAAuB,mBAAvB;AACD,KATH,WAUS,UAACC,GAAD,EAAS;AACdV,MAAAA,QAAQ,CAACO,MAAT,GAAkB,KAAlB;AACAP,MAAAA,QAAQ,CAACQ,QAAT,GAAoBE,GAApB;AACAV,MAAAA,QAAQ,CAACS,WAAT,GAAuB,oCAAvB;AACD,KAdH,aAeW,YAAM;AACb,aAAOV,QAAQ,CAACC,QAAD,CAAf;AACD,KAjBH;AAkBD;AAnLc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\DataAccess\\",
      "sourcesContent": [
        "import { knex } from \"../config/database\";\r\nimport { Response } from \"../model/response\";\r\n\r\nmodule.exports = {\r\n  GenerateSelect: (table, callBack) => {\r\n    let response = new Response();\r\n    knex\r\n      .select()\r\n      .from(table)\r\n      .then((row) => {\r\n        response.Status = true;\r\n        response.Refrence = row;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callBack(response);\r\n      });\r\n  },\r\n  GenerateSelectWithWhere: (table, Where, callBack) => {\r\n    let response = new Response();\r\n    knex\r\n      .select()\r\n      .from(table)\r\n      .where(Where)\r\n      .then((row) => {\r\n        response.Status = true;\r\n        response.Refrence = row;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callBack(response);\r\n      });\r\n  },\r\n  GenerateInsert: (table, model, callback) => {\r\n    let response = new Response();\r\n    knex\r\n      .insert(model)\r\n      .into(table)\r\n      .then((res) => {\r\n        response.Status = true;\r\n        response.Refrence = res;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callback(response);\r\n      });\r\n  },\r\n  GenerateSelectWithWhereLimitOffSet: (\r\n    table,\r\n    Where,\r\n    limit,\r\n    offset,\r\n    callBack\r\n  ) => {\r\n    let response = new Response();\r\n    knex\r\n      .select(\"*\")\r\n      .from(table)\r\n      .where(Where)\r\n      .limit(limit)\r\n      .offset(offset)\r\n      .then((row) => {\r\n        response.Status = true;\r\n        response.Refrence = row;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callBack(response);\r\n      });\r\n  },\r\n  GenerateUpdate: (table, Where, model, callback) => {\r\n    let response = new Response();\r\n    knex(table)\r\n      .where(Where)\r\n      .update(model)\r\n      .then((result) => {\r\n        response.Status = true;\r\n        response.Refrence = result;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callback(response);\r\n      });\r\n  },\r\n  GenerateDelete: (table, Where, callBack) => {\r\n    let response = new Response();\r\n    knex\r\n      .delete()\r\n      .from(table)\r\n      .where(Where)\r\n      .then((res) => {\r\n        response.Status = true;\r\n        response.Refrence = res;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callBack(response);\r\n      });\r\n  },\r\n  ExecuteDeleteTransactionTransaction:(table1 , table2 , where1 , where2 , callBack) =>{\r\n    let response = new Response();\r\n    knex\r\n    .transaction((trx) => {\r\n      trx\r\n        .delete()\r\n        .from(table1)\r\n        .where(where1)\r\n        .transacting(trx)\r\n        .then((res) => {\r\n          return trx\r\n            .delete()\r\n            .from(table2)\r\n            .where(where2)\r\n            .transacting(trx);\r\n        })\r\n        .then(trx.commit)\r\n        .catch(trx.rollback);\r\n    })\r\n    .then((res) => {\r\n      response.Status = true;\r\n      response.Refrence = res;\r\n      response.Description = \"تمت العملية بنجاح\";\r\n    })\r\n    .catch((error) => {\r\n      response.Status = false;\r\n      response.Refrence = error;\r\n      response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n    })\r\n    .finally(() => {\r\n      return callBack(response);\r\n    });\r\n  },\r\n  GenerateSelectWithWhereOrWhere: (table, Where , OrWhere , callBack) => {\r\n    let response = new Response();\r\n    knex\r\n      .select()\r\n      .from(table)\r\n      .where(Where)\r\n      .orWhere(OrWhere)\r\n      .then((row) => {\r\n        response.Status = true;\r\n        response.Refrence = row;\r\n        response.Description = \"تمت العملية بنجاح\";\r\n      })\r\n      .catch((err) => {\r\n        response.Status = false;\r\n        response.Refrence = err;\r\n        response.Description = \"حصل خطأ اثناء محاولة تنفيذ العملية\";\r\n      })\r\n      .finally(() => {\r\n        return callBack(response);\r\n      });\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610813923049
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\auth\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\auth\\\\auth.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\auth.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\auth.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\auth.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\",
        "sourceFileName": "auth.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _config = _interopRequireDefault(require(\"./config\"));\n\nvar _jsonwebtoken = require(\"jsonwebtoken\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = {\n  VerifyToken: function VerifyToken(req, res, next) {\n    var token = req.get(\"authorization\");\n    if (!token) return res.status(403).send({\n      auth: false,\n      message: \"No token provided.\"\n    });else token = token.slice(7);\n    (0, _jsonwebtoken.verify)(token, _config[\"default\"].secret, function (err, decoded) {\n      if (err) return res.status(401).send({\n        auth: false,\n        message: \"Failed to authenticate token.\"\n      });\n      req.userId = decoded.id;\n      next();\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiVmVyaWZ5VG9rZW4iLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJnZXQiLCJzdGF0dXMiLCJzZW5kIiwiYXV0aCIsIm1lc3NhZ2UiLCJzbGljZSIsImNvbmZpZyIsInNlY3JldCIsImVyciIsImRlY29kZWQiLCJ1c2VySWQiLCJpZCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7OztBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsV0FBVyxFQUFFLHFCQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUMvQixRQUFJQyxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLGVBQVIsQ0FBWjtBQUNBLFFBQUksQ0FBQ0QsS0FBTCxFQUNFLE9BQU9GLEdBQUcsQ0FDUEksTUFESSxDQUNHLEdBREgsRUFFSkMsSUFGSSxDQUVDO0FBQUVDLE1BQUFBLElBQUksRUFBRSxLQUFSO0FBQWVDLE1BQUFBLE9BQU8sRUFBRTtBQUF4QixLQUZELENBQVAsQ0FERixLQUlLTCxLQUFLLEdBQUdBLEtBQUssQ0FBQ00sS0FBTixDQUFZLENBQVosQ0FBUjtBQUNMLDhCQUFPTixLQUFQLEVBQWNPLG1CQUFPQyxNQUFyQixFQUE2QixVQUFDQyxHQUFELEVBQU1DLE9BQU4sRUFBa0I7QUFDN0MsVUFBSUQsR0FBSixFQUNFLE9BQU9YLEdBQUcsQ0FDUEksTUFESSxDQUNHLEdBREgsRUFFSkMsSUFGSSxDQUVDO0FBQUVDLFFBQUFBLElBQUksRUFBRSxLQUFSO0FBQWVDLFFBQUFBLE9BQU8sRUFBRTtBQUF4QixPQUZELENBQVA7QUFHRlIsTUFBQUEsR0FBRyxDQUFDYyxNQUFKLEdBQWFELE9BQU8sQ0FBQ0UsRUFBckI7QUFDQWIsTUFBQUEsSUFBSTtBQUNMLEtBUEQ7QUFRRDtBQWhCYyxDQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcUHJvamVjdFxcV2ViU2l0ZXNcXERhbGlsa1xcc2VydmVyXFxhdXRoXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29uZmlnIGZyb20gXCIuL2NvbmZpZ1wiO1xyXG5pbXBvcnQgeyB2ZXJpZnkgfSBmcm9tIFwianNvbndlYnRva2VuXCI7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICBWZXJpZnlUb2tlbjogKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgICB2YXIgdG9rZW4gPSByZXEuZ2V0KFwiYXV0aG9yaXphdGlvblwiKTtcclxuICAgIGlmICghdG9rZW4pXHJcbiAgICAgIHJldHVybiByZXNcclxuICAgICAgICAuc3RhdHVzKDQwMylcclxuICAgICAgICAuc2VuZCh7IGF1dGg6IGZhbHNlLCBtZXNzYWdlOiBcIk5vIHRva2VuIHByb3ZpZGVkLlwiIH0pO1xyXG4gICAgZWxzZSB0b2tlbiA9IHRva2VuLnNsaWNlKDcpO1xyXG4gICAgdmVyaWZ5KHRva2VuLCBjb25maWcuc2VjcmV0LCAoZXJyLCBkZWNvZGVkKSA9PiB7XHJcbiAgICAgIGlmIChlcnIpXHJcbiAgICAgICAgcmV0dXJuIHJlc1xyXG4gICAgICAgICAgLnN0YXR1cyg0MDEpXHJcbiAgICAgICAgICAuc2VuZCh7IGF1dGg6IGZhbHNlLCBtZXNzYWdlOiBcIkZhaWxlZCB0byBhdXRoZW50aWNhdGUgdG9rZW4uXCIgfSk7XHJcbiAgICAgIHJlcS51c2VySWQgPSBkZWNvZGVkLmlkO1xyXG4gICAgICBuZXh0KCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.controller.js"
      ],
      "names": [
        "module",
        "exports",
        "VerifyToken",
        "req",
        "res",
        "next",
        "token",
        "get",
        "status",
        "send",
        "auth",
        "message",
        "slice",
        "config",
        "secret",
        "err",
        "decoded",
        "userId",
        "id"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,WAAW,EAAE,qBAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC/B,QAAIC,KAAK,GAAGH,GAAG,CAACI,GAAJ,CAAQ,eAAR,CAAZ;AACA,QAAI,CAACD,KAAL,EACE,OAAOF,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAFD,CAAP,CADF,KAIKL,KAAK,GAAGA,KAAK,CAACM,KAAN,CAAY,CAAZ,CAAR;AACL,8BAAON,KAAP,EAAcO,mBAAOC,MAArB,EAA6B,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC7C,UAAID,GAAJ,EACE,OAAOX,GAAG,CACPI,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAFD,CAAP;AAGFR,MAAAA,GAAG,CAACc,MAAJ,GAAaD,OAAO,CAACE,EAArB;AACAb,MAAAA,IAAI;AACL,KAPD;AAQD;AAhBc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\auth\\",
      "sourcesContent": [
        "import config from \"./config\";\r\nimport { verify } from \"jsonwebtoken\";\r\n\r\nmodule.exports = {\r\n  VerifyToken: (req, res, next) => {\r\n    var token = req.get(\"authorization\");\r\n    if (!token)\r\n      return res\r\n        .status(403)\r\n        .send({ auth: false, message: \"No token provided.\" });\r\n    else token = token.slice(7);\r\n    verify(token, config.secret, (err, decoded) => {\r\n      if (err)\r\n        return res\r\n          .status(401)\r\n          .send({ auth: false, message: \"Failed to authenticate token.\" });\r\n      req.userId = decoded.id;\r\n      next();\r\n    });\r\n  },\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1610025237838
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\ContactUs\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\ContactUs\\\\contactUs.router.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\contactUs.router.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\contactUs.router.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\contactUs.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\",
        "sourceFileName": "contactUs.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _contactUs = require(\"./contactUs.controller\");\n\nvar router = require(\"express\").Router();\n\nrouter.post(\"/api/contact/CreateUserMessage\", _contactUs.CreateUserMessage);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3RVcy5yb3V0ZXIuanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsInBvc3QiLCJDcmVhdGVVc2VyTWVzc2FnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUFQLENBQW1CQyxNQUFuQixFQUFmOztBQUNBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxnQ0FBWixFQUE4Q0MsNEJBQTlDO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQk4sTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXFByb2plY3RcXFdlYlNpdGVzXFxEYWxpbGtcXHNlcnZlclxcYXBpXFxDb250YWN0VXNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWF0ZVVzZXJNZXNzYWdlIH0gZnJvbSBcIi4vY29udGFjdFVzLmNvbnRyb2xsZXJcIjtcclxuY29uc3Qgcm91dGVyID0gcmVxdWlyZShcImV4cHJlc3NcIikuUm91dGVyKCk7XHJcbnJvdXRlci5wb3N0KFwiL2FwaS9jb250YWN0L0NyZWF0ZVVzZXJNZXNzYWdlXCIsIENyZWF0ZVVzZXJNZXNzYWdlKTtcclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "contactUs.router.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "post",
        "CreateUserMessage",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACAF,MAAM,CAACG,IAAP,CAAY,gCAAZ,EAA8CC,4BAA9C;AACAC,MAAM,CAACC,OAAP,GAAiBN,MAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\",
      "sourcesContent": [
        "import { CreateUserMessage } from \"./contactUs.controller\";\r\nconst router = require(\"express\").Router();\r\nrouter.post(\"/api/contact/CreateUserMessage\", CreateUserMessage);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609249100957
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\ContactUs\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\ContactUs\\\\contactUs.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\contactUs.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\contactUs.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\contactUs.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\",
        "sourceFileName": "contactUs.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _contactUs = require(\"./contactUs.service\");\n\nvar _require = require(\"../../model/UserMessages\"),\n    UserMessages = _require.UserMessages;\n\nmodule.exports = {\n  CreateUserMessage: function CreateUserMessage(req, res) {\n    var contact = new UserMessages();\n    contact = req.body;\n    (0, _contactUs.CreateUserMessage)(contact, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3RVcy5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJVc2VyTWVzc2FnZXMiLCJtb2R1bGUiLCJleHBvcnRzIiwiQ3JlYXRlVXNlck1lc3NhZ2UiLCJyZXEiLCJyZXMiLCJjb250YWN0IiwiYm9keSIsInJlc3VsdCIsIlN0YXR1cyIsInN0YXR1cyIsImpzb24iXSwibWFwcGluZ3MiOiI7O0FBQ0E7O2VBRHlCQSxPQUFPLENBQUMsMEJBQUQsQztJQUF4QkMsWSxZQUFBQSxZOztBQUVSQyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZkMsRUFBQUEsaUJBQWlCLEVBQUUsMkJBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9CLFFBQUlDLE9BQU8sR0FBRyxJQUFJTixZQUFKLEVBQWQ7QUFDQU0sSUFBQUEsT0FBTyxHQUFHRixHQUFHLENBQUNHLElBQWQ7QUFDQSxzQ0FBa0JELE9BQWxCLEVBQTJCLFVBQUNFLE1BQUQsRUFBWTtBQUNyQyxVQUFJLENBQUNBLE1BQU0sQ0FBQ0MsTUFBWixFQUFvQkosR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWDtBQUNwQixhQUFPTCxHQUFHLENBQUNNLElBQUosQ0FBU0gsTUFBVCxDQUFQO0FBQ0QsS0FIRDtBQUlEO0FBUmMsQ0FBakIiLCJzb3VyY2VSb290IjoiRDpcXFByb2plY3RcXFdlYlNpdGVzXFxEYWxpbGtcXHNlcnZlclxcYXBpXFxDb250YWN0VXNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVXNlck1lc3NhZ2VzIH0gPSByZXF1aXJlKFwiLi4vLi4vbW9kZWwvVXNlck1lc3NhZ2VzXCIpO1xyXG5pbXBvcnQgeyBDcmVhdGVVc2VyTWVzc2FnZSB9IGZyb20gXCIuL2NvbnRhY3RVcy5zZXJ2aWNlXCI7XHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIENyZWF0ZVVzZXJNZXNzYWdlOiAocmVxLCByZXMpID0+IHtcclxuICAgIHZhciBjb250YWN0ID0gbmV3IFVzZXJNZXNzYWdlcygpO1xyXG4gICAgY29udGFjdCA9IHJlcS5ib2R5O1xyXG4gICAgQ3JlYXRlVXNlck1lc3NhZ2UoY29udGFjdCwgKHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoIXJlc3VsdC5TdGF0dXMpIHJlcy5zdGF0dXMoNTAwKTtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKHJlc3VsdCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "contactUs.controller.js"
      ],
      "names": [
        "require",
        "UserMessages",
        "module",
        "exports",
        "CreateUserMessage",
        "req",
        "res",
        "contact",
        "body",
        "result",
        "Status",
        "status",
        "json"
      ],
      "mappings": ";;AACA;;eADyBA,OAAO,CAAC,0BAAD,C;IAAxBC,Y,YAAAA,Y;;AAERC,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,iBAAiB,EAAE,2BAACC,GAAD,EAAMC,GAAN,EAAc;AAC/B,QAAIC,OAAO,GAAG,IAAIN,YAAJ,EAAd;AACAM,IAAAA,OAAO,GAAGF,GAAG,CAACG,IAAd;AACA,sCAAkBD,OAAlB,EAA2B,UAACE,MAAD,EAAY;AACrC,UAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBJ,GAAG,CAACK,MAAJ,CAAW,GAAX;AACpB,aAAOL,GAAG,CAACM,IAAJ,CAASH,MAAT,CAAP;AACD,KAHD;AAID;AARc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\",
      "sourcesContent": [
        "const { UserMessages } = require(\"../../model/UserMessages\");\r\nimport { CreateUserMessage } from \"./contactUs.service\";\r\nmodule.exports = {\r\n  CreateUserMessage: (req, res) => {\r\n    var contact = new UserMessages();\r\n    contact = req.body;\r\n    CreateUserMessage(contact, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1609249760607
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\ContactUs\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\ContactUs\\\\contactUs.service.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\contactUs.service.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\contactUs.service.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\contactUs.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\",
        "sourceFileName": "contactUs.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _response = require(\"../../model/response\");\n\nvar _DalilikDAL = require(\"../../DataAccess/DalilikDAL\");\n\nmodule.exports = {\n  CreateUserMessage: function CreateUserMessage(userMessage, callback) {\n    var response = new _response.Response();\n    (0, _DalilikDAL.GenerateInsert)(\"usermessages\", userMessage, function (result) {\n      response = result;\n\n      if (result.Status) {\n        response.Description = \"تم إرسال الرسالة بنجاح\";\n      } else {\n        response.Description = \"حصل خطاء اثناء محاولة إرسال الرسالة\";\n      }\n\n      return callback(response);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3RVcy5zZXJ2aWNlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJDcmVhdGVVc2VyTWVzc2FnZSIsInVzZXJNZXNzYWdlIiwiY2FsbGJhY2siLCJyZXNwb25zZSIsIlJlc3BvbnNlIiwicmVzdWx0IiwiU3RhdHVzIiwiRGVzY3JpcHRpb24iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxpQkFBaUIsRUFBRywyQkFBQ0MsV0FBRCxFQUFlQyxRQUFmLEVBQTJCO0FBQzNDLFFBQUlDLFFBQVEsR0FBRyxJQUFJQyxrQkFBSixFQUFmO0FBQ0Esb0NBQWUsY0FBZixFQUFnQ0gsV0FBaEMsRUFBOEMsVUFBQ0ksTUFBRCxFQUFXO0FBQ3JERixNQUFBQSxRQUFRLEdBQUdFLE1BQVg7O0FBQ0EsVUFBSUEsTUFBTSxDQUFDQyxNQUFYLEVBQW1CO0FBQ2pCSCxRQUFBQSxRQUFRLENBQUNJLFdBQVQsR0FBdUIsd0JBQXZCO0FBQ0QsT0FGRCxNQUVPO0FBQ0xKLFFBQUFBLFFBQVEsQ0FBQ0ksV0FBVCxHQUF1QixxQ0FBdkI7QUFDRDs7QUFDRCxhQUFPTCxRQUFRLENBQUNDLFFBQUQsQ0FBZjtBQUNILEtBUkQ7QUFTSDtBQVpZLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxQcm9qZWN0XFxXZWJTaXRlc1xcRGFsaWxrXFxzZXJ2ZXJcXGFwaVxcQ29udGFjdFVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNwb25zZSB9IGZyb20gJy4uLy4uL21vZGVsL3Jlc3BvbnNlJztcclxuaW1wb3J0IHtHZW5lcmF0ZUluc2VydH0gZnJvbSAnLi4vLi4vRGF0YUFjY2Vzcy9EYWxpbGlrREFMJztcclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgICBDcmVhdGVVc2VyTWVzc2FnZSA6ICh1c2VyTWVzc2FnZSAsIGNhbGxiYWNrKSA9PntcclxuICAgICAgICB2YXIgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoKTtcclxuICAgICAgICBHZW5lcmF0ZUluc2VydChcInVzZXJtZXNzYWdlc1wiICwgdXNlck1lc3NhZ2UgLCAocmVzdWx0KSA9PntcclxuICAgICAgICAgICAgcmVzcG9uc2UgPSByZXN1bHQ7XHJcbiAgICAgICAgICAgIGlmIChyZXN1bHQuU3RhdHVzKSB7XHJcbiAgICAgICAgICAgICAgcmVzcG9uc2UuRGVzY3JpcHRpb24gPSBcItiq2YUg2KXYsdiz2KfZhCDYp9mE2LHYs9in2YTYqSDYqNmG2KzYp9itXCI7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgcmVzcG9uc2UuRGVzY3JpcHRpb24gPSBcItit2LXZhCDYrti32KfYoSDYp9ir2YbYp9ihINmF2K3Yp9mI2YTYqSDYpdix2LPYp9mEINin2YTYsdiz2KfZhNipXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHJlc3BvbnNlKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "contactUs.service.js"
      ],
      "names": [
        "module",
        "exports",
        "CreateUserMessage",
        "userMessage",
        "callback",
        "response",
        "Response",
        "result",
        "Status",
        "Description"
      ],
      "mappings": ";;AAAA;;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,iBAAiB,EAAG,2BAACC,WAAD,EAAeC,QAAf,EAA2B;AAC3C,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;AACA,oCAAe,cAAf,EAAgCH,WAAhC,EAA8C,UAACI,MAAD,EAAW;AACrDF,MAAAA,QAAQ,GAAGE,MAAX;;AACA,UAAIA,MAAM,CAACC,MAAX,EAAmB;AACjBH,QAAAA,QAAQ,CAACI,WAAT,GAAuB,wBAAvB;AACD,OAFD,MAEO;AACLJ,QAAAA,QAAQ,CAACI,WAAT,GAAuB,qCAAvB;AACD;;AACD,aAAOL,QAAQ,CAACC,QAAD,CAAf;AACH,KARD;AASH;AAZY,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\ContactUs\\",
      "sourcesContent": [
        "import { Response } from '../../model/response';\r\nimport {GenerateInsert} from '../../DataAccess/DalilikDAL';\r\nmodule.exports = {\r\n    CreateUserMessage : (userMessage , callback) =>{\r\n        var response = new Response();\r\n        GenerateInsert(\"usermessages\" , userMessage , (result) =>{\r\n            response = result;\r\n            if (result.Status) {\r\n              response.Description = \"تم إرسال الرسالة بنجاح\";\r\n            } else {\r\n              response.Description = \"حصل خطاء اثناء محاولة إرسال الرسالة\";\r\n            }\r\n            return callback(response);\r\n        });\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1609249136858
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\model\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\model\\\\UserMessages.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\model\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\model\\UserMessages.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\model\\UserMessages.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\model\\UserMessages.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\model\\",
        "sourceFileName": "UserMessages.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserMessages = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UserMessages = function UserMessages(Id, UserName, Email, Message) {\n  _classCallCheck(this, UserMessages);\n\n  this.Id = Id;\n  this.UserName = UserName;\n  this.Email = Email;\n  this.Message = Message;\n};\n\nexports.UserMessages = UserMessages;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJNZXNzYWdlcy5qcyJdLCJuYW1lcyI6WyJVc2VyTWVzc2FnZXMiLCJJZCIsIlVzZXJOYW1lIiwiRW1haWwiLCJNZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7SUFBYUEsWSxHQUNULHNCQUFZQyxFQUFaLEVBQWVDLFFBQWYsRUFBeUJDLEtBQXpCLEVBQWlDQyxPQUFqQyxFQUEwQztBQUFBOztBQUN4QyxPQUFLSCxFQUFMLEdBQVVBLEVBQVY7QUFDQSxPQUFLQyxRQUFMLEdBQWdCQSxRQUFoQjtBQUNBLE9BQUtDLEtBQUwsR0FBYUEsS0FBYjtBQUNBLE9BQUtDLE9BQUwsR0FBZUEsT0FBZjtBQUNELEMiLCJzb3VyY2VSb290IjoiRDpcXFByb2plY3RcXFdlYlNpdGVzXFxEYWxpbGtcXHNlcnZlclxcbW9kZWxcXCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBVc2VyTWVzc2FnZXMge1xyXG4gICAgY29uc3RydWN0b3IoSWQsVXNlck5hbWUsIEVtYWlsICwgTWVzc2FnZSkge1xyXG4gICAgICB0aGlzLklkID0gSWQ7XHJcbiAgICAgIHRoaXMuVXNlck5hbWUgPSBVc2VyTmFtZTtcclxuICAgICAgdGhpcy5FbWFpbCA9IEVtYWlsO1xyXG4gICAgICB0aGlzLk1lc3NhZ2UgPSBNZXNzYWdlO1xyXG4gICAgfVxyXG4gIH0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "UserMessages.js"
      ],
      "names": [
        "UserMessages",
        "Id",
        "UserName",
        "Email",
        "Message"
      ],
      "mappings": ";;;;;;;;;IAAaA,Y,GACT,sBAAYC,EAAZ,EAAeC,QAAf,EAAyBC,KAAzB,EAAiCC,OAAjC,EAA0C;AAAA;;AACxC,OAAKH,EAAL,GAAUA,EAAV;AACA,OAAKC,QAAL,GAAgBA,QAAhB;AACA,OAAKC,KAAL,GAAaA,KAAb;AACA,OAAKC,OAAL,GAAeA,OAAf;AACD,C",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\model\\",
      "sourcesContent": [
        "export class UserMessages {\r\n    constructor(Id,UserName, Email , Message) {\r\n      this.Id = Id;\r\n      this.UserName = UserName;\r\n      this.Email = Email;\r\n      this.Message = Message;\r\n    }\r\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1609249252132
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\FileUploader\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\FileUploader\\\\fileUploader.router.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\fileUploader.router.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\fileUploader.router.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\fileUploader.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\",
        "sourceFileName": "fileUploader.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _fileUploader = require(\"./fileUploader.controller\");\n\nvar router = require(\"express\").Router();\n\nrouter.post(\"/api/upload\", _fileUploader.upload.single(\"file\"), function (req, res) {\n  res.json({\n    file: req.file\n  });\n});\nrouter.get(\"/files\", _fileUploader.getListFiles);\nrouter.get(\"/files/:name\", _fileUploader.download);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGVVcGxvYWRlci5yb3V0ZXIuanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsInBvc3QiLCJ1cGxvYWQiLCJzaW5nbGUiLCJyZXEiLCJyZXMiLCJqc29uIiwiZmlsZSIsImdldCIsImdldExpc3RGaWxlcyIsImRvd25sb2FkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVAsQ0FBbUJDLE1BQW5CLEVBQWY7O0FBQ0FGLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLGFBQVosRUFBMkJDLHFCQUFPQyxNQUFQLENBQWMsTUFBZCxDQUEzQixFQUFrRCxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5REEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVM7QUFBRUMsSUFBQUEsSUFBSSxFQUFFSCxHQUFHLENBQUNHO0FBQVosR0FBVDtBQUNELENBRkQ7QUFHQVQsTUFBTSxDQUFDVSxHQUFQLENBQVcsUUFBWCxFQUFxQkMsMEJBQXJCO0FBQ0FYLE1BQU0sQ0FBQ1UsR0FBUCxDQUFXLGNBQVgsRUFBMkJFLHNCQUEzQjtBQUNBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJkLE1BQWpCIiwic291cmNlUm9vdCI6IkQ6XFxQcm9qZWN0XFxXZWJTaXRlc1xcRGFsaWxrXFxzZXJ2ZXJcXGFwaVxcRmlsZVVwbG9hZGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1cGxvYWQsIGRvd25sb2FkLCBnZXRMaXN0RmlsZXMgfSBmcm9tIFwiLi9maWxlVXBsb2FkZXIuY29udHJvbGxlclwiO1xyXG5jb25zdCByb3V0ZXIgPSByZXF1aXJlKFwiZXhwcmVzc1wiKS5Sb3V0ZXIoKTtcclxucm91dGVyLnBvc3QoXCIvYXBpL3VwbG9hZFwiLCB1cGxvYWQuc2luZ2xlKFwiZmlsZVwiKSwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgcmVzLmpzb24oeyBmaWxlOiByZXEuZmlsZSB9KTtcclxufSk7XHJcbnJvdXRlci5nZXQoXCIvZmlsZXNcIiwgZ2V0TGlzdEZpbGVzKTtcclxucm91dGVyLmdldChcIi9maWxlcy86bmFtZVwiLCBkb3dubG9hZCk7XHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "fileUploader.router.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "post",
        "upload",
        "single",
        "req",
        "res",
        "json",
        "file",
        "get",
        "getListFiles",
        "download",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACAF,MAAM,CAACG,IAAP,CAAY,aAAZ,EAA2BC,qBAAOC,MAAP,CAAc,MAAd,CAA3B,EAAkD,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9DA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEC,IAAAA,IAAI,EAAEH,GAAG,CAACG;AAAZ,GAAT;AACD,CAFD;AAGAT,MAAM,CAACU,GAAP,CAAW,QAAX,EAAqBC,0BAArB;AACAX,MAAM,CAACU,GAAP,CAAW,cAAX,EAA2BE,sBAA3B;AACAC,MAAM,CAACC,OAAP,GAAiBd,MAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\",
      "sourcesContent": [
        "import { upload, download, getListFiles } from \"./fileUploader.controller\";\r\nconst router = require(\"express\").Router();\r\nrouter.post(\"/api/upload\", upload.single(\"file\"), (req, res) => {\r\n  res.json({ file: req.file });\r\n});\r\nrouter.get(\"/files\", getListFiles);\r\nrouter.get(\"/files/:name\", download);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611076978231
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\companies\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\companies\\\\company.router.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\company.router.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\company.router.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\company.router.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\",
        "sourceFileName": "company.router.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _company = require(\"./company.controller\");\n\nvar _auth = require(\"../../auth/auth.controller\");\n\nvar router = require(\"express\").Router();\n\nrouter.get(\"/api/company/GetCompanyById\", _auth.VerifyToken, _company.GetCompanyById);\nrouter.get(\"/api/company/GetCompanyByRoutedId\", _auth.VerifyToken, _company.GetCompanyByRoutedId);\nrouter.get(\"/api/company/GetCompanyPosts\", _auth.VerifyToken, _company.GetCompanyPosts);\nrouter.get(\"/api/company/GetCompanyListings\", _auth.VerifyToken, _company.GetCompanyListings);\nrouter.get(\"/api/GetCompanyListings\", _company.GetCatigories);\nrouter.get(\"/api/comapny/CheckCompanyLinkedToUser\", _auth.VerifyToken, _company.checkCompanyAuth);\nrouter.post(\"/api/company/CreateNewListing\", _auth.VerifyToken, _company.CreateNewListing);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkucm91dGVyLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInJlcXVpcmUiLCJSb3V0ZXIiLCJnZXQiLCJWZXJpZnlUb2tlbiIsIkdldENvbXBhbnlCeUlkIiwiR2V0Q29tcGFueUJ5Um91dGVkSWQiLCJHZXRDb21wYW55UG9zdHMiLCJHZXRDb21wYW55TGlzdGluZ3MiLCJHZXRDYXRpZ29yaWVzIiwiY2hlY2tDb21wYW55QXV0aCIsInBvc3QiLCJDcmVhdGVOZXdMaXN0aW5nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFTQTs7QUFDQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVAsQ0FBbUJDLE1BQW5CLEVBQWY7O0FBQ0FGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLDZCQUFYLEVBQTBDQyxpQkFBMUMsRUFBdURDLHVCQUF2RDtBQUNBTCxNQUFNLENBQUNHLEdBQVAsQ0FDRSxtQ0FERixFQUVFQyxpQkFGRixFQUdFRSw2QkFIRjtBQUtBTixNQUFNLENBQUNHLEdBQVAsQ0FBVyw4QkFBWCxFQUEyQ0MsaUJBQTNDLEVBQXdERyx3QkFBeEQ7QUFDQVAsTUFBTSxDQUFDRyxHQUFQLENBQVcsaUNBQVgsRUFBOENDLGlCQUE5QyxFQUEyREksMkJBQTNEO0FBQ0FSLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLHlCQUFYLEVBQXNDTSxzQkFBdEM7QUFDQVQsTUFBTSxDQUFDRyxHQUFQLENBQ0UsdUNBREYsRUFFRUMsaUJBRkYsRUFHRU0seUJBSEY7QUFLQVYsTUFBTSxDQUFDVyxJQUFQLENBQVksK0JBQVosRUFBNkNQLGlCQUE3QyxFQUEwRFEseUJBQTFEO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmQsTUFBakIiLCJzb3VyY2VSb290IjoiRDpcXFByb2plY3RcXFdlYlNpdGVzXFxEYWxpbGtcXHNlcnZlclxcYXBpXFxjb21wYW5pZXNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgR2V0Q29tcGFueUJ5SWQsXHJcbiAgR2V0Q29tcGFueVBvc3RzLFxyXG4gIEdldENvbXBhbnlMaXN0aW5ncyxcclxuICBHZXRDYXRpZ29yaWVzLFxyXG4gIENyZWF0ZU5ld0xpc3RpbmcsXHJcbiAgR2V0Q29tcGFueUJ5Um91dGVkSWQsXHJcbiAgY2hlY2tDb21wYW55QXV0aCxcclxufSBmcm9tIFwiLi9jb21wYW55LmNvbnRyb2xsZXJcIjtcclxuaW1wb3J0IHsgVmVyaWZ5VG9rZW4gfSBmcm9tIFwiLi4vLi4vYXV0aC9hdXRoLmNvbnRyb2xsZXJcIjtcclxuY29uc3Qgcm91dGVyID0gcmVxdWlyZShcImV4cHJlc3NcIikuUm91dGVyKCk7XHJcbnJvdXRlci5nZXQoXCIvYXBpL2NvbXBhbnkvR2V0Q29tcGFueUJ5SWRcIiwgVmVyaWZ5VG9rZW4sIEdldENvbXBhbnlCeUlkKTtcclxucm91dGVyLmdldChcclxuICBcIi9hcGkvY29tcGFueS9HZXRDb21wYW55QnlSb3V0ZWRJZFwiLFxyXG4gIFZlcmlmeVRva2VuLFxyXG4gIEdldENvbXBhbnlCeVJvdXRlZElkXHJcbik7XHJcbnJvdXRlci5nZXQoXCIvYXBpL2NvbXBhbnkvR2V0Q29tcGFueVBvc3RzXCIsIFZlcmlmeVRva2VuLCBHZXRDb21wYW55UG9zdHMpO1xyXG5yb3V0ZXIuZ2V0KFwiL2FwaS9jb21wYW55L0dldENvbXBhbnlMaXN0aW5nc1wiLCBWZXJpZnlUb2tlbiwgR2V0Q29tcGFueUxpc3RpbmdzKTtcclxucm91dGVyLmdldChcIi9hcGkvR2V0Q29tcGFueUxpc3RpbmdzXCIsIEdldENhdGlnb3JpZXMpO1xyXG5yb3V0ZXIuZ2V0KFxyXG4gIFwiL2FwaS9jb21hcG55L0NoZWNrQ29tcGFueUxpbmtlZFRvVXNlclwiLFxyXG4gIFZlcmlmeVRva2VuLFxyXG4gIGNoZWNrQ29tcGFueUF1dGhcclxuKTtcclxucm91dGVyLnBvc3QoXCIvYXBpL2NvbXBhbnkvQ3JlYXRlTmV3TGlzdGluZ1wiLCBWZXJpZnlUb2tlbiwgQ3JlYXRlTmV3TGlzdGluZyk7XHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "company.router.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "get",
        "VerifyToken",
        "GetCompanyById",
        "GetCompanyByRoutedId",
        "GetCompanyPosts",
        "GetCompanyListings",
        "GetCatigories",
        "checkCompanyAuth",
        "post",
        "CreateNewListing",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AASA;;AACA,IAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACAF,MAAM,CAACG,GAAP,CAAW,6BAAX,EAA0CC,iBAA1C,EAAuDC,uBAAvD;AACAL,MAAM,CAACG,GAAP,CACE,mCADF,EAEEC,iBAFF,EAGEE,6BAHF;AAKAN,MAAM,CAACG,GAAP,CAAW,8BAAX,EAA2CC,iBAA3C,EAAwDG,wBAAxD;AACAP,MAAM,CAACG,GAAP,CAAW,iCAAX,EAA8CC,iBAA9C,EAA2DI,2BAA3D;AACAR,MAAM,CAACG,GAAP,CAAW,yBAAX,EAAsCM,sBAAtC;AACAT,MAAM,CAACG,GAAP,CACE,uCADF,EAEEC,iBAFF,EAGEM,yBAHF;AAKAV,MAAM,CAACW,IAAP,CAAY,+BAAZ,EAA6CP,iBAA7C,EAA0DQ,yBAA1D;AACAC,MAAM,CAACC,OAAP,GAAiBd,MAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\",
      "sourcesContent": [
        "import {\r\n  GetCompanyById,\r\n  GetCompanyPosts,\r\n  GetCompanyListings,\r\n  GetCatigories,\r\n  CreateNewListing,\r\n  GetCompanyByRoutedId,\r\n  checkCompanyAuth,\r\n} from \"./company.controller\";\r\nimport { VerifyToken } from \"../../auth/auth.controller\";\r\nconst router = require(\"express\").Router();\r\nrouter.get(\"/api/company/GetCompanyById\", VerifyToken, GetCompanyById);\r\nrouter.get(\r\n  \"/api/company/GetCompanyByRoutedId\",\r\n  VerifyToken,\r\n  GetCompanyByRoutedId\r\n);\r\nrouter.get(\"/api/company/GetCompanyPosts\", VerifyToken, GetCompanyPosts);\r\nrouter.get(\"/api/company/GetCompanyListings\", VerifyToken, GetCompanyListings);\r\nrouter.get(\"/api/GetCompanyListings\", GetCatigories);\r\nrouter.get(\r\n  \"/api/comapny/CheckCompanyLinkedToUser\",\r\n  VerifyToken,\r\n  checkCompanyAuth\r\n);\r\nrouter.post(\"/api/company/CreateNewListing\", VerifyToken, CreateNewListing);\r\nmodule.exports = router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611346025370
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\companies\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\companies\\\\company.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\company.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\company.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\company.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\",
        "sourceFileName": "company.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _company = require(\"./company.service\");\n\nvar _fileUploader = require(\"../FileUploader/fileUploader.controller\");\n\nmodule.exports = {\n  GetCompanyById: function GetCompanyById(req, res) {\n    var companyId = req.query.CompanyId;\n    (0, _company.GetCompanyById)(companyId, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  GetCompanyPosts: function GetCompanyPosts(req, res) {\n    var companyId = req.query.CompanyId;\n    var offset = req.query.offset;\n    (0, _company.GetCompanyPosts)(companyId, offset, function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  GetCompanyListings: function GetCompanyListings(req, res) {\n    (0, _company.checkCompanyAuth)(req.userId, function (response) {\n      if (response.Status) {\n        var companyId = response.Refrence[0].CompanyId;\n        (0, _company.GetCompanyListings)(companyId, function (result) {\n          if (!result.Status) res.status(500);\n          return res.json(result);\n        });\n      } else {\n        return res.json(response);\n      }\n    });\n  },\n  GetCatigories: function GetCatigories(req, res) {\n    (0, _company.GetCatigories)(function (result) {\n      if (!result.Status) res.status(500);\n      return res.json(result);\n    });\n  },\n  CreateNewListing: function CreateNewListing(req, res) {\n    (0, _company.checkCompanyAuth)(req.userId, function (response) {\n      if (response.Status) {\n        var modal = {\n          CompanyId: response.Refrence[0].CompanyId,\n          ListingData: req.body.ListingData,\n          ListingImage: req.body.ListingImage,\n          ListingHeader: req.body.ListingHeader,\n          UserId: req.userId,\n          DateAdded: new Date().toISOString()\n        };\n        (0, _company.CreateNewListing)(modal, function (result) {\n          if (!result.Status) res.status(500);\n          return res.json(result);\n        });\n      } else {\n        return res.json(response);\n      }\n    });\n  },\n  GetCompanyByRoutedId: function GetCompanyByRoutedId(req, res) {\n    (0, _company.checkCompanyAuth)(req.userId, function (response) {\n      if (response.Status) {\n        var companyId = response.Refrence[0].CompanyId;\n        (0, _company.GetCompanyById)(companyId, function (result) {\n          if (!result.Status) res.status(500);\n          return res.json(result);\n        });\n      } else {\n        return res.json(response);\n      }\n    });\n  },\n  checkCompanyAuth: function checkCompanyAuth(req, res) {\n    (0, _company.checkCompanyAuth)(req.userId, function (result) {\n      result.Refrence = result.Refrence[0].CompanyId;\n      return res.json(result);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiR2V0Q29tcGFueUJ5SWQiLCJyZXEiLCJyZXMiLCJjb21wYW55SWQiLCJxdWVyeSIsIkNvbXBhbnlJZCIsInJlc3VsdCIsIlN0YXR1cyIsInN0YXR1cyIsImpzb24iLCJHZXRDb21wYW55UG9zdHMiLCJvZmZzZXQiLCJHZXRDb21wYW55TGlzdGluZ3MiLCJ1c2VySWQiLCJyZXNwb25zZSIsIlJlZnJlbmNlIiwiR2V0Q2F0aWdvcmllcyIsIkNyZWF0ZU5ld0xpc3RpbmciLCJtb2RhbCIsIkxpc3RpbmdEYXRhIiwiYm9keSIsIkxpc3RpbmdJbWFnZSIsIkxpc3RpbmdIZWFkZXIiLCJVc2VySWQiLCJEYXRlQWRkZWQiLCJEYXRlIiwidG9JU09TdHJpbmciLCJHZXRDb21wYW55QnlSb3V0ZWRJZCIsImNoZWNrQ29tcGFueUF1dGgiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBUUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmQyxFQUFBQSxjQUFjLEVBQUUsd0JBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzVCLFFBQU1DLFNBQVMsR0FBR0YsR0FBRyxDQUFDRyxLQUFKLENBQVVDLFNBQTVCO0FBQ0EsaUNBQWVGLFNBQWYsRUFBMEIsVUFBQ0csTUFBRCxFQUFZO0FBQ3BDLFVBQUksQ0FBQ0EsTUFBTSxDQUFDQyxNQUFaLEVBQW9CTCxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYO0FBQ3BCLGFBQU9OLEdBQUcsQ0FBQ08sSUFBSixDQUFTSCxNQUFULENBQVA7QUFDRCxLQUhEO0FBSUQsR0FQYztBQVFmSSxFQUFBQSxlQUFlLEVBQUUseUJBQUNULEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCLFFBQU1DLFNBQVMsR0FBR0YsR0FBRyxDQUFDRyxLQUFKLENBQVVDLFNBQTVCO0FBQ0EsUUFBTU0sTUFBTSxHQUFHVixHQUFHLENBQUNHLEtBQUosQ0FBVU8sTUFBekI7QUFDQSxrQ0FBZ0JSLFNBQWhCLEVBQTJCUSxNQUEzQixFQUFtQyxVQUFDTCxNQUFELEVBQVk7QUFDN0MsVUFBSSxDQUFDQSxNQUFNLENBQUNDLE1BQVosRUFBb0JMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVg7QUFDcEIsYUFBT04sR0FBRyxDQUFDTyxJQUFKLENBQVNILE1BQVQsQ0FBUDtBQUNELEtBSEQ7QUFJRCxHQWZjO0FBZ0JmTSxFQUFBQSxrQkFBa0IsRUFBRSw0QkFBQ1gsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDaEMsbUNBQWlCRCxHQUFHLENBQUNZLE1BQXJCLEVBQTZCLFVBQUNDLFFBQUQsRUFBYztBQUN6QyxVQUFJQSxRQUFRLENBQUNQLE1BQWIsRUFBcUI7QUFDbkIsWUFBTUosU0FBUyxHQUFHVyxRQUFRLENBQUNDLFFBQVQsQ0FBa0IsQ0FBbEIsRUFBcUJWLFNBQXZDO0FBQ0EseUNBQW1CRixTQUFuQixFQUE4QixVQUFDRyxNQUFELEVBQVk7QUFDeEMsY0FBSSxDQUFDQSxNQUFNLENBQUNDLE1BQVosRUFBb0JMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVg7QUFDcEIsaUJBQU9OLEdBQUcsQ0FBQ08sSUFBSixDQUFTSCxNQUFULENBQVA7QUFDRCxTQUhEO0FBSUQsT0FORCxNQU1PO0FBQ0wsZUFBT0osR0FBRyxDQUFDTyxJQUFKLENBQVNLLFFBQVQsQ0FBUDtBQUNEO0FBQ0YsS0FWRDtBQVdELEdBNUJjO0FBNkJmRSxFQUFBQSxhQUFhLEVBQUUsdUJBQUNmLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzNCLGdDQUFjLFVBQUNJLE1BQUQsRUFBWTtBQUN4QixVQUFJLENBQUNBLE1BQU0sQ0FBQ0MsTUFBWixFQUFvQkwsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWDtBQUNwQixhQUFPTixHQUFHLENBQUNPLElBQUosQ0FBU0gsTUFBVCxDQUFQO0FBQ0QsS0FIRDtBQUlELEdBbENjO0FBbUNmVyxFQUFBQSxnQkFBZ0IsRUFBRSwwQkFBQ2hCLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzlCLG1DQUFpQkQsR0FBRyxDQUFDWSxNQUFyQixFQUE2QixVQUFDQyxRQUFELEVBQWM7QUFDekMsVUFBSUEsUUFBUSxDQUFDUCxNQUFiLEVBQXFCO0FBQ25CLFlBQU1XLEtBQUssR0FBRztBQUNaYixVQUFBQSxTQUFTLEVBQUVTLFFBQVEsQ0FBQ0MsUUFBVCxDQUFrQixDQUFsQixFQUFxQlYsU0FEcEI7QUFFWmMsVUFBQUEsV0FBVyxFQUFFbEIsR0FBRyxDQUFDbUIsSUFBSixDQUFTRCxXQUZWO0FBR1pFLFVBQUFBLFlBQVksRUFBRXBCLEdBQUcsQ0FBQ21CLElBQUosQ0FBU0MsWUFIWDtBQUlaQyxVQUFBQSxhQUFhLEVBQUVyQixHQUFHLENBQUNtQixJQUFKLENBQVNFLGFBSlo7QUFLWkMsVUFBQUEsTUFBTSxFQUFFdEIsR0FBRyxDQUFDWSxNQUxBO0FBTVpXLFVBQUFBLFNBQVMsRUFBRSxJQUFJQyxJQUFKLEdBQVdDLFdBQVg7QUFOQyxTQUFkO0FBUUEsdUNBQWlCUixLQUFqQixFQUF3QixVQUFDWixNQUFELEVBQVk7QUFDbEMsY0FBSSxDQUFDQSxNQUFNLENBQUNDLE1BQVosRUFBb0JMLEdBQUcsQ0FBQ00sTUFBSixDQUFXLEdBQVg7QUFDcEIsaUJBQU9OLEdBQUcsQ0FBQ08sSUFBSixDQUFTSCxNQUFULENBQVA7QUFDRCxTQUhEO0FBSUQsT0FiRCxNQWFPO0FBQ0wsZUFBT0osR0FBRyxDQUFDTyxJQUFKLENBQVNLLFFBQVQsQ0FBUDtBQUNEO0FBQ0YsS0FqQkQ7QUFrQkQsR0F0RGM7QUF1RGZhLEVBQUFBLG9CQUFvQixFQUFFLDhCQUFDMUIsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEMsbUNBQWlCRCxHQUFHLENBQUNZLE1BQXJCLEVBQTZCLFVBQUNDLFFBQUQsRUFBYztBQUN6QyxVQUFJQSxRQUFRLENBQUNQLE1BQWIsRUFBcUI7QUFDbkIsWUFBTUosU0FBUyxHQUFHVyxRQUFRLENBQUNDLFFBQVQsQ0FBa0IsQ0FBbEIsRUFBcUJWLFNBQXZDO0FBQ0EscUNBQWVGLFNBQWYsRUFBMEIsVUFBQ0csTUFBRCxFQUFZO0FBQ3BDLGNBQUksQ0FBQ0EsTUFBTSxDQUFDQyxNQUFaLEVBQW9CTCxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYO0FBQ3BCLGlCQUFPTixHQUFHLENBQUNPLElBQUosQ0FBU0gsTUFBVCxDQUFQO0FBQ0QsU0FIRDtBQUlELE9BTkQsTUFNTztBQUNMLGVBQU9KLEdBQUcsQ0FBQ08sSUFBSixDQUFTSyxRQUFULENBQVA7QUFDRDtBQUNGLEtBVkQ7QUFXRCxHQW5FYztBQW9FZmMsRUFBQUEsZ0JBQWdCLEVBQUMsMEJBQUMzQixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM3QixtQ0FBaUJELEdBQUcsQ0FBQ1ksTUFBckIsRUFBOEIsVUFBQVAsTUFBTSxFQUFHO0FBQ3JDQSxNQUFBQSxNQUFNLENBQUNTLFFBQVAsR0FBa0JULE1BQU0sQ0FBQ1MsUUFBUCxDQUFnQixDQUFoQixFQUFtQlYsU0FBckM7QUFDQSxhQUFPSCxHQUFHLENBQUNPLElBQUosQ0FBU0gsTUFBVCxDQUFQO0FBQ0QsS0FIRDtBQUlEO0FBekVjLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxQcm9qZWN0XFxXZWJTaXRlc1xcRGFsaWxrXFxzZXJ2ZXJcXGFwaVxcY29tcGFuaWVzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gIGNoZWNrQ29tcGFueUF1dGgsXHJcbiAgR2V0Q29tcGFueUJ5SWQsXHJcbiAgR2V0Q29tcGFueVBvc3RzLFxyXG4gIEdldENvbXBhbnlMaXN0aW5ncyxcclxuICBHZXRDYXRpZ29yaWVzLFxyXG4gIENyZWF0ZU5ld0xpc3RpbmcsXHJcbn0gZnJvbSBcIi4vY29tcGFueS5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7IHVwbG9hZCB9IGZyb20gXCIuLi9GaWxlVXBsb2FkZXIvZmlsZVVwbG9hZGVyLmNvbnRyb2xsZXJcIjtcclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgR2V0Q29tcGFueUJ5SWQ6IChyZXEsIHJlcykgPT4ge1xyXG4gICAgY29uc3QgY29tcGFueUlkID0gcmVxLnF1ZXJ5LkNvbXBhbnlJZDtcclxuICAgIEdldENvbXBhbnlCeUlkKGNvbXBhbnlJZCwgKHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoIXJlc3VsdC5TdGF0dXMpIHJlcy5zdGF0dXMoNTAwKTtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKHJlc3VsdCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIEdldENvbXBhbnlQb3N0czogKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjb25zdCBjb21wYW55SWQgPSByZXEucXVlcnkuQ29tcGFueUlkO1xyXG4gICAgY29uc3Qgb2Zmc2V0ID0gcmVxLnF1ZXJ5Lm9mZnNldDtcclxuICAgIEdldENvbXBhbnlQb3N0cyhjb21wYW55SWQsIG9mZnNldCwgKHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoIXJlc3VsdC5TdGF0dXMpIHJlcy5zdGF0dXMoNTAwKTtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKHJlc3VsdCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIEdldENvbXBhbnlMaXN0aW5nczogKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjaGVja0NvbXBhbnlBdXRoKHJlcS51c2VySWQsIChyZXNwb25zZSkgPT4ge1xyXG4gICAgICBpZiAocmVzcG9uc2UuU3RhdHVzKSB7XHJcbiAgICAgICAgY29uc3QgY29tcGFueUlkID0gcmVzcG9uc2UuUmVmcmVuY2VbMF0uQ29tcGFueUlkO1xyXG4gICAgICAgIEdldENvbXBhbnlMaXN0aW5ncyhjb21wYW55SWQsIChyZXN1bHQpID0+IHtcclxuICAgICAgICAgIGlmICghcmVzdWx0LlN0YXR1cykgcmVzLnN0YXR1cyg1MDApO1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHJlc3VsdCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHJlc3BvbnNlKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfSxcclxuICBHZXRDYXRpZ29yaWVzOiAocmVxLCByZXMpID0+IHtcclxuICAgIEdldENhdGlnb3JpZXMoKHJlc3VsdCkgPT4ge1xyXG4gICAgICBpZiAoIXJlc3VsdC5TdGF0dXMpIHJlcy5zdGF0dXMoNTAwKTtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKHJlc3VsdCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIENyZWF0ZU5ld0xpc3Rpbmc6IChyZXEsIHJlcykgPT4ge1xyXG4gICAgY2hlY2tDb21wYW55QXV0aChyZXEudXNlcklkLCAocmVzcG9uc2UpID0+IHtcclxuICAgICAgaWYgKHJlc3BvbnNlLlN0YXR1cykge1xyXG4gICAgICAgIGNvbnN0IG1vZGFsID0ge1xyXG4gICAgICAgICAgQ29tcGFueUlkOiByZXNwb25zZS5SZWZyZW5jZVswXS5Db21wYW55SWQsXHJcbiAgICAgICAgICBMaXN0aW5nRGF0YTogcmVxLmJvZHkuTGlzdGluZ0RhdGEsXHJcbiAgICAgICAgICBMaXN0aW5nSW1hZ2U6IHJlcS5ib2R5Lkxpc3RpbmdJbWFnZSxcclxuICAgICAgICAgIExpc3RpbmdIZWFkZXI6IHJlcS5ib2R5Lkxpc3RpbmdIZWFkZXIsXHJcbiAgICAgICAgICBVc2VySWQ6IHJlcS51c2VySWQsXHJcbiAgICAgICAgICBEYXRlQWRkZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgICAgICB9O1xyXG4gICAgICAgIENyZWF0ZU5ld0xpc3RpbmcobW9kYWwsIChyZXN1bHQpID0+IHtcclxuICAgICAgICAgIGlmICghcmVzdWx0LlN0YXR1cykgcmVzLnN0YXR1cyg1MDApO1xyXG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHJlc3VsdCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHJlc3BvbnNlKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfSxcclxuICBHZXRDb21wYW55QnlSb3V0ZWRJZDogKHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjaGVja0NvbXBhbnlBdXRoKHJlcS51c2VySWQsIChyZXNwb25zZSkgPT4ge1xyXG4gICAgICBpZiAocmVzcG9uc2UuU3RhdHVzKSB7XHJcbiAgICAgICAgY29uc3QgY29tcGFueUlkID0gcmVzcG9uc2UuUmVmcmVuY2VbMF0uQ29tcGFueUlkO1xyXG4gICAgICAgIEdldENvbXBhbnlCeUlkKGNvbXBhbnlJZCwgKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgaWYgKCFyZXN1bHQuU3RhdHVzKSByZXMuc3RhdHVzKDUwMCk7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24ocmVzdWx0KTtcclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24ocmVzcG9uc2UpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIGNoZWNrQ29tcGFueUF1dGg6KHJlcSwgcmVzKSA9PiB7XHJcbiAgICBjaGVja0NvbXBhbnlBdXRoKHJlcS51c2VySWQgLCByZXN1bHQgPT57XHJcbiAgICAgIHJlc3VsdC5SZWZyZW5jZSA9IHJlc3VsdC5SZWZyZW5jZVswXS5Db21wYW55SWQ7XHJcbiAgICAgIHJldHVybiByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "company.controller.js"
      ],
      "names": [
        "module",
        "exports",
        "GetCompanyById",
        "req",
        "res",
        "companyId",
        "query",
        "CompanyId",
        "result",
        "Status",
        "status",
        "json",
        "GetCompanyPosts",
        "offset",
        "GetCompanyListings",
        "userId",
        "response",
        "Refrence",
        "GetCatigories",
        "CreateNewListing",
        "modal",
        "ListingData",
        "body",
        "ListingImage",
        "ListingHeader",
        "UserId",
        "DateAdded",
        "Date",
        "toISOString",
        "GetCompanyByRoutedId",
        "checkCompanyAuth"
      ],
      "mappings": ";;AAAA;;AAQA;;AACAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,cAAc,EAAE,wBAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,QAAMC,SAAS,GAAGF,GAAG,CAACG,KAAJ,CAAUC,SAA5B;AACA,iCAAeF,SAAf,EAA0B,UAACG,MAAD,EAAY;AACpC,UAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBL,GAAG,CAACM,MAAJ,CAAW,GAAX;AACpB,aAAON,GAAG,CAACO,IAAJ,CAASH,MAAT,CAAP;AACD,KAHD;AAID,GAPc;AAQfI,EAAAA,eAAe,EAAE,yBAACT,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAMC,SAAS,GAAGF,GAAG,CAACG,KAAJ,CAAUC,SAA5B;AACA,QAAMM,MAAM,GAAGV,GAAG,CAACG,KAAJ,CAAUO,MAAzB;AACA,kCAAgBR,SAAhB,EAA2BQ,MAA3B,EAAmC,UAACL,MAAD,EAAY;AAC7C,UAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBL,GAAG,CAACM,MAAJ,CAAW,GAAX;AACpB,aAAON,GAAG,CAACO,IAAJ,CAASH,MAAT,CAAP;AACD,KAHD;AAID,GAfc;AAgBfM,EAAAA,kBAAkB,EAAE,4BAACX,GAAD,EAAMC,GAAN,EAAc;AAChC,mCAAiBD,GAAG,CAACY,MAArB,EAA6B,UAACC,QAAD,EAAc;AACzC,UAAIA,QAAQ,CAACP,MAAb,EAAqB;AACnB,YAAMJ,SAAS,GAAGW,QAAQ,CAACC,QAAT,CAAkB,CAAlB,EAAqBV,SAAvC;AACA,yCAAmBF,SAAnB,EAA8B,UAACG,MAAD,EAAY;AACxC,cAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBL,GAAG,CAACM,MAAJ,CAAW,GAAX;AACpB,iBAAON,GAAG,CAACO,IAAJ,CAASH,MAAT,CAAP;AACD,SAHD;AAID,OAND,MAMO;AACL,eAAOJ,GAAG,CAACO,IAAJ,CAASK,QAAT,CAAP;AACD;AACF,KAVD;AAWD,GA5Bc;AA6BfE,EAAAA,aAAa,EAAE,uBAACf,GAAD,EAAMC,GAAN,EAAc;AAC3B,gCAAc,UAACI,MAAD,EAAY;AACxB,UAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBL,GAAG,CAACM,MAAJ,CAAW,GAAX;AACpB,aAAON,GAAG,CAACO,IAAJ,CAASH,MAAT,CAAP;AACD,KAHD;AAID,GAlCc;AAmCfW,EAAAA,gBAAgB,EAAE,0BAAChB,GAAD,EAAMC,GAAN,EAAc;AAC9B,mCAAiBD,GAAG,CAACY,MAArB,EAA6B,UAACC,QAAD,EAAc;AACzC,UAAIA,QAAQ,CAACP,MAAb,EAAqB;AACnB,YAAMW,KAAK,GAAG;AACZb,UAAAA,SAAS,EAAES,QAAQ,CAACC,QAAT,CAAkB,CAAlB,EAAqBV,SADpB;AAEZc,UAAAA,WAAW,EAAElB,GAAG,CAACmB,IAAJ,CAASD,WAFV;AAGZE,UAAAA,YAAY,EAAEpB,GAAG,CAACmB,IAAJ,CAASC,YAHX;AAIZC,UAAAA,aAAa,EAAErB,GAAG,CAACmB,IAAJ,CAASE,aAJZ;AAKZC,UAAAA,MAAM,EAAEtB,GAAG,CAACY,MALA;AAMZW,UAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX;AANC,SAAd;AAQA,uCAAiBR,KAAjB,EAAwB,UAACZ,MAAD,EAAY;AAClC,cAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBL,GAAG,CAACM,MAAJ,CAAW,GAAX;AACpB,iBAAON,GAAG,CAACO,IAAJ,CAASH,MAAT,CAAP;AACD,SAHD;AAID,OAbD,MAaO;AACL,eAAOJ,GAAG,CAACO,IAAJ,CAASK,QAAT,CAAP;AACD;AACF,KAjBD;AAkBD,GAtDc;AAuDfa,EAAAA,oBAAoB,EAAE,8BAAC1B,GAAD,EAAMC,GAAN,EAAc;AAClC,mCAAiBD,GAAG,CAACY,MAArB,EAA6B,UAACC,QAAD,EAAc;AACzC,UAAIA,QAAQ,CAACP,MAAb,EAAqB;AACnB,YAAMJ,SAAS,GAAGW,QAAQ,CAACC,QAAT,CAAkB,CAAlB,EAAqBV,SAAvC;AACA,qCAAeF,SAAf,EAA0B,UAACG,MAAD,EAAY;AACpC,cAAI,CAACA,MAAM,CAACC,MAAZ,EAAoBL,GAAG,CAACM,MAAJ,CAAW,GAAX;AACpB,iBAAON,GAAG,CAACO,IAAJ,CAASH,MAAT,CAAP;AACD,SAHD;AAID,OAND,MAMO;AACL,eAAOJ,GAAG,CAACO,IAAJ,CAASK,QAAT,CAAP;AACD;AACF,KAVD;AAWD,GAnEc;AAoEfc,EAAAA,gBAAgB,EAAC,0BAAC3B,GAAD,EAAMC,GAAN,EAAc;AAC7B,mCAAiBD,GAAG,CAACY,MAArB,EAA8B,UAAAP,MAAM,EAAG;AACrCA,MAAAA,MAAM,CAACS,QAAP,GAAkBT,MAAM,CAACS,QAAP,CAAgB,CAAhB,EAAmBV,SAArC;AACA,aAAOH,GAAG,CAACO,IAAJ,CAASH,MAAT,CAAP;AACD,KAHD;AAID;AAzEc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\",
      "sourcesContent": [
        "import {\r\n  checkCompanyAuth,\r\n  GetCompanyById,\r\n  GetCompanyPosts,\r\n  GetCompanyListings,\r\n  GetCatigories,\r\n  CreateNewListing,\r\n} from \"./company.service\";\r\nimport { upload } from \"../FileUploader/fileUploader.controller\";\r\nmodule.exports = {\r\n  GetCompanyById: (req, res) => {\r\n    const companyId = req.query.CompanyId;\r\n    GetCompanyById(companyId, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  GetCompanyPosts: (req, res) => {\r\n    const companyId = req.query.CompanyId;\r\n    const offset = req.query.offset;\r\n    GetCompanyPosts(companyId, offset, (result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  GetCompanyListings: (req, res) => {\r\n    checkCompanyAuth(req.userId, (response) => {\r\n      if (response.Status) {\r\n        const companyId = response.Refrence[0].CompanyId;\r\n        GetCompanyListings(companyId, (result) => {\r\n          if (!result.Status) res.status(500);\r\n          return res.json(result);\r\n        });\r\n      } else {\r\n        return res.json(response);\r\n      }\r\n    });\r\n  },\r\n  GetCatigories: (req, res) => {\r\n    GetCatigories((result) => {\r\n      if (!result.Status) res.status(500);\r\n      return res.json(result);\r\n    });\r\n  },\r\n  CreateNewListing: (req, res) => {\r\n    checkCompanyAuth(req.userId, (response) => {\r\n      if (response.Status) {\r\n        const modal = {\r\n          CompanyId: response.Refrence[0].CompanyId,\r\n          ListingData: req.body.ListingData,\r\n          ListingImage: req.body.ListingImage,\r\n          ListingHeader: req.body.ListingHeader,\r\n          UserId: req.userId,\r\n          DateAdded: new Date().toISOString(),\r\n        };\r\n        CreateNewListing(modal, (result) => {\r\n          if (!result.Status) res.status(500);\r\n          return res.json(result);\r\n        });\r\n      } else {\r\n        return res.json(response);\r\n      }\r\n    });\r\n  },\r\n  GetCompanyByRoutedId: (req, res) => {\r\n    checkCompanyAuth(req.userId, (response) => {\r\n      if (response.Status) {\r\n        const companyId = response.Refrence[0].CompanyId;\r\n        GetCompanyById(companyId, (result) => {\r\n          if (!result.Status) res.status(500);\r\n          return res.json(result);\r\n        });\r\n      } else {\r\n        return res.json(response);\r\n      }\r\n    });\r\n  },\r\n  checkCompanyAuth:(req, res) => {\r\n    checkCompanyAuth(req.userId , result =>{\r\n      result.Refrence = result.Refrence[0].CompanyId;\r\n      return res.json(result);\r\n    });\r\n  }\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611346801219
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\companies\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\companies\\\\company.service.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\company.service.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\company.service.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\company.service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\",
        "sourceFileName": "company.service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _response = require(\"../../model/response\");\n\nvar _DalilikDAL = require(\"../../DataAccess/DalilikDAL\");\n\nmodule.exports = {\n  checkCompanyAuth: function checkCompanyAuth(userId, Callback) {\n    var response = new _response.Response();\n    (0, _DalilikDAL.GenerateSelectWithWhere)(\"systemuser\", {\n      Id: userId\n    }, function (result) {\n      if (result.Refrence[0].CompanyId) {\n        response = result;\n        response.Status = true;\n      } else {\n        response = result;\n        response.Status = false;\n        response.Description = \"ليس لديك صلاحية للعنصر المطلوب\";\n      }\n\n      Callback(response);\n    });\n  },\n  GetCompanyById: function GetCompanyById(CompanyId, Callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhere)(\"GetCompanies\", {\n      Id: CompanyId\n    }, function (result) {\n      Callback(result);\n    });\n  },\n  GetCompanyPosts: function GetCompanyPosts(CompanyId, offset, Callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhereLimitOffSet)(\"UserPosts\", {\n      CompanyId: CompanyId\n    }, 5, offset, function (result) {\n      Callback(result);\n    });\n  },\n  GetCompanyListings: function GetCompanyListings(CompanyId, Callback) {\n    (0, _DalilikDAL.GenerateSelectWithWhere)(\"CompanyProfilePostedListings\", {\n      CompanyId: CompanyId\n    }, function (result) {\n      Callback(result);\n    });\n  },\n  GetCatigories: function GetCatigories(Callback) {\n    (0, _DalilikDAL.GenerateSelect)(\"catigory\", function (result) {\n      Callback(result);\n    });\n  },\n  CreateNewListing: function CreateNewListing(Modal, Callback) {\n    (0, _DalilikDAL.GenerateInsert)(\"listings\", Modal, function (result) {\n      Callback(result);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBhbnkuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY2hlY2tDb21wYW55QXV0aCIsInVzZXJJZCIsIkNhbGxiYWNrIiwicmVzcG9uc2UiLCJSZXNwb25zZSIsIklkIiwicmVzdWx0IiwiUmVmcmVuY2UiLCJDb21wYW55SWQiLCJTdGF0dXMiLCJEZXNjcmlwdGlvbiIsIkdldENvbXBhbnlCeUlkIiwiR2V0Q29tcGFueVBvc3RzIiwib2Zmc2V0IiwiR2V0Q29tcGFueUxpc3RpbmdzIiwiR2V0Q2F0aWdvcmllcyIsIkNyZWF0ZU5ld0xpc3RpbmciLCJNb2RhbCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFNQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZDLEVBQUFBLGdCQUFnQixFQUFFLDBCQUFDQyxNQUFELEVBQVNDLFFBQVQsRUFBc0I7QUFDdEMsUUFBSUMsUUFBUSxHQUFHLElBQUlDLGtCQUFKLEVBQWY7QUFDQSw2Q0FBd0IsWUFBeEIsRUFBc0M7QUFBRUMsTUFBQUEsRUFBRSxFQUFFSjtBQUFOLEtBQXRDLEVBQXNELFVBQUNLLE1BQUQsRUFBWTtBQUNoRSxVQUFJQSxNQUFNLENBQUNDLFFBQVAsQ0FBZ0IsQ0FBaEIsRUFBbUJDLFNBQXZCLEVBQWtDO0FBQ2hDTCxRQUFBQSxRQUFRLEdBQUdHLE1BQVg7QUFDQUgsUUFBQUEsUUFBUSxDQUFDTSxNQUFULEdBQWtCLElBQWxCO0FBQ0QsT0FIRCxNQUdPO0FBQ0xOLFFBQUFBLFFBQVEsR0FBR0csTUFBWDtBQUNBSCxRQUFBQSxRQUFRLENBQUNNLE1BQVQsR0FBa0IsS0FBbEI7QUFDQU4sUUFBQUEsUUFBUSxDQUFDTyxXQUFULEdBQXVCLGdDQUF2QjtBQUNEOztBQUNEUixNQUFBQSxRQUFRLENBQUNDLFFBQUQsQ0FBUjtBQUNELEtBVkQ7QUFXRCxHQWRjO0FBZWZRLEVBQUFBLGNBQWMsRUFBRSx3QkFBQ0gsU0FBRCxFQUFZTixRQUFaLEVBQXlCO0FBQ3ZDLDZDQUF3QixjQUF4QixFQUF3QztBQUFFRyxNQUFBQSxFQUFFLEVBQUVHO0FBQU4sS0FBeEMsRUFBMkQsVUFBQ0YsTUFBRCxFQUFZO0FBQ3JFSixNQUFBQSxRQUFRLENBQUNJLE1BQUQsQ0FBUjtBQUNELEtBRkQ7QUFHRCxHQW5CYztBQW9CZk0sRUFBQUEsZUFBZSxFQUFFLHlCQUFDSixTQUFELEVBQVlLLE1BQVosRUFBb0JYLFFBQXBCLEVBQWlDO0FBQ2hELHdEQUNFLFdBREYsRUFFRTtBQUFFTSxNQUFBQSxTQUFTLEVBQUVBO0FBQWIsS0FGRixFQUdFLENBSEYsRUFJRUssTUFKRixFQUtFLFVBQUNQLE1BQUQsRUFBWTtBQUNWSixNQUFBQSxRQUFRLENBQUNJLE1BQUQsQ0FBUjtBQUNELEtBUEg7QUFTRCxHQTlCYztBQStCZlEsRUFBQUEsa0JBQWtCLEVBQUUsNEJBQUNOLFNBQUQsRUFBWU4sUUFBWixFQUF5QjtBQUMzQyw2Q0FDRSw4QkFERixFQUVFO0FBQUVNLE1BQUFBLFNBQVMsRUFBRUE7QUFBYixLQUZGLEVBR0UsVUFBQ0YsTUFBRCxFQUFZO0FBQ1ZKLE1BQUFBLFFBQVEsQ0FBQ0ksTUFBRCxDQUFSO0FBQ0QsS0FMSDtBQU9ELEdBdkNjO0FBd0NmUyxFQUFBQSxhQUFhLEVBQUUsdUJBQUNiLFFBQUQsRUFBYztBQUMzQixvQ0FBZSxVQUFmLEVBQTJCLFVBQUNJLE1BQUQsRUFBWTtBQUNyQ0osTUFBQUEsUUFBUSxDQUFDSSxNQUFELENBQVI7QUFDRCxLQUZEO0FBR0QsR0E1Q2M7QUE2Q2ZVLEVBQUFBLGdCQUFnQixFQUFFLDBCQUFDQyxLQUFELEVBQVFmLFFBQVIsRUFBcUI7QUFDckMsb0NBQWUsVUFBZixFQUEyQmUsS0FBM0IsRUFBa0MsVUFBQ1gsTUFBRCxFQUFZO0FBQzVDSixNQUFBQSxRQUFRLENBQUNJLE1BQUQsQ0FBUjtBQUNELEtBRkQ7QUFHRDtBQWpEYyxDQUFqQiIsInNvdXJjZVJvb3QiOiJEOlxcUHJvamVjdFxcV2ViU2l0ZXNcXERhbGlsa1xcc2VydmVyXFxhcGlcXGNvbXBhbmllc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVzcG9uc2UgfSBmcm9tIFwiLi4vLi4vbW9kZWwvcmVzcG9uc2VcIjtcclxuaW1wb3J0IHtcclxuICBHZW5lcmF0ZVNlbGVjdCxcclxuICBHZW5lcmF0ZVNlbGVjdFdpdGhXaGVyZSxcclxuICBHZW5lcmF0ZVNlbGVjdFdpdGhXaGVyZUxpbWl0T2ZmU2V0LFxyXG4gIEdlbmVyYXRlSW5zZXJ0LFxyXG59IGZyb20gXCIuLi8uLi9EYXRhQWNjZXNzL0RhbGlsaWtEQUxcIjtcclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgY2hlY2tDb21wYW55QXV0aDogKHVzZXJJZCwgQ2FsbGJhY2spID0+IHtcclxuICAgIGxldCByZXNwb25zZSA9IG5ldyBSZXNwb25zZSgpO1xyXG4gICAgR2VuZXJhdGVTZWxlY3RXaXRoV2hlcmUoXCJzeXN0ZW11c2VyXCIsIHsgSWQ6IHVzZXJJZCB9LCAocmVzdWx0KSA9PiB7XHJcbiAgICAgIGlmIChyZXN1bHQuUmVmcmVuY2VbMF0uQ29tcGFueUlkKSB7XHJcbiAgICAgICAgcmVzcG9uc2UgPSByZXN1bHQ7XHJcbiAgICAgICAgcmVzcG9uc2UuU3RhdHVzID0gdHJ1ZTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXNwb25zZSA9IHJlc3VsdDtcclxuICAgICAgICByZXNwb25zZS5TdGF0dXMgPSBmYWxzZTtcclxuICAgICAgICByZXNwb25zZS5EZXNjcmlwdGlvbiA9IFwi2YTZitizINmE2K/ZitmDINi12YTYp9it2YrYqSDZhNmE2LnZhti12LEg2KfZhNmF2LfZhNmI2KhcIjtcclxuICAgICAgfVxyXG4gICAgICBDYWxsYmFjayhyZXNwb25zZSk7XHJcbiAgICB9KTtcclxuICB9LFxyXG4gIEdldENvbXBhbnlCeUlkOiAoQ29tcGFueUlkLCBDYWxsYmFjaykgPT4ge1xyXG4gICAgR2VuZXJhdGVTZWxlY3RXaXRoV2hlcmUoXCJHZXRDb21wYW5pZXNcIiwgeyBJZDogQ29tcGFueUlkIH0sIChyZXN1bHQpID0+IHtcclxuICAgICAgQ2FsbGJhY2socmVzdWx0KTtcclxuICAgIH0pO1xyXG4gIH0sXHJcbiAgR2V0Q29tcGFueVBvc3RzOiAoQ29tcGFueUlkLCBvZmZzZXQsIENhbGxiYWNrKSA9PiB7XHJcbiAgICBHZW5lcmF0ZVNlbGVjdFdpdGhXaGVyZUxpbWl0T2ZmU2V0KFxyXG4gICAgICBcIlVzZXJQb3N0c1wiLFxyXG4gICAgICB7IENvbXBhbnlJZDogQ29tcGFueUlkIH0sXHJcbiAgICAgIDUsXHJcbiAgICAgIG9mZnNldCxcclxuICAgICAgKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIENhbGxiYWNrKHJlc3VsdCk7XHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfSxcclxuICBHZXRDb21wYW55TGlzdGluZ3M6IChDb21wYW55SWQsIENhbGxiYWNrKSA9PiB7XHJcbiAgICBHZW5lcmF0ZVNlbGVjdFdpdGhXaGVyZShcclxuICAgICAgXCJDb21wYW55UHJvZmlsZVBvc3RlZExpc3RpbmdzXCIsXHJcbiAgICAgIHsgQ29tcGFueUlkOiBDb21wYW55SWQgfSxcclxuICAgICAgKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgIENhbGxiYWNrKHJlc3VsdCk7XHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfSxcclxuICBHZXRDYXRpZ29yaWVzOiAoQ2FsbGJhY2spID0+IHtcclxuICAgIEdlbmVyYXRlU2VsZWN0KFwiY2F0aWdvcnlcIiwgKHJlc3VsdCkgPT4ge1xyXG4gICAgICBDYWxsYmFjayhyZXN1bHQpO1xyXG4gICAgfSk7XHJcbiAgfSxcclxuICBDcmVhdGVOZXdMaXN0aW5nOiAoTW9kYWwsIENhbGxiYWNrKSA9PiB7XHJcbiAgICBHZW5lcmF0ZUluc2VydChcImxpc3RpbmdzXCIsIE1vZGFsLCAocmVzdWx0KSA9PiB7XHJcbiAgICAgIENhbGxiYWNrKHJlc3VsdCk7XHJcbiAgICB9KTtcclxuICB9LFxyXG59O1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "company.service.js"
      ],
      "names": [
        "module",
        "exports",
        "checkCompanyAuth",
        "userId",
        "Callback",
        "response",
        "Response",
        "Id",
        "result",
        "Refrence",
        "CompanyId",
        "Status",
        "Description",
        "GetCompanyById",
        "GetCompanyPosts",
        "offset",
        "GetCompanyListings",
        "GetCatigories",
        "CreateNewListing",
        "Modal"
      ],
      "mappings": ";;AAAA;;AACA;;AAMAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,gBAAgB,EAAE,0BAACC,MAAD,EAASC,QAAT,EAAsB;AACtC,QAAIC,QAAQ,GAAG,IAAIC,kBAAJ,EAAf;AACA,6CAAwB,YAAxB,EAAsC;AAAEC,MAAAA,EAAE,EAAEJ;AAAN,KAAtC,EAAsD,UAACK,MAAD,EAAY;AAChE,UAAIA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBC,SAAvB,EAAkC;AAChCL,QAAAA,QAAQ,GAAGG,MAAX;AACAH,QAAAA,QAAQ,CAACM,MAAT,GAAkB,IAAlB;AACD,OAHD,MAGO;AACLN,QAAAA,QAAQ,GAAGG,MAAX;AACAH,QAAAA,QAAQ,CAACM,MAAT,GAAkB,KAAlB;AACAN,QAAAA,QAAQ,CAACO,WAAT,GAAuB,gCAAvB;AACD;;AACDR,MAAAA,QAAQ,CAACC,QAAD,CAAR;AACD,KAVD;AAWD,GAdc;AAefQ,EAAAA,cAAc,EAAE,wBAACH,SAAD,EAAYN,QAAZ,EAAyB;AACvC,6CAAwB,cAAxB,EAAwC;AAAEG,MAAAA,EAAE,EAAEG;AAAN,KAAxC,EAA2D,UAACF,MAAD,EAAY;AACrEJ,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACD,KAFD;AAGD,GAnBc;AAoBfM,EAAAA,eAAe,EAAE,yBAACJ,SAAD,EAAYK,MAAZ,EAAoBX,QAApB,EAAiC;AAChD,wDACE,WADF,EAEE;AAAEM,MAAAA,SAAS,EAAEA;AAAb,KAFF,EAGE,CAHF,EAIEK,MAJF,EAKE,UAACP,MAAD,EAAY;AACVJ,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACD,KAPH;AASD,GA9Bc;AA+BfQ,EAAAA,kBAAkB,EAAE,4BAACN,SAAD,EAAYN,QAAZ,EAAyB;AAC3C,6CACE,8BADF,EAEE;AAAEM,MAAAA,SAAS,EAAEA;AAAb,KAFF,EAGE,UAACF,MAAD,EAAY;AACVJ,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACD,KALH;AAOD,GAvCc;AAwCfS,EAAAA,aAAa,EAAE,uBAACb,QAAD,EAAc;AAC3B,oCAAe,UAAf,EAA2B,UAACI,MAAD,EAAY;AACrCJ,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACD,KAFD;AAGD,GA5Cc;AA6CfU,EAAAA,gBAAgB,EAAE,0BAACC,KAAD,EAAQf,QAAR,EAAqB;AACrC,oCAAe,UAAf,EAA2Be,KAA3B,EAAkC,UAACX,MAAD,EAAY;AAC5CJ,MAAAA,QAAQ,CAACI,MAAD,CAAR;AACD,KAFD;AAGD;AAjDc,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\companies\\",
      "sourcesContent": [
        "import { Response } from \"../../model/response\";\r\nimport {\r\n  GenerateSelect,\r\n  GenerateSelectWithWhere,\r\n  GenerateSelectWithWhereLimitOffSet,\r\n  GenerateInsert,\r\n} from \"../../DataAccess/DalilikDAL\";\r\nmodule.exports = {\r\n  checkCompanyAuth: (userId, Callback) => {\r\n    let response = new Response();\r\n    GenerateSelectWithWhere(\"systemuser\", { Id: userId }, (result) => {\r\n      if (result.Refrence[0].CompanyId) {\r\n        response = result;\r\n        response.Status = true;\r\n      } else {\r\n        response = result;\r\n        response.Status = false;\r\n        response.Description = \"ليس لديك صلاحية للعنصر المطلوب\";\r\n      }\r\n      Callback(response);\r\n    });\r\n  },\r\n  GetCompanyById: (CompanyId, Callback) => {\r\n    GenerateSelectWithWhere(\"GetCompanies\", { Id: CompanyId }, (result) => {\r\n      Callback(result);\r\n    });\r\n  },\r\n  GetCompanyPosts: (CompanyId, offset, Callback) => {\r\n    GenerateSelectWithWhereLimitOffSet(\r\n      \"UserPosts\",\r\n      { CompanyId: CompanyId },\r\n      5,\r\n      offset,\r\n      (result) => {\r\n        Callback(result);\r\n      }\r\n    );\r\n  },\r\n  GetCompanyListings: (CompanyId, Callback) => {\r\n    GenerateSelectWithWhere(\r\n      \"CompanyProfilePostedListings\",\r\n      { CompanyId: CompanyId },\r\n      (result) => {\r\n        Callback(result);\r\n      }\r\n    );\r\n  },\r\n  GetCatigories: (Callback) => {\r\n    GenerateSelect(\"catigory\", (result) => {\r\n      Callback(result);\r\n    });\r\n  },\r\n  CreateNewListing: (Modal, Callback) => {\r\n    GenerateInsert(\"listings\", Modal, (result) => {\r\n      Callback(result);\r\n    });\r\n  },\r\n};\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611345744746
  },
  "{\"sourceRoot\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\FileUploader\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"filename\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\\\\server\\\\api\\\\FileUploader\\\\fileUploader.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"D:\\\\Project\\\\WebSites\\\\Dalilk\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.9": {
    "metadata": {},
    "options": {
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "D:\\Project\\WebSites\\Dalilk",
      "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\fileUploader.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "D:\\Project\\WebSites\\Dalilk",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\fileUploader.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\fileUploader.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\",
        "sourceFileName": "fileUploader.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar multer = require(\"multer\");\n\nvar fs = require(\"fs\");\n\nvar port = process.env.PORT || 5000;\nvar host = process.env.HOST || localhost;\n\nvar getListFiles = function getListFiles(req, res) {\n  var directoryPath = \"./uploads/\";\n  fs.readdir(directoryPath, function (err, files) {\n    if (err) {\n      res.status(500).send({\n        message: \"Unable to scan files!\"\n      });\n    }\n\n    var fileInfos = [];\n    files.forEach(function (file) {\n      fileInfos.push({\n        name: file,\n        url: host + \":\" + port + '/files/' + file\n      });\n    });\n    res.status(200).send(fileInfos);\n  });\n};\n\nvar download = function download(req, res) {\n  var fileName = req.params.name;\n  var directoryPath = \"./uploads/\";\n  res.download(directoryPath + fileName, fileName, function (err) {\n    if (err) {\n      console.log(err);\n      res.status(500).send({\n        message: \"Could not download the file. \" + err\n      });\n    }\n  });\n};\n\nvar fileFilter = function fileFilter(req, file, cb) {\n  var allowedTypes = [\"image/jpeg\", \"image/jpg\", \"image/png\"];\n\n  if (!allowedTypes.includes(file.mimetype)) {\n    var err = new Error(\"Incorrect File\");\n    err.code(\"INCORRECT_FILETYPE\");\n    return cb(err, false);\n  }\n\n  return cb(null, true);\n};\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, cb) {\n    cb(null, \"./uploads\");\n  },\n  filename: function filename(req, file, cb) {\n    cb(null, file.fieldname + \"-\" + Date.now());\n  }\n});\nvar upload = multer({\n  dest: \"./uploads\",\n  fileFilter: fileFilter,\n  storage: storage,\n  limits: {\n    fileSize: 500000\n  }\n});\nmodule.exports = {\n  upload: upload,\n  download: download,\n  getListFiles: getListFiles\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbGVVcGxvYWRlci5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIm11bHRlciIsInJlcXVpcmUiLCJmcyIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImhvc3QiLCJIT1NUIiwibG9jYWxob3N0IiwiZ2V0TGlzdEZpbGVzIiwicmVxIiwicmVzIiwiZGlyZWN0b3J5UGF0aCIsInJlYWRkaXIiLCJlcnIiLCJmaWxlcyIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwiZmlsZUluZm9zIiwiZm9yRWFjaCIsImZpbGUiLCJwdXNoIiwibmFtZSIsInVybCIsImRvd25sb2FkIiwiZmlsZU5hbWUiLCJwYXJhbXMiLCJjb25zb2xlIiwibG9nIiwiZmlsZUZpbHRlciIsImNiIiwiYWxsb3dlZFR5cGVzIiwiaW5jbHVkZXMiLCJtaW1ldHlwZSIsIkVycm9yIiwiY29kZSIsInN0b3JhZ2UiLCJkaXNrU3RvcmFnZSIsImRlc3RpbmF0aW9uIiwiZmlsZW5hbWUiLCJmaWVsZG5hbWUiLCJEYXRlIiwibm93IiwidXBsb2FkIiwiZGVzdCIsImxpbWl0cyIsImZpbGVTaXplIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLElBQU1DLEVBQUUsR0FBR0QsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUNBLElBQU1DLElBQUksR0FBR0gsT0FBTyxDQUFDQyxHQUFSLENBQVlHLElBQVosSUFBb0JDLFNBQWpDOztBQUNBLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pDLE1BQU1DLGFBQWEsR0FBRyxZQUF0QjtBQUVBWCxFQUFBQSxFQUFFLENBQUNZLE9BQUgsQ0FBV0QsYUFBWCxFQUEwQixVQUFVRSxHQUFWLEVBQWVDLEtBQWYsRUFBc0I7QUFDOUMsUUFBSUQsR0FBSixFQUFTO0FBQ1BILE1BQUFBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ25CQyxRQUFBQSxPQUFPLEVBQUU7QUFEVSxPQUFyQjtBQUdEOztBQUVELFFBQUlDLFNBQVMsR0FBRyxFQUFoQjtBQUVBSixJQUFBQSxLQUFLLENBQUNLLE9BQU4sQ0FBYyxVQUFDQyxJQUFELEVBQVU7QUFDdEJGLE1BQUFBLFNBQVMsQ0FBQ0csSUFBVixDQUFlO0FBQ2JDLFFBQUFBLElBQUksRUFBRUYsSUFETztBQUViRyxRQUFBQSxHQUFHLEVBQUVsQixJQUFJLEdBQUcsR0FBUCxHQUFhSixJQUFiLEdBQW9CLFNBQXBCLEdBQWdDbUI7QUFGeEIsT0FBZjtBQUlELEtBTEQ7QUFPQVYsSUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUJFLFNBQXJCO0FBQ0QsR0FqQkQ7QUFrQkQsQ0FyQkQ7O0FBdUJBLElBQU1NLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQUNmLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCLE1BQU1lLFFBQVEsR0FBR2hCLEdBQUcsQ0FBQ2lCLE1BQUosQ0FBV0osSUFBNUI7QUFDQSxNQUFNWCxhQUFhLEdBQUcsWUFBdEI7QUFFQUQsRUFBQUEsR0FBRyxDQUFDYyxRQUFKLENBQWFiLGFBQWEsR0FBR2MsUUFBN0IsRUFBdUNBLFFBQXZDLEVBQWlELFVBQUNaLEdBQUQsRUFBUztBQUN4RCxRQUFJQSxHQUFKLEVBQVM7QUFDTGMsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlmLEdBQVo7QUFDRkgsTUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDbkJDLFFBQUFBLE9BQU8sRUFBRSxrQ0FBa0NKO0FBRHhCLE9BQXJCO0FBR0Q7QUFDRixHQVBEO0FBUUQsQ0FaRDs7QUFjQSxJQUFNZ0IsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQ3BCLEdBQUQsRUFBTVcsSUFBTixFQUFZVSxFQUFaLEVBQW1CO0FBQ3BDLE1BQU1DLFlBQVksR0FBRyxDQUFDLFlBQUQsRUFBZSxXQUFmLEVBQTRCLFdBQTVCLENBQXJCOztBQUNBLE1BQUksQ0FBQ0EsWUFBWSxDQUFDQyxRQUFiLENBQXNCWixJQUFJLENBQUNhLFFBQTNCLENBQUwsRUFBMkM7QUFDekMsUUFBTXBCLEdBQUcsR0FBRyxJQUFJcUIsS0FBSixDQUFVLGdCQUFWLENBQVo7QUFDQXJCLElBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUyxvQkFBVDtBQUVBLFdBQU9MLEVBQUUsQ0FBQ2pCLEdBQUQsRUFBTSxLQUFOLENBQVQ7QUFDRDs7QUFFRCxTQUFPaUIsRUFBRSxDQUFDLElBQUQsRUFBTyxJQUFQLENBQVQ7QUFDRCxDQVZEOztBQVdBLElBQU1NLE9BQU8sR0FBR3RDLE1BQU0sQ0FBQ3VDLFdBQVAsQ0FBbUI7QUFDakNDLEVBQUFBLFdBQVcsRUFBRSxxQkFBVTdCLEdBQVYsRUFBZVcsSUFBZixFQUFxQlUsRUFBckIsRUFBeUI7QUFDcENBLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU8sV0FBUCxDQUFGO0FBQ0QsR0FIZ0M7QUFJakNTLEVBQUFBLFFBQVEsRUFBRSxrQkFBVTlCLEdBQVYsRUFBZVcsSUFBZixFQUFxQlUsRUFBckIsRUFBeUI7QUFDakNBLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU9WLElBQUksQ0FBQ29CLFNBQUwsR0FBaUIsR0FBakIsR0FBdUJDLElBQUksQ0FBQ0MsR0FBTCxFQUE5QixDQUFGO0FBQ0Q7QUFOZ0MsQ0FBbkIsQ0FBaEI7QUFRQSxJQUFNQyxNQUFNLEdBQUc3QyxNQUFNLENBQUM7QUFDcEI4QyxFQUFBQSxJQUFJLEVBQUUsV0FEYztBQUVwQmYsRUFBQUEsVUFBVSxFQUFWQSxVQUZvQjtBQUdwQk8sRUFBQUEsT0FBTyxFQUFFQSxPQUhXO0FBSXBCUyxFQUFBQSxNQUFNLEVBQUU7QUFDTkMsSUFBQUEsUUFBUSxFQUFFO0FBREo7QUFKWSxDQUFELENBQXJCO0FBUUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiTCxFQUFBQSxNQUFNLEVBQU5BLE1BRGE7QUFFYm5CLEVBQUFBLFFBQVEsRUFBUkEsUUFGYTtBQUdiaEIsRUFBQUEsWUFBWSxFQUFaQTtBQUhhLENBQWpCIiwic291cmNlUm9vdCI6IkQ6XFxQcm9qZWN0XFxXZWJTaXRlc1xcRGFsaWxrXFxzZXJ2ZXJcXGFwaVxcRmlsZVVwbG9hZGVyXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtdWx0ZXIgPSByZXF1aXJlKFwibXVsdGVyXCIpO1xyXG5jb25zdCBmcyA9IHJlcXVpcmUoXCJmc1wiKTtcclxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNTAwMDtcclxuY29uc3QgaG9zdCA9IHByb2Nlc3MuZW52LkhPU1QgfHwgbG9jYWxob3N0O1xyXG5jb25zdCBnZXRMaXN0RmlsZXMgPSAocmVxLCByZXMpID0+IHtcclxuICBjb25zdCBkaXJlY3RvcnlQYXRoID0gXCIuL3VwbG9hZHMvXCI7XHJcblxyXG4gIGZzLnJlYWRkaXIoZGlyZWN0b3J5UGF0aCwgZnVuY3Rpb24gKGVyciwgZmlsZXMpIHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoe1xyXG4gICAgICAgIG1lc3NhZ2U6IFwiVW5hYmxlIHRvIHNjYW4gZmlsZXMhXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBmaWxlSW5mb3MgPSBbXTtcclxuXHJcbiAgICBmaWxlcy5mb3JFYWNoKChmaWxlKSA9PiB7XHJcbiAgICAgIGZpbGVJbmZvcy5wdXNoKHtcclxuICAgICAgICBuYW1lOiBmaWxlLFxyXG4gICAgICAgIHVybDogaG9zdCArIFwiOlwiICsgcG9ydCArICcvZmlsZXMvJyArIGZpbGUsXHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmVzLnN0YXR1cygyMDApLnNlbmQoZmlsZUluZm9zKTtcclxuICB9KTtcclxufTtcclxuXHJcbmNvbnN0IGRvd25sb2FkID0gKHJlcSwgcmVzKSA9PiB7XHJcbiAgY29uc3QgZmlsZU5hbWUgPSByZXEucGFyYW1zLm5hbWU7XHJcbiAgY29uc3QgZGlyZWN0b3J5UGF0aCA9IFwiLi91cGxvYWRzL1wiO1xyXG5cclxuICByZXMuZG93bmxvYWQoZGlyZWN0b3J5UGF0aCArIGZpbGVOYW1lLCBmaWxlTmFtZSwgKGVycikgPT4ge1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKHtcclxuICAgICAgICBtZXNzYWdlOiBcIkNvdWxkIG5vdCBkb3dubG9hZCB0aGUgZmlsZS4gXCIgKyBlcnIsXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH0pO1xyXG59O1xyXG5cclxuY29uc3QgZmlsZUZpbHRlciA9IChyZXEsIGZpbGUsIGNiKSA9PiB7XHJcbiAgY29uc3QgYWxsb3dlZFR5cGVzID0gW1wiaW1hZ2UvanBlZ1wiLCBcImltYWdlL2pwZ1wiLCBcImltYWdlL3BuZ1wiXTtcclxuICBpZiAoIWFsbG93ZWRUeXBlcy5pbmNsdWRlcyhmaWxlLm1pbWV0eXBlKSkge1xyXG4gICAgY29uc3QgZXJyID0gbmV3IEVycm9yKFwiSW5jb3JyZWN0IEZpbGVcIik7XHJcbiAgICBlcnIuY29kZShcIklOQ09SUkVDVF9GSUxFVFlQRVwiKTtcclxuXHJcbiAgICByZXR1cm4gY2IoZXJyLCBmYWxzZSk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gY2IobnVsbCwgdHJ1ZSk7XHJcbn07XHJcbmNvbnN0IHN0b3JhZ2UgPSBtdWx0ZXIuZGlza1N0b3JhZ2Uoe1xyXG4gIGRlc3RpbmF0aW9uOiBmdW5jdGlvbiAocmVxLCBmaWxlLCBjYikge1xyXG4gICAgY2IobnVsbCwgXCIuL3VwbG9hZHNcIik7XHJcbiAgfSxcclxuICBmaWxlbmFtZTogZnVuY3Rpb24gKHJlcSwgZmlsZSwgY2IpIHtcclxuICAgIGNiKG51bGwsIGZpbGUuZmllbGRuYW1lICsgXCItXCIgKyBEYXRlLm5vdygpKTtcclxuICB9LFxyXG59KTtcclxuY29uc3QgdXBsb2FkID0gbXVsdGVyKHtcclxuICBkZXN0OiBcIi4vdXBsb2Fkc1wiLFxyXG4gIGZpbGVGaWx0ZXIsXHJcbiAgc3RvcmFnZTogc3RvcmFnZSxcclxuICBsaW1pdHM6IHtcclxuICAgIGZpbGVTaXplOiA1MDAwMDAsXHJcbiAgfSxcclxufSk7XHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgdXBsb2FkICxcclxuICAgIGRvd25sb2FkLFxyXG4gICAgZ2V0TGlzdEZpbGVzXHJcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "fileUploader.controller.js"
      ],
      "names": [
        "multer",
        "require",
        "fs",
        "port",
        "process",
        "env",
        "PORT",
        "host",
        "HOST",
        "localhost",
        "getListFiles",
        "req",
        "res",
        "directoryPath",
        "readdir",
        "err",
        "files",
        "status",
        "send",
        "message",
        "fileInfos",
        "forEach",
        "file",
        "push",
        "name",
        "url",
        "download",
        "fileName",
        "params",
        "console",
        "log",
        "fileFilter",
        "cb",
        "allowedTypes",
        "includes",
        "mimetype",
        "Error",
        "code",
        "storage",
        "diskStorage",
        "destination",
        "filename",
        "fieldname",
        "Date",
        "now",
        "upload",
        "dest",
        "limits",
        "fileSize",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAME,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,IAAI,GAAGH,OAAO,CAACC,GAAR,CAAYG,IAAZ,IAAoBC,SAAjC;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,GAAN,EAAc;AACjC,MAAMC,aAAa,GAAG,YAAtB;AAEAX,EAAAA,EAAE,CAACY,OAAH,CAAWD,aAAX,EAA0B,UAAUE,GAAV,EAAeC,KAAf,EAAsB;AAC9C,QAAID,GAAJ,EAAS;AACPH,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE;AADU,OAArB;AAGD;;AAED,QAAIC,SAAS,GAAG,EAAhB;AAEAJ,IAAAA,KAAK,CAACK,OAAN,CAAc,UAACC,IAAD,EAAU;AACtBF,MAAAA,SAAS,CAACG,IAAV,CAAe;AACbC,QAAAA,IAAI,EAAEF,IADO;AAEbG,QAAAA,GAAG,EAAElB,IAAI,GAAG,GAAP,GAAaJ,IAAb,GAAoB,SAApB,GAAgCmB;AAFxB,OAAf;AAID,KALD;AAOAV,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,SAArB;AACD,GAjBD;AAkBD,CArBD;;AAuBA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACf,GAAD,EAAMC,GAAN,EAAc;AAC7B,MAAMe,QAAQ,GAAGhB,GAAG,CAACiB,MAAJ,CAAWJ,IAA5B;AACA,MAAMX,aAAa,GAAG,YAAtB;AAEAD,EAAAA,GAAG,CAACc,QAAJ,CAAab,aAAa,GAAGc,QAA7B,EAAuCA,QAAvC,EAAiD,UAACZ,GAAD,EAAS;AACxD,QAAIA,GAAJ,EAAS;AACLc,MAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACFH,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,QAAAA,OAAO,EAAE,kCAAkCJ;AADxB,OAArB;AAGD;AACF,GAPD;AAQD,CAZD;;AAcA,IAAMgB,UAAU,GAAG,SAAbA,UAAa,CAACpB,GAAD,EAAMW,IAAN,EAAYU,EAAZ,EAAmB;AACpC,MAAMC,YAAY,GAAG,CAAC,YAAD,EAAe,WAAf,EAA4B,WAA5B,CAArB;;AACA,MAAI,CAACA,YAAY,CAACC,QAAb,CAAsBZ,IAAI,CAACa,QAA3B,CAAL,EAA2C;AACzC,QAAMpB,GAAG,GAAG,IAAIqB,KAAJ,CAAU,gBAAV,CAAZ;AACArB,IAAAA,GAAG,CAACsB,IAAJ,CAAS,oBAAT;AAEA,WAAOL,EAAE,CAACjB,GAAD,EAAM,KAAN,CAAT;AACD;;AAED,SAAOiB,EAAE,CAAC,IAAD,EAAO,IAAP,CAAT;AACD,CAVD;;AAWA,IAAMM,OAAO,GAAGtC,MAAM,CAACuC,WAAP,CAAmB;AACjCC,EAAAA,WAAW,EAAE,qBAAU7B,GAAV,EAAeW,IAAf,EAAqBU,EAArB,EAAyB;AACpCA,IAAAA,EAAE,CAAC,IAAD,EAAO,WAAP,CAAF;AACD,GAHgC;AAIjCS,EAAAA,QAAQ,EAAE,kBAAU9B,GAAV,EAAeW,IAAf,EAAqBU,EAArB,EAAyB;AACjCA,IAAAA,EAAE,CAAC,IAAD,EAAOV,IAAI,CAACoB,SAAL,GAAiB,GAAjB,GAAuBC,IAAI,CAACC,GAAL,EAA9B,CAAF;AACD;AANgC,CAAnB,CAAhB;AAQA,IAAMC,MAAM,GAAG7C,MAAM,CAAC;AACpB8C,EAAAA,IAAI,EAAE,WADc;AAEpBf,EAAAA,UAAU,EAAVA,UAFoB;AAGpBO,EAAAA,OAAO,EAAEA,OAHW;AAIpBS,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ;AAJY,CAAD,CAArB;AAQAC,MAAM,CAACC,OAAP,GAAiB;AACbL,EAAAA,MAAM,EAANA,MADa;AAEbnB,EAAAA,QAAQ,EAARA,QAFa;AAGbhB,EAAAA,YAAY,EAAZA;AAHa,CAAjB",
      "sourceRoot": "D:\\Project\\WebSites\\Dalilk\\server\\api\\FileUploader\\",
      "sourcesContent": [
        "const multer = require(\"multer\");\r\nconst fs = require(\"fs\");\r\nconst port = process.env.PORT || 5000;\r\nconst host = process.env.HOST || localhost;\r\nconst getListFiles = (req, res) => {\r\n  const directoryPath = \"./uploads/\";\r\n\r\n  fs.readdir(directoryPath, function (err, files) {\r\n    if (err) {\r\n      res.status(500).send({\r\n        message: \"Unable to scan files!\",\r\n      });\r\n    }\r\n\r\n    let fileInfos = [];\r\n\r\n    files.forEach((file) => {\r\n      fileInfos.push({\r\n        name: file,\r\n        url: host + \":\" + port + '/files/' + file,\r\n      });\r\n    });\r\n\r\n    res.status(200).send(fileInfos);\r\n  });\r\n};\r\n\r\nconst download = (req, res) => {\r\n  const fileName = req.params.name;\r\n  const directoryPath = \"./uploads/\";\r\n\r\n  res.download(directoryPath + fileName, fileName, (err) => {\r\n    if (err) {\r\n        console.log(err);\r\n      res.status(500).send({\r\n        message: \"Could not download the file. \" + err,\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nconst fileFilter = (req, file, cb) => {\r\n  const allowedTypes = [\"image/jpeg\", \"image/jpg\", \"image/png\"];\r\n  if (!allowedTypes.includes(file.mimetype)) {\r\n    const err = new Error(\"Incorrect File\");\r\n    err.code(\"INCORRECT_FILETYPE\");\r\n\r\n    return cb(err, false);\r\n  }\r\n\r\n  return cb(null, true);\r\n};\r\nconst storage = multer.diskStorage({\r\n  destination: function (req, file, cb) {\r\n    cb(null, \"./uploads\");\r\n  },\r\n  filename: function (req, file, cb) {\r\n    cb(null, file.fieldname + \"-\" + Date.now());\r\n  },\r\n});\r\nconst upload = multer({\r\n  dest: \"./uploads\",\r\n  fileFilter,\r\n  storage: storage,\r\n  limits: {\r\n    fileSize: 500000,\r\n  },\r\n});\r\nmodule.exports = {\r\n    upload ,\r\n    download,\r\n    getListFiles\r\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1611066175769
  }
}